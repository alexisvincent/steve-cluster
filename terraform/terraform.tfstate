{
    "version": 3,
    "terraform_version": "0.11.7",
    "serial": 2,
    "lineage": "34a00a79-1b79-aeec-25f2-3faf448210ed",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.cl_gateway": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4c1c88eeda963cb46a81bcc60c5e8aff54b3e1853d5449a5a9e24b46d285ce72",
                        "attributes": {
                            "id": "4c1c88eeda963cb46a81bcc60c5e8aff54b3e1853d5449a5a9e24b46d285ce72",
                            "rendered": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n          address=/n14.steve/10.10.1.14\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n          dhcp-host=78:2B:CB:55:54:25,10.10.1.14\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/16\n        Address=10.10.0.1/16\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=10.10.0.1:8080 \\\n            -rpc-address=10.10.0.1:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,10.10.0.1 \\\n            --dhcp-range={{.interface_internal}},10.10.100.50,10.10.100.100,12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://10.10.0.1:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "template": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n${dnsmasq_conf}\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/${subnet_short}\n        Address=${gateway_address}/${subnet_short}\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=${gateway_address}:8080 \\\n            -rpc-address=${gateway_address}:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,${gateway_address} \\\n            --dhcp-range={{.interface_internal}},${dhcp_start},${dhcp_end},12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://${gateway_address}:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "vars.%": "7",
                            "vars.dhcp_end": "10.10.100.100",
                            "vars.dhcp_start": "10.10.100.50",
                            "vars.dnsmasq_conf": "          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n          address=/n14.steve/10.10.1.14\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n          dhcp-host=78:2B:CB:55:54:25,10.10.1.14\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n",
                            "vars.gateway_address": "10.10.0.1",
                            "vars.network_domain": "steve",
                            "vars.subnet_long": "255.255.0.0",
                            "vars.subnet_short": "16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "matchbox_group.install-reboot-n1": {
                    "type": "matchbox_group",
                    "depends_on": [],
                    "primary": {
                        "id": "install-reboot-n1",
                        "attributes": {
                            "id": "install-reboot-n1",
                            "metadata.%": "1",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1",
                            "name": "install-reboot-n1",
                            "profile": "steve-cached-container-linux-install-n1",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:AC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.install-reboot-vm1": {
                    "type": "matchbox_group",
                    "depends_on": [],
                    "primary": {
                        "id": "install-reboot-vm1",
                        "attributes": {
                            "id": "install-reboot-vm1",
                            "metadata.%": "1",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1",
                            "name": "install-reboot-vm1",
                            "profile": "steve-cached-container-linux-install-vm2",
                            "selector.%": "1",
                            "selector.mac": "08:00:27:FE:45:EF"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.n1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "n1",
                        "attributes": {
                            "id": "n1",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.1.1",
                            "metadata.hostname": "n1.steve",
                            "metadata.interface_external": "eno1",
                            "metadata.interface_internal": "eno2",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1",
                            "name": "n1",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:AC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.vm1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "vm1",
                        "attributes": {
                            "id": "vm1",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.10.1",
                            "metadata.hostname": "vm1.steve",
                            "metadata.interface_external": "enp0s8",
                            "metadata.interface_internal": "enp0s3",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1",
                            "name": "vm1",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "08:00:27:FE:45:EF",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.vm2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "vm2",
                        "attributes": {
                            "id": "vm2",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.10.1",
                            "metadata.hostname": "vm1",
                            "metadata.interface_external": "enp0s8",
                            "metadata.interface_internal": "enp0s3",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1",
                            "name": "vm2",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "08:00:27:3A:40:26",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.gateway": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cl_gateway"
                    ],
                    "primary": {
                        "id": "gateway",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "coreos.config.url=http://http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.1": "coreos.first_boot=yes",
                            "args.2": "console=tty0",
                            "args.3": "console=ttyS0",
                            "args.4": "coreos.autologin",
                            "container_linux_config": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n          address=/n14.steve/10.10.1.14\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n          dhcp-host=78:2B:CB:55:54:25,10.10.1.14\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/16\n        Address=10.10.0.1/16\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=10.10.0.1:8080 \\\n            -rpc-address=10.10.0.1:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,10.10.0.1 \\\n            --dhcp-range={{.interface_internal}},10.10.100.50,10.10.100.100,12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://10.10.0.1:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "id": "gateway",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "gateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "kubernetes"
            ],
            "outputs": {
                "kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n"
                }
            },
            "resources": {
                "data.template_file.cached-container-linux-install-configs.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.10": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.11": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.12": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.3": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.4": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.5": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.6": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.7": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.8": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.9": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                        "attributes": {
                            "id": "bdd08425028b01fa1c866f831c850f589d903eed703f6ab2482fd7c0ca973a82",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.10": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.11": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.12": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.3": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.4": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.5": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.6": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.7": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.8": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.9": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                        "attributes": {
                            "id": "1775dcb403af7b3f13212aa176120a011ebd5fcaec8a4d9153d0561c795ac891",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.controller-configs": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "b3dae29c403d1a6695197849c633f329120a859cd73e234576d18acdeebed78b",
                        "attributes": {
                            "id": "b3dae29c403d1a6695197849c633f329120a859cd73e234576d18acdeebed78b",
                            "rendered": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=n2\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://n2.steve:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://n2.steve:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=n2=https://n2.steve:2380\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n2.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n2.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $RKT_OPTS \\\n            ${BOOTKUBE_ACI}:${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n",
                            "template": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=${etcd_name}\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://${domain_name}:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://${domain_name}:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=${etcd_initial_cluster}\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"$${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"$${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"$${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $$RKT_OPTS \\\n            $${BOOTKUBE_ACI}:$${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n",
                            "vars.%": "7",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n2.steve",
                            "vars.etcd_initial_cluster": "n2=https://n2.steve:2380",
                            "vars.etcd_name": "n2",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.0": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "c6099490da36014f4a1d5ef09a2869775a29c99527caf7190d0d515fbfbaaedf",
                        "attributes": {
                            "id": "c6099490da36014f4a1d5ef09a2869775a29c99527caf7190d0d515fbfbaaedf",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n3.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n3.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n3.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.1": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "32dd2a03e86f1164bbd4b18ea97260e0e3a3e3abe65a791873d62794bbefa7df",
                        "attributes": {
                            "id": "32dd2a03e86f1164bbd4b18ea97260e0e3a3e3abe65a791873d62794bbefa7df",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n4.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n4.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n4.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.10": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "9435834ba833c8bd0382db0c68fb3cf2412513786a4cef59ce7c62ada87b1684",
                        "attributes": {
                            "id": "9435834ba833c8bd0382db0c68fb3cf2412513786a4cef59ce7c62ada87b1684",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n13.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n13.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n13.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.11": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "d61938d642f1160cbb9f1458a7d7189a17f854572370b5a64cae7ce49ae4a33e",
                        "attributes": {
                            "id": "d61938d642f1160cbb9f1458a7d7189a17f854572370b5a64cae7ce49ae4a33e",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n14.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n14.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n14.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.2": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "f4c677fef882ebea52e0b74d1594de62dd2b24d5a2c1d443d93f2ad07d394a70",
                        "attributes": {
                            "id": "f4c677fef882ebea52e0b74d1594de62dd2b24d5a2c1d443d93f2ad07d394a70",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n5.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n5.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n5.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.3": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "2545b44edc5cbd1bfda9ed6d782ed4e7b0d9d7a6638c4611246ce783143dd92d",
                        "attributes": {
                            "id": "2545b44edc5cbd1bfda9ed6d782ed4e7b0d9d7a6638c4611246ce783143dd92d",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n6.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n6.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n6.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.4": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "7cd41c3d5c240c9f3ca9fbff83c1a728c2583edf0a3fc987ab4646ed981c2b51",
                        "attributes": {
                            "id": "7cd41c3d5c240c9f3ca9fbff83c1a728c2583edf0a3fc987ab4646ed981c2b51",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n7.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n7.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n7.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.5": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "050613723dbb90cf15d908a344272045ed9304fde28705b50b01bf2576d61e3e",
                        "attributes": {
                            "id": "050613723dbb90cf15d908a344272045ed9304fde28705b50b01bf2576d61e3e",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n8.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n8.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n8.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.6": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "716f9a9cfc487aafc39e16cf4f654098148299c21f8cd321bdb839e4d815db7b",
                        "attributes": {
                            "id": "716f9a9cfc487aafc39e16cf4f654098148299c21f8cd321bdb839e4d815db7b",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n9.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n9.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n9.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.7": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "5d6c5e7a9880fab1de0502c5e878acf56687e7863148950b7685eccbe836ad3b",
                        "attributes": {
                            "id": "5d6c5e7a9880fab1de0502c5e878acf56687e7863148950b7685eccbe836ad3b",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n10.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n10.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n10.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.8": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "c56037adf8e62764b9f9a7586cbe45965795a5a48517ee1fb64f7c100072422c",
                        "attributes": {
                            "id": "c56037adf8e62764b9f9a7586cbe45965795a5a48517ee1fb64f7c100072422c",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n11.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n11.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n11.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.9": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "da20f0a10cf17e7f443310e2884b67fbf75c797489ddb676101f01974ac22a5e",
                        "attributes": {
                            "id": "da20f0a10cf17e7f443310e2884b67fbf75c797489ddb676101f01974ac22a5e",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n12.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n12.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n12.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "matchbox_group.container-linux-install.0": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n2",
                        "attributes": {
                            "id": "container-linux-install-n2",
                            "name": "container-linux-install-n2",
                            "profile": "steve-cached-container-linux-install-n2",
                            "selector.%": "1",
                            "selector.mac": "00:1E:4F:28:30:12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n3",
                        "attributes": {
                            "id": "container-linux-install-n3",
                            "name": "container-linux-install-n3",
                            "profile": "steve-cached-container-linux-install-n3",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:AB:7E:78"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.10": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n12",
                        "attributes": {
                            "id": "container-linux-install-n12",
                            "name": "container-linux-install-n12",
                            "profile": "steve-cached-container-linux-install-n12",
                            "selector.%": "1",
                            "selector.mac": "00:1A:A0:26:DA:B6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.11": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n13",
                        "attributes": {
                            "id": "container-linux-install-n13",
                            "name": "container-linux-install-n13",
                            "profile": "steve-cached-container-linux-install-n13",
                            "selector.%": "1",
                            "selector.mac": "00:1D:09:05:98:DC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.12": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n14",
                        "attributes": {
                            "id": "container-linux-install-n14",
                            "name": "container-linux-install-n14",
                            "profile": "steve-cached-container-linux-install-n14",
                            "selector.%": "1",
                            "selector.mac": "78:2B:CB:55:54:25"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n4",
                        "attributes": {
                            "id": "container-linux-install-n4",
                            "name": "container-linux-install-n4",
                            "profile": "steve-cached-container-linux-install-n4",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:15:77"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.3": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n5",
                        "attributes": {
                            "id": "container-linux-install-n5",
                            "name": "container-linux-install-n5",
                            "profile": "steve-cached-container-linux-install-n5",
                            "selector.%": "1",
                            "selector.mac": "00:1E:C9:D0:AA:9E"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.4": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n6",
                        "attributes": {
                            "id": "container-linux-install-n6",
                            "name": "container-linux-install-n6",
                            "profile": "steve-cached-container-linux-install-n6",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:B6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.5": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n7",
                        "attributes": {
                            "id": "container-linux-install-n7",
                            "name": "container-linux-install-n7",
                            "profile": "steve-cached-container-linux-install-n7",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:25:A1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.6": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n8",
                        "attributes": {
                            "id": "container-linux-install-n8",
                            "name": "container-linux-install-n8",
                            "profile": "steve-cached-container-linux-install-n8",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:00"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.7": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n9",
                        "attributes": {
                            "id": "container-linux-install-n9",
                            "name": "container-linux-install-n9",
                            "profile": "steve-cached-container-linux-install-n9",
                            "selector.%": "1",
                            "selector.mac": "00:1E:C9:D0:AA:BC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.8": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n10",
                        "attributes": {
                            "id": "container-linux-install-n10",
                            "name": "container-linux-install-n10",
                            "profile": "steve-cached-container-linux-install-n10",
                            "selector.%": "1",
                            "selector.mac": "00:1A:A0:15:E3:76"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.9": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n11",
                        "attributes": {
                            "id": "container-linux-install-n11",
                            "name": "container-linux-install-n11",
                            "profile": "steve-cached-container-linux-install-n11",
                            "selector.%": "1",
                            "selector.mac": "00:1D:09:05:9A:C0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.controller": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.controllers.*"
                    ],
                    "primary": {
                        "id": "steve-n2",
                        "attributes": {
                            "id": "steve-n2",
                            "name": "steve-n2",
                            "profile": "steve-controller-n2",
                            "selector.%": "2",
                            "selector.mac": "00:1E:4F:28:30:12",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.0": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n3",
                        "attributes": {
                            "id": "steve-n3",
                            "name": "steve-n3",
                            "profile": "steve-worker-n3",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:AB:7E:78",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n4",
                        "attributes": {
                            "id": "steve-n4",
                            "name": "steve-n4",
                            "profile": "steve-worker-n4",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:15:77",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.10": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n13",
                        "attributes": {
                            "id": "steve-n13",
                            "name": "steve-n13",
                            "profile": "steve-worker-n13",
                            "selector.%": "2",
                            "selector.mac": "00:1D:09:05:98:DC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.11": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n14",
                        "attributes": {
                            "id": "steve-n14",
                            "name": "steve-n14",
                            "profile": "steve-worker-n14",
                            "selector.%": "2",
                            "selector.mac": "78:2B:CB:55:54:25",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n5",
                        "attributes": {
                            "id": "steve-n5",
                            "name": "steve-n5",
                            "profile": "steve-worker-n5",
                            "selector.%": "2",
                            "selector.mac": "00:1E:C9:D0:AA:9E",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.3": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n6",
                        "attributes": {
                            "id": "steve-n6",
                            "name": "steve-n6",
                            "profile": "steve-worker-n6",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:B6",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.4": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n7",
                        "attributes": {
                            "id": "steve-n7",
                            "name": "steve-n7",
                            "profile": "steve-worker-n7",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:25:A1",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.5": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n8",
                        "attributes": {
                            "id": "steve-n8",
                            "name": "steve-n8",
                            "profile": "steve-worker-n8",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:00",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.6": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n9",
                        "attributes": {
                            "id": "steve-n9",
                            "name": "steve-n9",
                            "profile": "steve-worker-n9",
                            "selector.%": "2",
                            "selector.mac": "00:1E:C9:D0:AA:BC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.7": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n10",
                        "attributes": {
                            "id": "steve-n10",
                            "name": "steve-n10",
                            "profile": "steve-worker-n10",
                            "selector.%": "2",
                            "selector.mac": "00:1A:A0:15:E3:76",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.8": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n11",
                        "attributes": {
                            "id": "steve-n11",
                            "name": "steve-n11",
                            "profile": "steve-worker-n11",
                            "selector.%": "2",
                            "selector.mac": "00:1D:09:05:9A:C0",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.9": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n12",
                        "attributes": {
                            "id": "steve-n12",
                            "name": "steve-n12",
                            "profile": "steve-worker-n12",
                            "selector.%": "2",
                            "selector.mac": "00:1A:A0:26:DA:B6",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n2",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n2",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n3",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n3",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.10": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n12",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n12",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.11": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n13",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n13",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.12": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n14",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n14",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n14"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n4",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n4",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n5",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n5",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n6",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n6",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n7",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n7",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n8",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n8",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n9",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n9",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n10",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n10",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n11",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n11",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n2",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n2",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n3",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n3",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.10": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n12",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n12",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.11": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n13",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n13",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.12": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n14",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n14",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n14"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n4",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n4",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n5",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n5",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n6",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n6",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n7",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n7",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n8",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n8",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n9",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n9",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n10",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n10",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n11",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\"\n",
                            "id": "steve-container-linux-install-n11",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.controllers": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.controller-configs.*"
                    ],
                    "primary": {
                        "id": "steve-controller-n2",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=n2\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://n2.steve:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://n2.steve:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=n2=https://n2.steve:2380\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n2.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n2.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $RKT_OPTS \\\n            ${BOOTKUBE_ACI}:${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n",
                            "id": "steve-controller-n2",
                            "name": "steve-controller-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n3",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n3.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n3.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n3",
                            "name": "steve-worker-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n4",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n4.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n4.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n4",
                            "name": "steve-worker-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.10": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n13",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n13.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n13.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n13",
                            "name": "steve-worker-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.11": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n14",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n14.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n14.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n14",
                            "name": "steve-worker-n14"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n5",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n5.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n5.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n5",
                            "name": "steve-worker-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n6",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n6.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n6.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n6",
                            "name": "steve-worker-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n7",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n7.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n7.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n7",
                            "name": "steve-worker-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n8",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n8.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n8.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n8",
                            "name": "steve-worker-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n9",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n9.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n9.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n9",
                            "name": "steve-worker-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n10",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n10.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n10.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n10",
                            "name": "steve-worker-n10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n11",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n11.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n11.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n11",
                            "name": "steve-worker-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n12",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n12.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n12.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDI6PvDUmkXClW2tvs6/KNZvrVQBpd+rEwta13I8LT3wX7+kzdAFYOAeGP5dv/XgUbE9leMbnJnE2NgfnT15Jlg4lVfEKg8SaXsy9UnNqOc8vpdKWEqYdPEv+2W2igSUd8mop7gBGC18RaHAMouWvAhEKHYoLiBp6dAdqNXB/ClUYoaCvlf3OUj4TylqmqDg26AgS5ltettjfpzXMMoxFbL8SE+AZRCT2LSR+OrjxePArnnRnPwgS7G9eoCPvYaT/o+BK/PysW3IyhVck4Xt48sV8eDR+WrTRDWDc7NULAeFuEXPR3W3tfCZmG4mrAnWgHqJWCXDNr1cJqCd6MC0mcp core@n1\n\n",
                            "id": "steve-worker-n12",
                            "name": "steve-worker-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "null_resource.bootkube-start": {
                    "type": "null_resource",
                    "depends_on": [
                        "null_resource.copy-controller-secrets",
                        "null_resource.copy-worker-secrets"
                    ],
                    "primary": {
                        "id": "6310451855868609726",
                        "attributes": {
                            "id": "6310451855868609726"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-controller-secrets": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "5725969136663576088",
                        "attributes": {
                            "id": "5725969136663576088"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.0": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "8596808414839775271",
                        "attributes": {
                            "id": "8596808414839775271"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.1": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "933650582359944789",
                        "attributes": {
                            "id": "933650582359944789"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.10": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "1363564886628574767",
                        "attributes": {
                            "id": "1363564886628574767"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.11": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "3633914692324498233",
                        "attributes": {
                            "id": "3633914692324498233"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.2": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "4841095066159345327",
                        "attributes": {
                            "id": "4841095066159345327"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.3": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "4884649922376399203",
                        "attributes": {
                            "id": "4884649922376399203"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.4": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "194141488671135148",
                        "attributes": {
                            "id": "194141488671135148"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.5": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "1819168391034548211",
                        "attributes": {
                            "id": "1819168391034548211"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.6": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "222020463747245114",
                        "attributes": {
                            "id": "222020463747245114"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.7": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "3703138488311880888",
                        "attributes": {
                            "id": "3703138488311880888"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.8": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "6667721467146141094",
                        "attributes": {
                            "id": "6667721467146141094"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.9": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "2036975661033878898",
                        "attributes": {
                            "id": "2036975661033878898"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "kubernetes",
                "bootkube"
            ],
            "outputs": {
                "ca_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                },
                "content_hash": {
                    "sensitive": false,
                    "type": "string",
                    "value": "105584dbfbb8ac36a33301935e005806578bbf15"
                },
                "etcd_ca_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQNOW/snqHIsMv4/4i6uAI7zANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg0\nN1oXDTE5MDQyODExMDg0N1owITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMWXtdl/+4f8z2qX\nHhMky59eIoXPIZLL8XrQ4AQrairCcBD2VYbl7dwX4JMATeuvXO38u6+r+VbJ0682\nY8ImYrk+e5SDIavvdosiYXZwZ1cupT8mFzIBE/qmyHrUBkZBanjduZBpVEQyoj3k\nk2iABHOzGdT8M+0vabwbvsWhs4/B2tdzCHr7FhuaUqFgnbHIQsw3dnCW+YTbGkdo\nnQzI6fBVs90xQvSSAMnTBuJja2btKWr7qft+B3Sm6vrpYV7HzmMKSddRrvkrpH7D\nyzgL3gJAel8n9MKHoeZHIwSL0Bh7hiJz3KwmHkaaLqdj68twrJXOs03he41jn41e\nWWBBMasCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFJmlqCVh+7f915bt6AiTwyuit/0WMA0GCSqGSIb3DQEBCwUAA4IB\nAQCWzE1q/Wll20axcd6hTXhnWiLoqnvE9IWySJ1eQsVYqT1PByx+Mc6jQtHmC+9j\n6oQYO6tKZI/IVfuoIsEO2+NiAHPgQJarXG5zHmGcfjcbjZ5ox9Ac/65rQIDNhmHP\n7/E7nZU5T7O+YI+w6a7OcaLGQSqcg1ED1oWL5hyspAdI6sId2JHz80wc+HXtgHIL\nCz3xOJnjW+AqQtFd3HGY7heMRORfUkpujWO3uGI3w7ozlHscgPk1iUNWEFGB1ZLI\n7/NnhWcLg0RwygqqS0seh+sHLZGI3nezknKtC3VsCSz8gfcUdFmknFQDpgTimXz7\nu23VO8LqbegNTgToZVsJN4h2\n-----END CERTIFICATE-----\n"
                },
                "etcd_client_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQfCeb09K3swy0Pstg7SMzyDANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg1\nMVoXDTE5MDQyODExMDg1MVowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmBaTMbMdO\nAHJRHAIIY6A3NcN5AMzrw85mOd3YCgwei+u35fJ9E94+ZmjIchjSvKR/DGHkTtte\nEMb4QIQoL2dGvJjvQpzUJoXwRqMha6oH0iCdsaQmW5RTvVmOKbQYrfrsWlJHxw/k\njksBl/xt1+R0+E2JQAWH/GbR+uFAFu4lID6ONt8YOH0cL5a63beboSGw+SZqNRMW\nW/PSj5flTXsgjjwEPDreksrKAxohGxgGUuSNtVPyDLaBiktqtb56q2qtdGarX5Bt\nh3kLSN/o6ZChQioCyy/5aASgtKb6S6musXXixN3mgLFyWYFEsoHCEgAmhXK4Oe3B\nEEqOL3XJ9hHXAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJml\nqCVh+7f915bt6AiTwyuit/0WMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAHd6msAWRWfEffn3KJZBDP0gBcE/\nHBm40ARix9VYR/HSRGvz37vjN2KPHlO4b0auLTQymjE4NwJR1bw9G5sw1sVHwE9D\nSXwhQo3a7//c7S9/gWNuvXb7NZRmgY7RyCSTSM0bRiW63HxT3mWPoRly1fNEjq5f\ncxDA8+wm0Om6Xz+uDF0BPKR3oAbbF3yAMrYLN/7K3WtJgKpYk+OQLBzQN4kNXzWD\nThAwW5xbmTdl0HbQ9jfysU+aR6BUR9Um0CrNqh4lG4ggN7BrNMw6bEg8pyZCSWTv\n4dGENrk++/IMYdjwtuVckK9YqovdUbbnlFi8afUWwjB7xWQksJkkxXzgc2E=\n-----END CERTIFICATE-----\n"
                },
                "etcd_client_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEApgWkzGzHTgByURwCCGOgNzXDeQDM68POZjnd2AoMHovrt+Xy\nfRPePmZoyHIY0rykfwxh5E7bXhDG+ECEKC9nRryY70Kc1CaF8EajIWuqB9IgnbGk\nJluUU71Zjim0GK367FpSR8cP5I5LAZf8bdfkdPhNiUAFh/xm0frhQBbuJSA+jjbf\nGDh9HC+Wut23m6EhsPkmajUTFlvz0o+X5U17II48BDw63pLKygMaIRsYBlLkjbVT\n8gy2gYpLarW+eqtqrXRmq1+QbYd5C0jf6OmQoUIqAssv+WgEoLSm+kuprrF14sTd\n5oCxclmBRLKBwhIAJoVyuDntwRBKji91yfYR1wIDAQABAoIBABKnAavh8MZnsHBC\naEwO/VoWlT6MA3ndhtvfVnhGMLRh3frMP+EjkU2LbexPPVC31vdbKchfv6+izOfp\nP6/QG5dL6xa+ciY3qcaj+QHxOaolRnrREXMpyNFbrasWLmCzc0SIpUPhLnzsK6sj\nKz4gCk/F8dggtD5h8h9XQ2VS7jCHb3v2HXYQQgbRe3QnUjt+HeWCfYmQTWZOfLdz\n1Bdg9VQGkART1L8PI4AAX4/VXJKsQW+E4t7jgHjyzoCp00rb0B3B8n6kF3dqksdW\nPeprzr9YsYFUYL4GP9nOe4jguuShkYhHjsweUaKJwy7YD+p7n7GmsBakZNB9Ig3/\nxZEeQyECgYEAw3flqVITSnqgY1j+Tp1ZC4TV2rUljzBEedPqWHgt1WBapBNiJKUC\nCdLPquqW2K74asLbOJ7W6blLh5bl037onuIWWhsd3WdAGKQnaWVONf5NMA4ui22/\nplp/1DsBOmdMEWvBptLbr/gDMG9pqwqwZQuIayLwLEp461fQh34xLBECgYEA2W9W\nnoZsrbVt4hJUkPvEIHoTRA5ryrxWuDKSEkolFN8LgQhBn+lkt612Iq4xNM4g3FV/\nUBObEV1bd86nsT56Vur4PQKf2TemC1PeSBM+sLfElXlTuxik3GmE/MUNmQ7YtrKR\nWIkEzSgGxnfsOVXfLu5m6JfPN0NGYJk5OODK52cCgYEAlRJSb2Bt3+ZHfZz4TYJI\nz7Ud129BVsOL5ZGNbq0w30NdvTYfKi1BsbY5tHK2WkiOofU7dSIGazdqd9zIKBTo\nWYu5WjzF+P1ub5x5hjLBhAIOYfDe5GzttXPde0EIvb7bz4lrpcu3yasO25iMcOp0\n/oreHj8GBfFB6NIO8dZ2r9ECgYAZkQfkV/YLbtveyzz6V0A2eWQuimuOSRsBSaD3\nWZSGobtejrP4s57OIi1T4puSk/I1NjBkIAoJvqp0qe3531jPQ42wztAw4GQ7zL7E\nRs8GRHVvBfccdsdby2SBvEHfD2nYAaMpf+L6pIw3Zf52t2wovouHKeKJovVxglLC\nJ1x0XQKBgH/5fOnV/nDnqvhXvwH9kLX8xuI80YdbpJ5ixErFMBXeYEcSP00fFwPM\nP01Savf+94b+40Tt/a5kd0yKpK0mGVgm1YaLceftBKPagSCbEdwCxhNov4g35Nrk\n0TpHbstGEtceCMeWb/0E+tN7uIRWLdgwRITtR/ocEXHP9YrqyLdB\n-----END RSA PRIVATE KEY-----\n"
                },
                "etcd_peer_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAIInmJ0BW5cPBo8qBYg9yQYwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMf9uMcaXlp4\nhbaMjgmQHU9Wvq1I4FnRPC6IT3VTZPRkbwq1MLemU7MFJZS8gaFLB3k0m53HhB9l\nEsOj29jbk+YrmeKw+9SDd+TkGDVKQU8cY9Lc73CkvO46qWbrzu4MIkskWIXx5Tw9\nRg9MBsGEZFOgm35DyrGh2J3qhOXO1eqAPYf12K0YFMjNTMRxM90A2RNpEz3y6cSy\nERg1PwtBWBZk53hSmTqJ+olVxRkHXwAOrln57hQ24NCtlGzX4zH/Uuq8bonpr9iN\nouhQ9+nYEc4dxsFhehF32IfhalgkSvU4AQrVtI+0G7PvB3o7+p81Csk7JSf72hjt\nCSwztKyvSq0CAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJmlqCVh\n+7f915bt6AiTwyuit/0WMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQBASgi3g27jZhnC94xgWedwkqU9NnRj5fBPJJgzasq6+WkrL65woyRF\nQ7LQmz6luvUCWH9GV4SYNf0qcPAsKVqirIJt5iLtiv8NURuujXhePCOxj7So7fKt\nogLT/Chcq8Ualtqk3mF671wgnN3Wu5MLj0TBvLH4HJjTLIisbycuS6xqJCE9Mdhk\neGSi/OGPXmdEN96aelvXz1b+rbWbrsgDLgWCee4EwgSY4qEK3Evl+O4zAemw2xl2\nLF/AAzwTJrHrq1CBR8IM7QPU5WV0h/ejYR0VTzG6dNM2whWbNWVIie4ABSWulOXB\nq5+ttDiXYDW93XuZAY8maq8jEj3VMMeG\n-----END CERTIFICATE-----\n"
                },
                "etcd_peer_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAx/24xxpeWniFtoyOCZAdT1a+rUjgWdE8LohPdVNk9GRvCrUw\nt6ZTswUllLyBoUsHeTSbnceEH2USw6Pb2NuT5iuZ4rD71IN35OQYNUpBTxxj0tzv\ncKS87jqpZuvO7gwiSyRYhfHlPD1GD0wGwYRkU6CbfkPKsaHYneqE5c7V6oA9h/XY\nrRgUyM1MxHEz3QDZE2kTPfLpxLIRGDU/C0FYFmTneFKZOon6iVXFGQdfAA6uWfnu\nFDbg0K2UbNfjMf9S6rxuiemv2I2i6FD36dgRzh3GwWF6EXfYh+FqWCRK9TgBCtW0\nj7Qbs+8Hejv6nzUKyTslJ/vaGO0JLDO0rK9KrQIDAQABAoIBAQCe72mQeckwVwXU\nzKD4wpo4ejSw2/DIEHumc1fKYwshGkwRE2vzF3D/HYD/Ukwm1czLq15cprm+hYHD\nDw7hqadBTbdPK94GxrBarFb8ytVaPLKsWj7Do3guT1pfW9mo3uXGF81uLY5DMGLk\nN0RLOJ7Owx2v28pTHs9auI0DYTwpznYM7rVe/SNzNiqnvBLQjgVmzMWySsDy33N6\ncFN/Whsfeln3o+2haN+AV27g+jLXw2nYQobnqi088XV1hBDGUXtKSNaiDa7tw0o6\nBJRNHTbJA4lhXhuZxOVQYkTgoRJsgkMAC3nyXbKutRnwZJ2oukz5zHB3Rabk+OkP\no4unI26BAoGBANLQgZlW3ggu2GJ/Q5WuvbsLpbA5S50dkNs/trk/Pt5cVjC9hBBT\nKMQuSDknB53F9MA0HSGu1L1x0XPx/7ay9rwjgL67QTUOH3pMA5HI9XoQymGYJtDX\nTBmD4QiuCfmvqUHdVZxl/kWOpeFoW4rgvIiZ4PK2bCKgNHMoA40A9TihAoGBAPLb\nVOB9NPq+HXJfm9WXiZPOGM0eOGfcSTazk67a/QMooNEdXhUxVPMC0yhUyjbMqtVN\nkiFdXH20/a+kGa18GQ/U6+NsMdS6OodyzJBx+BtxKubLu+/LumVFnzOASMVkJYnm\naLZxqUSdDSPwaTypyuTpbRwL2tcbm5xM3Jq7ptqNAoGAVAl0MDk1p1NtRM5wlaGj\n1oVNFlOwtcAMd6oNYAk7OY7bePCDTbKoxJOijM3nNlisOVZM6pl0CtTtZufoRN9Q\nhi0s7FtfIhQwLiNRJPNUD8XTt1Xc21GH73/n2/rs1RDWSwA9WWw7EWVM8O8V1uXB\noj6dMoPP1XnBjso7qCDioCECgYB0RpNC0G/XRcMviZtBDsbuH5U8UCXNhGkBacVh\nyLOvGXq15IuxNedoWofjHYWb6y435mX614p7HXcA617n8yzEqbsvLhRFt8xiIZLT\n7d1OtkZGLnGTBEYASu9IZzlwWNyoQ8sK3yyeD1vFQ0v/oYPlSeXVsc9bgnpkwWA2\nLXZb2QKBgQCIlCfD/An1NaukxI5scoe5JuuFkzA58ERZA6DPsG1TLK33/DjbVhfR\nT5m72rG4J6rDt87K4qsl56OkRlay1yvsZpGpsL6JYvpAg+YWR0mxGtssnXjVHcBU\nLyfTq8FelGiO1DModwOGSG52OV3erp7rwZvR9oxnAPZWPplyK1YtTg==\n-----END RSA PRIVATE KEY-----\n"
                },
                "etcd_server_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAKwWrfBjjcG12bhg2RoAdeowDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvKVK++if\ncz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/PRMJLJAW7syVbHSCOJqf4i47\nQVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ/XG62HHtdWWdMLj0wD55TZCe\nOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuOAngmKiJaG0zoyLBPFK7/xtN/\nxQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY+Rxpb4RjGUNa22StZCBXWMsg\n2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CFXttjqmcyD/Wv0jAG7bZQd7ut\n4JEUJPRHQsH2wwIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSZ\npaglYfu3/deW7egIk8Mrorf9FjAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCqdLw7+tZj+rOjin14jUQOABlA\ntkfuioe4wEVuQeutWb2s04Agh5uTHrynDTQXxbRdsklXLKcwz6p9pjysovMvK4xk\nXlzismII/6r1eLZ7c87ll9ocHvA8VZDAiFxPnZ3SHnPtUxu0Or17EWnoSiUGFzdp\n2HQ1DYGK1grBzct9a9mK7426Nuc//m4xWa3reHNWg6F7fuyKenL+Se9kvCG399cd\nThos798BDJ0r9poBEdy0ssnz/Wb+jlLBh/8eBn0fFten59THAZrALGjJOWWgphEZ\n6tOBwSfXdFzu73YdKl6i2wdHd6wzNcLrVt+5jPWS7HSts2HVdliKTiQ/NK26\n-----END CERTIFICATE-----\n"
                },
                "etcd_server_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAvKVK++ifcz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/\nPRMJLJAW7syVbHSCOJqf4i47QVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ\n/XG62HHtdWWdMLj0wD55TZCeOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuO\nAngmKiJaG0zoyLBPFK7/xtN/xQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY\n+Rxpb4RjGUNa22StZCBXWMsg2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CF\nXttjqmcyD/Wv0jAG7bZQd7ut4JEUJPRHQsH2wwIDAQABAoIBAQCBaOrdkKEBkMH0\nBSc4rIwMjksEyr/2DF8RUM7d9+XeKiCddoxDO3HJrjbtLk87DVnftsMDiC+CDDtu\n+jWWtv6cBCAcH9oQjfjM1pyvrIWmBmc7tXA82u4QWWdKZ6DDsb3Eu5a/TPweWv21\ne8n/tjfSpNd0PlcW+9/RFBzuDItMPIpHJEe/W7EfHYCEcivBy4sus0eB0aOWWJdk\n40P8dyWvieej2vdsEKdlp2wyU6MJBcg2/rlSnh0OTAB+qW0kdBtZi20smEENrztX\nzSEjM1caEp13nzuwsoyCb8QV8VkKlmWZlyDJfew0Cxo6MW1aDqf8OM7ao8mPG9wH\niWsP0hvBAoGBANlLg+QwJoCjbHG42QgN2YfF9eswhtz9cN+PRzmoC/bL0+q0lgGi\n2VwNSvi3YKGOPdtXdP6EA45oJeh1guWPaFk7DvQ3Igty8UHxqVeZX29VLTCGItky\n0BqQiXdDCTLBeuv5rsaeuKRDa+1J2arLYe6wW9XHeVxXrfDEzTINV4GRAoGBAN4/\nZCusmo1sesIqVopH18OGcZ3ypDRnPOXYHL4U7jyLYEsEqyd4QCNhS6gUcQJo5IjZ\nCp+8oYHGh2G30ZCPtJU5cKWsf/NgpL9B1p/0PmaGKkSp/CCMziWd5hNa7uEPZLh5\ndUVwDGTabgRGIOV+uZV7/x2F6c6BiJ3cgX3zwUkTAoGAI7+2vS3mx7cbOkJtAlQ0\n+49n+/+J0IWpsj4CO8wX28yA2tZG75H5LJnLQcv5i9q49oMW7mCNrToZMntSw62q\nPzPmK+t+IGASrQSzFYRYHRroSllnFlCzyAsLcqGGu+D09imnxWmLewrUkL9bnivD\nut8s3KjqoHSUW04lbByhzuECgYEAuCQVvwn31A15eL7TjScRYnNWV+PeoXyYPGff\nCK8W5Rsl4YIwvTcpDSdkJBMrvy9hivEpmEgWGQyAxzoibIBkwu8gomRWbzQ3zC+k\nwEsCGLg49UNSHzYK56f4JTlGizrR3Pblb27zFezVEr14LC3fXjeqnK+DlRJGO2Wj\n9NOt5fkCgYEAht0VurmwkgeupSCMJFCIJ0giJpPThasKzjBq3DXGw3aiI6fGiNzX\nPUwOtQtsUIDO5t97L4ONg/9NajxRfbpY+9s/xMza1f4ABZhAYF2Kf7Sssi97phUD\ndHP/4vAfTRRSSrkT/q68pLFrGNzdiLCMhNZ/E7EC31JR3BMl83+W6l4=\n-----END RSA PRIVATE KEY-----\n"
                },
                "id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "473f82ed942e3a938ffa8335af732e271757c24e"
                },
                "kube_dns_service_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.3.0.10"
                },
                "kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n"
                },
                "kubelet_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                },
                "kubelet_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                },
                "server": {
                    "sensitive": false,
                    "type": "string",
                    "value": "https://steve:443"
                },
                "user-kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n"
                }
            },
            "resources": {
                "data.template_file.kubeconfig": {
                    "type": "template_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet",
                        "tls_private_key.kubelet",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "91731305fffeb6f67743981bc04dfb0cdb9745927ffbc7d2c48468f1328b2f08",
                        "attributes": {
                            "id": "91731305fffeb6f67743981bc04dfb0cdb9745927ffbc7d2c48468f1328b2f08",
                            "rendered": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "template": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: ${server}\n    certificate-authority-data: ${ca_cert}\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: ${kubelet_cert}\n    client-key-data: ${kubelet_key}\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "vars.%": "4",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.kubelet_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "vars.kubelet_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.server": "https://steve:443"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.user-kubeconfig": {
                    "type": "template_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet",
                        "tls_private_key.kubelet",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "14d93814bd8f083f17531552d54aff2cd0fbc38f53848e5a62cf0f42f8f5ef85",
                        "attributes": {
                            "id": "14d93814bd8f083f17531552d54aff2cd0fbc38f53848e5a62cf0f42f8f5ef85",
                            "rendered": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n",
                            "template": "apiVersion: v1\nkind: Config\nclusters:\n- name: ${name}-cluster\n  cluster:\n    server: ${server}\n    certificate-authority-data: ${ca_cert}\nusers:\n- name: ${name}-user\n  user:\n    client-certificate-data: ${kubelet_cert}\n    client-key-data: ${kubelet_key}\ncontexts:\n- name: ${name}-context\n  context:\n    cluster: ${name}-cluster\n    user: ${name}-user\n",
                            "vars.%": "5",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.kubelet_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "vars.kubelet_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.name": "steve",
                            "vars.server": "https://steve:443"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "local_file.apiserver-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.apiserver"
                    ],
                    "primary": {
                        "id": "87de0647e3f4ddf4936bb8cc2795f8720716d8db",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDtzCCAp+gAwIBAgIRAION+3oiSgjldcONR2fH4lgwDQYJKoZIhvcNAQELBQAw\nJTERMA8GA1UEChMIYm9vdGt1YmUxEDAOBgNVBAMTB2t1YmUtY2EwHhcNMTgwNDI4\nMTEwODUxWhcNMTkwNDI4MTEwODUxWjAvMRQwEgYDVQQKEwtrdWJlLW1hc3RlcjEX\nMBUGA1UEAxMOa3ViZS1hcGlzZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQCsYS0aUD4IiMNx/2cKv4pJIhe9ax07ICW9TcMDNIMTwaXTEi7Y3bQK\nbIlIfd8MPFzUvEU9HTXTYDCHIrjdDMB9fFxhJ1qxRxTVerXlLj2mrjk+moqQHhaw\n4jGSJ83WQVoMSYrzqN79VZXRPE60UtiJoxArgBXCBF412Ekfj207ONMyMdAZQ+Fg\nAl94d7sVRSkBS+VfiJsC6kXm+ERSTT9em3JmGodpGklDE5/LgW22eBND5laok4MF\n5WWRfXpyEZZtWRTcSLvifomILy8g2rcaSxzgy1VYbEGOjiRZae4+s/na8NAsztBY\n2xSaQdGVDHUUCpcIOWLs4TgmHsE/OCHrAgMBAAGjgdcwgdQwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAA\nMB8GA1UdIwQYMBaAFCaY4+IbAc1nvHrW6M7e6nJmMDyVMHQGA1UdEQRtMGuCBXN0\nZXZlggprdWJlcm5ldGVzghJrdWJlcm5ldGVzLmRlZmF1bHSCFmt1YmVybmV0ZXMu\nZGVmYXVsdC5zdmOCJGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2Nh\nbIcECgMAATANBgkqhkiG9w0BAQsFAAOCAQEAbIRyACl+s2HBwvySHt1FlxQ/0BIk\nrwUv6REr/sID8oFmGL6tOl8T6nadRtVv8XLQy171TGZ3uJoMQ2s/Are0m8zoF1J4\n31BnJ7090Bc8TbklGCZk11xskJue6hMQbWZjr4lDaZomD1ODBsh017lzKgaNk6AK\nMh0nWmKILen5a04Mdpitw1NRulHB96VSOoXlMMSjc0zKfFviRPuSH82ZPxyaX5zE\nL+SWdg12ran60+Xef+inCWDpHRK1b4OCkOqm63Ybh++d+Z+nA7/Mb5uYSvQNpMCW\nRviqpmpe6L+dNXksurs3+y8EYmN0kVdNGUPepksxYeg98F1USqJaRwqwNw==\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/apiserver.crt",
                            "id": "87de0647e3f4ddf4936bb8cc2795f8720716d8db"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.apiserver-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.apiserver"
                    ],
                    "primary": {
                        "id": "166b038f295d8914eb8d8df4f377475b41ce9b11",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEArGEtGlA+CIjDcf9nCr+KSSIXvWsdOyAlvU3DAzSDE8Gl0xIu\n2N20CmyJSH3fDDxc1LxFPR0102AwhyK43QzAfXxcYSdasUcU1Xq15S49pq45PpqK\nkB4WsOIxkifN1kFaDEmK86je/VWV0TxOtFLYiaMQK4AVwgReNdhJH49tOzjTMjHQ\nGUPhYAJfeHe7FUUpAUvlX4ibAupF5vhEUk0/XptyZhqHaRpJQxOfy4FttngTQ+ZW\nqJODBeVlkX16chGWbVkU3Ei74n6JiC8vINq3Gksc4MtVWGxBjo4kWWnuPrP52vDQ\nLM7QWNsUmkHRlQx1FAqXCDli7OE4Jh7BPzgh6wIDAQABAoIBADanfPBp3rFAA4/i\nZZ5Pyp2TdKl3C8aSU8ToodsjTCf4bwY0LqxN5uajMQfN+OldPiWpJ97PoyBI0DoY\ndTqI74MZ6gRXwPaSTfW9uWxXs+5kMPw7bZFyKMmefg8UFbxH7jAVJTxKH6F9AEpd\n76pW1hcVn2vbaYqhbelukQizpfNvdHT1fzNS9D7hWHyGNdyD2oYF7h2SRPz9CX5p\n0N/A2V47GExI1HroxtTlQ7ydnGwWrrGkBnzt51DDQi9LUI4IJAQqSGMpgBPxZdOW\nuDG6b6DmB/pLiAe+yJ1OVUHfH2UUye0l3t6vPsTjjXL7RTBPRH00RNgGwIUVKU5S\nRXxFh8kCgYEA38YHc2OcEuB+n4aKNpX5pt4X2+VAa8PyvcGgMZ7zE5cLcPaKN1/p\ncwVw3tb8nMNgAZ4Cz01HkrXECmO6S0bsa526QtM6uJP4XWVuR3+oEAH/Jgo++Jn7\nDQAswyJNzKczWb97kacMPr1NdpmJLfOPmjE3FZT1Uti8pZAulbIz/dUCgYEAxTRh\naBIqWyWSBjh9KmD9rn3TFpSBvMB2qEVvJSYt5BZ0dq6K61jAQjsSbYyhlU/An5Jq\nA4HURTDEu+wEHPrRKwEedmezCcHMNxapJ33hbxutOImNs3+13GePcBIh6xwTvXE4\njhdlFyGtsdTm6VfhsqFfUFz71eFjSiMrRazWwL8CgYEAyTQ22NLUr8h5Mhj3x3L8\nYcTKcSbl0MAEUAh8cIF6EMA8Qlr7FiVAM/LNdSCbTJ0DgxC/eAQFee3Dko/vHuZr\nh6vvoUxqPTKXG+sqyFEJHTOeZmbKDh/tstfYZ7A9gelI68aXZfRstzDhKOWOiem4\n0iy0Wcxw9Qf6P2ev61urEe0CgYBk8Fe/VjT57HQe3QEsFPMkQmEumJsDixvxK4El\nabJpohjAurx+lDHsdKINEsOOUoEM7Ht5ChYlyD2a1saQMs2njm4SOygIIXsu41l3\nzlX6chcq7jVqoD7s7tEbkxxrZDaya+Z/zHfA7Esk0A3VeFcdAL5xuvZoVnJk+zVl\n938ArwKBgGLgdwYyUAWizbm2NTXfrHDo+K3PdJs+dcoiOddBPtzhvy47f5YGOJUy\nOsedTkFMeHpPVIx0Kain3wd0shpX6fs9PUawd+v0IRZ+AhR9JMDtp1vdboVGmqnm\nUwqSogiAdJuj/vcAbAiSyu5SymjiTXETn59BxRLbST5Vb5kqbM2q\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/apiserver.key",
                            "id": "166b038f295d8914eb8d8df4f377475b41ce9b11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQNOW/snqHIsMv4/4i6uAI7zANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg0\nN1oXDTE5MDQyODExMDg0N1owITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMWXtdl/+4f8z2qX\nHhMky59eIoXPIZLL8XrQ4AQrairCcBD2VYbl7dwX4JMATeuvXO38u6+r+VbJ0682\nY8ImYrk+e5SDIavvdosiYXZwZ1cupT8mFzIBE/qmyHrUBkZBanjduZBpVEQyoj3k\nk2iABHOzGdT8M+0vabwbvsWhs4/B2tdzCHr7FhuaUqFgnbHIQsw3dnCW+YTbGkdo\nnQzI6fBVs90xQvSSAMnTBuJja2btKWr7qft+B3Sm6vrpYV7HzmMKSddRrvkrpH7D\nyzgL3gJAel8n9MKHoeZHIwSL0Bh7hiJz3KwmHkaaLqdj68twrJXOs03he41jn41e\nWWBBMasCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFJmlqCVh+7f915bt6AiTwyuit/0WMA0GCSqGSIb3DQEBCwUAA4IB\nAQCWzE1q/Wll20axcd6hTXhnWiLoqnvE9IWySJ1eQsVYqT1PByx+Mc6jQtHmC+9j\n6oQYO6tKZI/IVfuoIsEO2+NiAHPgQJarXG5zHmGcfjcbjZ5ox9Ac/65rQIDNhmHP\n7/E7nZU5T7O+YI+w6a7OcaLGQSqcg1ED1oWL5hyspAdI6sId2JHz80wc+HXtgHIL\nCz3xOJnjW+AqQtFd3HGY7heMRORfUkpujWO3uGI3w7ozlHscgPk1iUNWEFGB1ZLI\n7/NnhWcLg0RwygqqS0seh+sHLZGI3nezknKtC3VsCSz8gfcUdFmknFQDpgTimXz7\nu23VO8LqbegNTgToZVsJN4h2\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd-client-ca.crt",
                            "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.client"
                    ],
                    "primary": {
                        "id": "2f685aaa95b41aaca67ee34f9f9700a0f2cb3453",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQfCeb09K3swy0Pstg7SMzyDANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg1\nMVoXDTE5MDQyODExMDg1MVowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmBaTMbMdO\nAHJRHAIIY6A3NcN5AMzrw85mOd3YCgwei+u35fJ9E94+ZmjIchjSvKR/DGHkTtte\nEMb4QIQoL2dGvJjvQpzUJoXwRqMha6oH0iCdsaQmW5RTvVmOKbQYrfrsWlJHxw/k\njksBl/xt1+R0+E2JQAWH/GbR+uFAFu4lID6ONt8YOH0cL5a63beboSGw+SZqNRMW\nW/PSj5flTXsgjjwEPDreksrKAxohGxgGUuSNtVPyDLaBiktqtb56q2qtdGarX5Bt\nh3kLSN/o6ZChQioCyy/5aASgtKb6S6musXXixN3mgLFyWYFEsoHCEgAmhXK4Oe3B\nEEqOL3XJ9hHXAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJml\nqCVh+7f915bt6AiTwyuit/0WMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAHd6msAWRWfEffn3KJZBDP0gBcE/\nHBm40ARix9VYR/HSRGvz37vjN2KPHlO4b0auLTQymjE4NwJR1bw9G5sw1sVHwE9D\nSXwhQo3a7//c7S9/gWNuvXb7NZRmgY7RyCSTSM0bRiW63HxT3mWPoRly1fNEjq5f\ncxDA8+wm0Om6Xz+uDF0BPKR3oAbbF3yAMrYLN/7K3WtJgKpYk+OQLBzQN4kNXzWD\nThAwW5xbmTdl0HbQ9jfysU+aR6BUR9Um0CrNqh4lG4ggN7BrNMw6bEg8pyZCSWTv\n4dGENrk++/IMYdjwtuVckK9YqovdUbbnlFi8afUWwjB7xWQksJkkxXzgc2E=\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd-client.crt",
                            "id": "2f685aaa95b41aaca67ee34f9f9700a0f2cb3453"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.client"
                    ],
                    "primary": {
                        "id": "35d3589bdf1e7ab08e11061d5e010d946c4e7929",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEApgWkzGzHTgByURwCCGOgNzXDeQDM68POZjnd2AoMHovrt+Xy\nfRPePmZoyHIY0rykfwxh5E7bXhDG+ECEKC9nRryY70Kc1CaF8EajIWuqB9IgnbGk\nJluUU71Zjim0GK367FpSR8cP5I5LAZf8bdfkdPhNiUAFh/xm0frhQBbuJSA+jjbf\nGDh9HC+Wut23m6EhsPkmajUTFlvz0o+X5U17II48BDw63pLKygMaIRsYBlLkjbVT\n8gy2gYpLarW+eqtqrXRmq1+QbYd5C0jf6OmQoUIqAssv+WgEoLSm+kuprrF14sTd\n5oCxclmBRLKBwhIAJoVyuDntwRBKji91yfYR1wIDAQABAoIBABKnAavh8MZnsHBC\naEwO/VoWlT6MA3ndhtvfVnhGMLRh3frMP+EjkU2LbexPPVC31vdbKchfv6+izOfp\nP6/QG5dL6xa+ciY3qcaj+QHxOaolRnrREXMpyNFbrasWLmCzc0SIpUPhLnzsK6sj\nKz4gCk/F8dggtD5h8h9XQ2VS7jCHb3v2HXYQQgbRe3QnUjt+HeWCfYmQTWZOfLdz\n1Bdg9VQGkART1L8PI4AAX4/VXJKsQW+E4t7jgHjyzoCp00rb0B3B8n6kF3dqksdW\nPeprzr9YsYFUYL4GP9nOe4jguuShkYhHjsweUaKJwy7YD+p7n7GmsBakZNB9Ig3/\nxZEeQyECgYEAw3flqVITSnqgY1j+Tp1ZC4TV2rUljzBEedPqWHgt1WBapBNiJKUC\nCdLPquqW2K74asLbOJ7W6blLh5bl037onuIWWhsd3WdAGKQnaWVONf5NMA4ui22/\nplp/1DsBOmdMEWvBptLbr/gDMG9pqwqwZQuIayLwLEp461fQh34xLBECgYEA2W9W\nnoZsrbVt4hJUkPvEIHoTRA5ryrxWuDKSEkolFN8LgQhBn+lkt612Iq4xNM4g3FV/\nUBObEV1bd86nsT56Vur4PQKf2TemC1PeSBM+sLfElXlTuxik3GmE/MUNmQ7YtrKR\nWIkEzSgGxnfsOVXfLu5m6JfPN0NGYJk5OODK52cCgYEAlRJSb2Bt3+ZHfZz4TYJI\nz7Ud129BVsOL5ZGNbq0w30NdvTYfKi1BsbY5tHK2WkiOofU7dSIGazdqd9zIKBTo\nWYu5WjzF+P1ub5x5hjLBhAIOYfDe5GzttXPde0EIvb7bz4lrpcu3yasO25iMcOp0\n/oreHj8GBfFB6NIO8dZ2r9ECgYAZkQfkV/YLbtveyzz6V0A2eWQuimuOSRsBSaD3\nWZSGobtejrP4s57OIi1T4puSk/I1NjBkIAoJvqp0qe3531jPQ42wztAw4GQ7zL7E\nRs8GRHVvBfccdsdby2SBvEHfD2nYAaMpf+L6pIw3Zf52t2wovouHKeKJovVxglLC\nJ1x0XQKBgH/5fOnV/nDnqvhXvwH9kLX8xuI80YdbpJ5ixErFMBXeYEcSP00fFwPM\nP01Savf+94b+40Tt/a5kd0yKpK0mGVgm1YaLceftBKPagSCbEdwCxhNov4g35Nrk\n0TpHbstGEtceCMeWb/0E+tN7uIRWLdgwRITtR/ocEXHP9YrqyLdB\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd-client.key",
                            "id": "35d3589bdf1e7ab08e11061d5e010d946c4e7929"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQNOW/snqHIsMv4/4i6uAI7zANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg0\nN1oXDTE5MDQyODExMDg0N1owITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMWXtdl/+4f8z2qX\nHhMky59eIoXPIZLL8XrQ4AQrairCcBD2VYbl7dwX4JMATeuvXO38u6+r+VbJ0682\nY8ImYrk+e5SDIavvdosiYXZwZ1cupT8mFzIBE/qmyHrUBkZBanjduZBpVEQyoj3k\nk2iABHOzGdT8M+0vabwbvsWhs4/B2tdzCHr7FhuaUqFgnbHIQsw3dnCW+YTbGkdo\nnQzI6fBVs90xQvSSAMnTBuJja2btKWr7qft+B3Sm6vrpYV7HzmMKSddRrvkrpH7D\nyzgL3gJAel8n9MKHoeZHIwSL0Bh7hiJz3KwmHkaaLqdj68twrJXOs03he41jn41e\nWWBBMasCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFJmlqCVh+7f915bt6AiTwyuit/0WMA0GCSqGSIb3DQEBCwUAA4IB\nAQCWzE1q/Wll20axcd6hTXhnWiLoqnvE9IWySJ1eQsVYqT1PByx+Mc6jQtHmC+9j\n6oQYO6tKZI/IVfuoIsEO2+NiAHPgQJarXG5zHmGcfjcbjZ5ox9Ac/65rQIDNhmHP\n7/E7nZU5T7O+YI+w6a7OcaLGQSqcg1ED1oWL5hyspAdI6sId2JHz80wc+HXtgHIL\nCz3xOJnjW+AqQtFd3HGY7heMRORfUkpujWO3uGI3w7ozlHscgPk1iUNWEFGB1ZLI\n7/NnhWcLg0RwygqqS0seh+sHLZGI3nezknKtC3VsCSz8gfcUdFmknFQDpgTimXz7\nu23VO8LqbegNTgToZVsJN4h2\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/peer-ca.crt",
                            "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.peer"
                    ],
                    "primary": {
                        "id": "4024a28b48041efda58c19718727a0bbfa38835b",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAIInmJ0BW5cPBo8qBYg9yQYwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMf9uMcaXlp4\nhbaMjgmQHU9Wvq1I4FnRPC6IT3VTZPRkbwq1MLemU7MFJZS8gaFLB3k0m53HhB9l\nEsOj29jbk+YrmeKw+9SDd+TkGDVKQU8cY9Lc73CkvO46qWbrzu4MIkskWIXx5Tw9\nRg9MBsGEZFOgm35DyrGh2J3qhOXO1eqAPYf12K0YFMjNTMRxM90A2RNpEz3y6cSy\nERg1PwtBWBZk53hSmTqJ+olVxRkHXwAOrln57hQ24NCtlGzX4zH/Uuq8bonpr9iN\nouhQ9+nYEc4dxsFhehF32IfhalgkSvU4AQrVtI+0G7PvB3o7+p81Csk7JSf72hjt\nCSwztKyvSq0CAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJmlqCVh\n+7f915bt6AiTwyuit/0WMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQBASgi3g27jZhnC94xgWedwkqU9NnRj5fBPJJgzasq6+WkrL65woyRF\nQ7LQmz6luvUCWH9GV4SYNf0qcPAsKVqirIJt5iLtiv8NURuujXhePCOxj7So7fKt\nogLT/Chcq8Ualtqk3mF671wgnN3Wu5MLj0TBvLH4HJjTLIisbycuS6xqJCE9Mdhk\neGSi/OGPXmdEN96aelvXz1b+rbWbrsgDLgWCee4EwgSY4qEK3Evl+O4zAemw2xl2\nLF/AAzwTJrHrq1CBR8IM7QPU5WV0h/ejYR0VTzG6dNM2whWbNWVIie4ABSWulOXB\nq5+ttDiXYDW93XuZAY8maq8jEj3VMMeG\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/peer.crt",
                            "id": "4024a28b48041efda58c19718727a0bbfa38835b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.peer"
                    ],
                    "primary": {
                        "id": "e8a0d4c8a0805b4144d9e451849f0ee6d0595134",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAx/24xxpeWniFtoyOCZAdT1a+rUjgWdE8LohPdVNk9GRvCrUw\nt6ZTswUllLyBoUsHeTSbnceEH2USw6Pb2NuT5iuZ4rD71IN35OQYNUpBTxxj0tzv\ncKS87jqpZuvO7gwiSyRYhfHlPD1GD0wGwYRkU6CbfkPKsaHYneqE5c7V6oA9h/XY\nrRgUyM1MxHEz3QDZE2kTPfLpxLIRGDU/C0FYFmTneFKZOon6iVXFGQdfAA6uWfnu\nFDbg0K2UbNfjMf9S6rxuiemv2I2i6FD36dgRzh3GwWF6EXfYh+FqWCRK9TgBCtW0\nj7Qbs+8Hejv6nzUKyTslJ/vaGO0JLDO0rK9KrQIDAQABAoIBAQCe72mQeckwVwXU\nzKD4wpo4ejSw2/DIEHumc1fKYwshGkwRE2vzF3D/HYD/Ukwm1czLq15cprm+hYHD\nDw7hqadBTbdPK94GxrBarFb8ytVaPLKsWj7Do3guT1pfW9mo3uXGF81uLY5DMGLk\nN0RLOJ7Owx2v28pTHs9auI0DYTwpznYM7rVe/SNzNiqnvBLQjgVmzMWySsDy33N6\ncFN/Whsfeln3o+2haN+AV27g+jLXw2nYQobnqi088XV1hBDGUXtKSNaiDa7tw0o6\nBJRNHTbJA4lhXhuZxOVQYkTgoRJsgkMAC3nyXbKutRnwZJ2oukz5zHB3Rabk+OkP\no4unI26BAoGBANLQgZlW3ggu2GJ/Q5WuvbsLpbA5S50dkNs/trk/Pt5cVjC9hBBT\nKMQuSDknB53F9MA0HSGu1L1x0XPx/7ay9rwjgL67QTUOH3pMA5HI9XoQymGYJtDX\nTBmD4QiuCfmvqUHdVZxl/kWOpeFoW4rgvIiZ4PK2bCKgNHMoA40A9TihAoGBAPLb\nVOB9NPq+HXJfm9WXiZPOGM0eOGfcSTazk67a/QMooNEdXhUxVPMC0yhUyjbMqtVN\nkiFdXH20/a+kGa18GQ/U6+NsMdS6OodyzJBx+BtxKubLu+/LumVFnzOASMVkJYnm\naLZxqUSdDSPwaTypyuTpbRwL2tcbm5xM3Jq7ptqNAoGAVAl0MDk1p1NtRM5wlaGj\n1oVNFlOwtcAMd6oNYAk7OY7bePCDTbKoxJOijM3nNlisOVZM6pl0CtTtZufoRN9Q\nhi0s7FtfIhQwLiNRJPNUD8XTt1Xc21GH73/n2/rs1RDWSwA9WWw7EWVM8O8V1uXB\noj6dMoPP1XnBjso7qCDioCECgYB0RpNC0G/XRcMviZtBDsbuH5U8UCXNhGkBacVh\nyLOvGXq15IuxNedoWofjHYWb6y435mX614p7HXcA617n8yzEqbsvLhRFt8xiIZLT\n7d1OtkZGLnGTBEYASu9IZzlwWNyoQ8sK3yyeD1vFQ0v/oYPlSeXVsc9bgnpkwWA2\nLXZb2QKBgQCIlCfD/An1NaukxI5scoe5JuuFkzA58ERZA6DPsG1TLK33/DjbVhfR\nT5m72rG4J6rDt87K4qsl56OkRlay1yvsZpGpsL6JYvpAg+YWR0mxGtssnXjVHcBU\nLyfTq8FelGiO1DModwOGSG52OV3erp7rwZvR9oxnAPZWPplyK1YtTg==\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd/peer.key",
                            "id": "e8a0d4c8a0805b4144d9e451849f0ee6d0595134"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQNOW/snqHIsMv4/4i6uAI7zANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg0\nN1oXDTE5MDQyODExMDg0N1owITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMWXtdl/+4f8z2qX\nHhMky59eIoXPIZLL8XrQ4AQrairCcBD2VYbl7dwX4JMATeuvXO38u6+r+VbJ0682\nY8ImYrk+e5SDIavvdosiYXZwZ1cupT8mFzIBE/qmyHrUBkZBanjduZBpVEQyoj3k\nk2iABHOzGdT8M+0vabwbvsWhs4/B2tdzCHr7FhuaUqFgnbHIQsw3dnCW+YTbGkdo\nnQzI6fBVs90xQvSSAMnTBuJja2btKWr7qft+B3Sm6vrpYV7HzmMKSddRrvkrpH7D\nyzgL3gJAel8n9MKHoeZHIwSL0Bh7hiJz3KwmHkaaLqdj68twrJXOs03he41jn41e\nWWBBMasCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFJmlqCVh+7f915bt6AiTwyuit/0WMA0GCSqGSIb3DQEBCwUAA4IB\nAQCWzE1q/Wll20axcd6hTXhnWiLoqnvE9IWySJ1eQsVYqT1PByx+Mc6jQtHmC+9j\n6oQYO6tKZI/IVfuoIsEO2+NiAHPgQJarXG5zHmGcfjcbjZ5ox9Ac/65rQIDNhmHP\n7/E7nZU5T7O+YI+w6a7OcaLGQSqcg1ED1oWL5hyspAdI6sId2JHz80wc+HXtgHIL\nCz3xOJnjW+AqQtFd3HGY7heMRORfUkpujWO3uGI3w7ozlHscgPk1iUNWEFGB1ZLI\n7/NnhWcLg0RwygqqS0seh+sHLZGI3nezknKtC3VsCSz8gfcUdFmknFQDpgTimXz7\nu23VO8LqbegNTgToZVsJN4h2\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/server-ca.crt",
                            "id": "617ec41e2b19f22daf784b6f8979e8cc1a3aa041"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.server"
                    ],
                    "primary": {
                        "id": "0ca457ad9f91999216cec1b6ccf0095b905f261b",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAKwWrfBjjcG12bhg2RoAdeowDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvKVK++if\ncz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/PRMJLJAW7syVbHSCOJqf4i47\nQVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ/XG62HHtdWWdMLj0wD55TZCe\nOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuOAngmKiJaG0zoyLBPFK7/xtN/\nxQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY+Rxpb4RjGUNa22StZCBXWMsg\n2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CFXttjqmcyD/Wv0jAG7bZQd7ut\n4JEUJPRHQsH2wwIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSZ\npaglYfu3/deW7egIk8Mrorf9FjAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCqdLw7+tZj+rOjin14jUQOABlA\ntkfuioe4wEVuQeutWb2s04Agh5uTHrynDTQXxbRdsklXLKcwz6p9pjysovMvK4xk\nXlzismII/6r1eLZ7c87ll9ocHvA8VZDAiFxPnZ3SHnPtUxu0Or17EWnoSiUGFzdp\n2HQ1DYGK1grBzct9a9mK7426Nuc//m4xWa3reHNWg6F7fuyKenL+Se9kvCG399cd\nThos798BDJ0r9poBEdy0ssnz/Wb+jlLBh/8eBn0fFten59THAZrALGjJOWWgphEZ\n6tOBwSfXdFzu73YdKl6i2wdHd6wzNcLrVt+5jPWS7HSts2HVdliKTiQ/NK26\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/server.crt",
                            "id": "0ca457ad9f91999216cec1b6ccf0095b905f261b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.server"
                    ],
                    "primary": {
                        "id": "069a569688570986912f21a19fb7b94eda56adfb",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAvKVK++ifcz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/\nPRMJLJAW7syVbHSCOJqf4i47QVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ\n/XG62HHtdWWdMLj0wD55TZCeOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuO\nAngmKiJaG0zoyLBPFK7/xtN/xQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY\n+Rxpb4RjGUNa22StZCBXWMsg2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CF\nXttjqmcyD/Wv0jAG7bZQd7ut4JEUJPRHQsH2wwIDAQABAoIBAQCBaOrdkKEBkMH0\nBSc4rIwMjksEyr/2DF8RUM7d9+XeKiCddoxDO3HJrjbtLk87DVnftsMDiC+CDDtu\n+jWWtv6cBCAcH9oQjfjM1pyvrIWmBmc7tXA82u4QWWdKZ6DDsb3Eu5a/TPweWv21\ne8n/tjfSpNd0PlcW+9/RFBzuDItMPIpHJEe/W7EfHYCEcivBy4sus0eB0aOWWJdk\n40P8dyWvieej2vdsEKdlp2wyU6MJBcg2/rlSnh0OTAB+qW0kdBtZi20smEENrztX\nzSEjM1caEp13nzuwsoyCb8QV8VkKlmWZlyDJfew0Cxo6MW1aDqf8OM7ao8mPG9wH\niWsP0hvBAoGBANlLg+QwJoCjbHG42QgN2YfF9eswhtz9cN+PRzmoC/bL0+q0lgGi\n2VwNSvi3YKGOPdtXdP6EA45oJeh1guWPaFk7DvQ3Igty8UHxqVeZX29VLTCGItky\n0BqQiXdDCTLBeuv5rsaeuKRDa+1J2arLYe6wW9XHeVxXrfDEzTINV4GRAoGBAN4/\nZCusmo1sesIqVopH18OGcZ3ypDRnPOXYHL4U7jyLYEsEqyd4QCNhS6gUcQJo5IjZ\nCp+8oYHGh2G30ZCPtJU5cKWsf/NgpL9B1p/0PmaGKkSp/CCMziWd5hNa7uEPZLh5\ndUVwDGTabgRGIOV+uZV7/x2F6c6BiJ3cgX3zwUkTAoGAI7+2vS3mx7cbOkJtAlQ0\n+49n+/+J0IWpsj4CO8wX28yA2tZG75H5LJnLQcv5i9q49oMW7mCNrToZMntSw62q\nPzPmK+t+IGASrQSzFYRYHRroSllnFlCzyAsLcqGGu+D09imnxWmLewrUkL9bnivD\nut8s3KjqoHSUW04lbByhzuECgYEAuCQVvwn31A15eL7TjScRYnNWV+PeoXyYPGff\nCK8W5Rsl4YIwvTcpDSdkJBMrvy9hivEpmEgWGQyAxzoibIBkwu8gomRWbzQ3zC+k\nwEsCGLg49UNSHzYK56f4JTlGizrR3Pblb27zFezVEr14LC3fXjeqnK+DlRJGO2Wj\n9NOt5fkCgYEAht0VurmwkgeupSCMJFCIJ0giJpPThasKzjBq3DXGw3aiI6fGiNzX\nPUwOtQtsUIDO5t97L4ONg/9NajxRfbpY+9s/xMza1f4ABZhAYF2Kf7Sssi97phUD\ndHP/4vAfTRRSSrkT/q68pLFrGNzdiLCMhNZ/E7EC31JR3BMl83+W6l4=\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd/server.key",
                            "id": "069a569688570986912f21a19fb7b94eda56adfb"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kube-ca-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "11d447442bcaeb74d38fdad60a8e97e7e4590775",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDFzCCAf+gAwIBAgIRAJ4NT65xp/tbMuCJoHPzVnkwDQYJKoZIhvcNAQELBQAw\nJTERMA8GA1UEChMIYm9vdGt1YmUxEDAOBgNVBAMTB2t1YmUtY2EwHhcNMTgwNDI4\nMTEwODQ4WhcNMTkwNDI4MTEwODQ4WjAlMREwDwYDVQQKEwhib290a3ViZTEQMA4G\nA1UEAxMHa3ViZS1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANqL\nYy9dY3/5Vtv4PhjUXwAx+H0ec/K1knHdgx1qkqbvWUVvi/XNhXOAzjL+NL9aMYWx\nO3r/ic7X55lJGecZ7hyuGpCbuysTLlbEtldH8QrUY4BkB5ESrc6Zsu04drIHhpwu\nN75IYyRb1WfoOUfAMBK3Kl5OvTy/mByO2lIHGUQjiPmq9KJz7A8wXrL+lKDcm7DF\nRju57bIpOuQ/DnBfn4UcWqiIf5eljNeG4sLhnDdiybcrGxHuR8Fopc8PMtuduu2H\nFZndLh/ybLQpFOGN1ZvxWvSvNXFUWcevBy10q7iL2k95IWhg7p2B6L3wKXpS+i16\nwo1hP6iNw5HKxAS/3ssCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFCaY4+IbAc1nvHrW6M7e6nJmMDyVMA0GCSqGSIb3\nDQEBCwUAA4IBAQAU+oMpeVsUpXwbojWV0HokJdiOFPLUBjy9pXMy3eXTqPA/jsSh\noud5muih8TjP1J6fWRfsOdTb60gh3CYLAOutlbSZb8863XFoyIsudf7STSDNIxCD\n2R8Ha86Fyt/z/jEuEVi5Q54p5VUSNwWDLwZv/1s/I7JyDfnLTqKy+e5l8KpCtZ3Y\nTQbMvpScK7ZiTlwhoovNOojm+bT+IMqTvriB73PPxkZa+qOQBlHlOU+zGweiKibk\n80lMQif20cxtoa3D5/S4DGLRdsGn12Rp8/MV9NEcI9Krpat/p1M95tcJTpp82MIG\ngg4nCUK8lOVG8TrSDiMHr5ZrN602Uqtw49EQ\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/ca.crt",
                            "id": "11d447442bcaeb74d38fdad60a8e97e7e4590775"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kube-ca-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.kube-ca.*"
                    ],
                    "primary": {
                        "id": "2aa299358d03212618bf10c328eda2cc4d30bafa",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA2otjL11jf/lW2/g+GNRfADH4fR5z8rWScd2DHWqSpu9ZRW+L\n9c2Fc4DOMv40v1oxhbE7ev+JztfnmUkZ5xnuHK4akJu7KxMuVsS2V0fxCtRjgGQH\nkRKtzpmy7Th2sgeGnC43vkhjJFvVZ+g5R8AwErcqXk69PL+YHI7aUgcZRCOI+ar0\nonPsDzBesv6UoNybsMVGO7ntsik65D8OcF+fhRxaqIh/l6WM14biwuGcN2LJtysb\nEe5HwWilzw8y25267YcVmd0uH/JstCkU4Y3Vm/Fa9K81cVRZx68HLXSruIvaT3kh\naGDunYHovfApelL6LXrCjWE/qI3DkcrEBL/eywIDAQABAoIBAQChcr2oPQaHgQzQ\n3hgJwcIY49GdpQSlNcvlAG6fKZ8DYeiCKkCsKtM+m9Y4x6DyB9Bz4pV9bRBCVS/M\nBrvzBS3p1Bjd4Z4o2TevdAz8d7IzfOmw7LTGUJVD/jm3k7HkHTktYdteYB2Vu53w\n8BZ40hrxiIztNKAKI8RcvI++b24T7gsFP5qCtXciGBSBGEwEOQ2wwOmsurXbc6an\nt/dQtavk/Jp2DHS53pVJ1iRUOzDT7G6s6jQcvEES5vu7YfpQkW7BICblRy51NlXo\nktrHATGDcJLylQfi1q2GsIPpnnYS6MtpEXQApb/Z94rx4iSFynOh44eWfGuu49aN\nty2FbvRJAoGBAO0UTyzCdo1lkqsu+U3R5Bn+5i3Ja0sI/UBmWmYU6qUauEW3bhL9\n+9Fm02gtqHNs27wgbflpYGD7D0ERbJF+C+vYk2Q/5TC0FzGF5g4KwttjXOQ0/0Kf\n6mWkStS9i81birZmkjs5NnNgpxANukyB/av84HA61EXnvM+IFw4svXfPAoGBAOv8\nZg5N618en+R2VlneGoBMxjm+maR2ikhW43D5+XjcNaYcImDDzGRFipFSrl/7kEQn\nuy98YS4HqABM78B4PIHijQSIseoektqHYW28n+bZYDxrlSNHnDyqo0p9ZB6K3Vob\ny8X3XJr5ufqkpVsQcIoqXiwinPQxuwSUdgjIOSxFAoGAZa4sNvpAdmx1901yR1oa\nBrw4ZLLafZghZhl/9ABMkvtexSfi4epksm7zhN7wPHEX3RvbjvkPCQkkhbe/ZLc2\nzbRZosl0turGd8sB3EvpPsbi9E12nVCQ638HSS7yYuU8HPbpCNWE8P8nJ897c4zd\nC4Ktj/TrTgASDsBDgyTVLikCgYAwi8nK44iqFri53QZCkohNIH4e3vDofmJQI1/C\nnAoQLOz0cRE5as4fSpcI8kNhB3VUMAA38pRjTbvn4+vmYlXAOoTcC+rdyNBZGESY\nuJcEfG9pvo/9o/umF0xkRItWJScIJHO1E//++aSixUAnDai5I6If3jb/nUNl28y0\nXcw1KQKBgF7HTA+j9dURC/HI6YigIgbtoTsyY7kXsDogHvFIKt8LuQqg36l2wm6d\niSYSe7b+i8nVZmtnJH2nuu0JNp2drpS9HdbCBPk9jn7NjdGpI+mNhApTYHvDWY0i\nlsk/yUlzoVitEjDPy+4o80cKDsPUuj2N9J1oO4xI/TAJgdQH3WWW\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/ca.key",
                            "id": "2aa299358d03212618bf10c328eda2cc4d30bafa"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubeconfig": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.kubeconfig"
                    ],
                    "primary": {
                        "id": "dc2a0449be16c3d7e3be7f128a087c9d2b2495f2",
                        "attributes": {
                            "content": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "filename": "assets/auth/kubeconfig",
                            "id": "dc2a0449be16c3d7e3be7f128a087c9d2b2495f2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubelet-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet"
                    ],
                    "primary": {
                        "id": "5e6062bd870117a0efdefbe5fdc6f1200ad4cff6",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDOjCCAiKgAwIBAgIQcwPPAXQ2JZBwurjvPhSb4jANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0Mjgx\nMTA4NTFaFw0xOTA0MjgxMTA4NTFaMCsxFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJz\nMRAwDgYDVQQDEwdrdWJlbGV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAtawfmRgYbKn2MqTfCGu+2QY21IXE16/UkJ+C0M5BvB1C6+tuDyg+MgWcoGoG\ns9xOebEytbPnWHQdwARIwAk3kBb5VF9l5Asj0KEHYeW8vyVPk77dXSHmgIkoKMnn\nGxwyIuIclEpPJuIKLGqkE0r0+Vev/46GZAua/DlXUNQpLwB6z8fqsN7Pfgffdc4H\n9wxb85XmYyuvuL+OGBHtK1h74Jy5mYbW4J6eI96gIBS/IMlq52Nxbz7B3WDFkcWb\n8oFtOj4B7qTK98aBL2NgEkuPJCz1MX6g7ZUp1m6imvQthRmgEpj9prwJ0eArTiNL\nfNJmteDLmytmVKk4cmlFHlqS1wIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAwHQYD\nVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0j\nBBgwFoAUJpjj4hsBzWe8etbozt7qcmYwPJUwDQYJKoZIhvcNAQELBQADggEBAFv3\nleem6PPSx5a8oTlFQBHwahLtqpIMHP36e82PCJ9vbn7OmnXZ2Z9flfFJ81uFK5sl\nzaW7pf/hg5yF3BME0Ef14XwagY2rj3NHwFsyHjKE8hq+0KNqknWc+i7p7hUb+bjS\nvIgItL6tWaoTq87lFjyEx1uqjN1u/O+oVOXhy99pyJFrSeIR5fuhhkP3XH8BwSTr\nbamGM7emMtqLVWQq77DO7YOCYLhikG0RQqO7QAcV6GeeNV2rMhCvbZvM9u4NYSka\n1g659osuVfE0sb0zuT2QtgispFp1KR2Nu7/vrPJvnbtJ5GRyNI6AWLBqaNRAwsiX\nqk1S64P7nm9Wi+MGSQg=\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/kubelet.crt",
                            "id": "5e6062bd870117a0efdefbe5fdc6f1200ad4cff6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubelet-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.kubelet"
                    ],
                    "primary": {
                        "id": "49593516dc56f6b93a0bb4afdbcf02ab0c2ac861",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtawfmRgYbKn2MqTfCGu+2QY21IXE16/UkJ+C0M5BvB1C6+tu\nDyg+MgWcoGoGs9xOebEytbPnWHQdwARIwAk3kBb5VF9l5Asj0KEHYeW8vyVPk77d\nXSHmgIkoKMnnGxwyIuIclEpPJuIKLGqkE0r0+Vev/46GZAua/DlXUNQpLwB6z8fq\nsN7Pfgffdc4H9wxb85XmYyuvuL+OGBHtK1h74Jy5mYbW4J6eI96gIBS/IMlq52Nx\nbz7B3WDFkcWb8oFtOj4B7qTK98aBL2NgEkuPJCz1MX6g7ZUp1m6imvQthRmgEpj9\nprwJ0eArTiNLfNJmteDLmytmVKk4cmlFHlqS1wIDAQABAoIBAQCNLC71uZqpPj3Z\nxvKlyYxpewG6jiSTcsgchkeSWOUN+DMbvzwsPRpvppq6sQl6VNUKjZ8ZQa6htsGz\nh+C8ka0CpEelv+gemGWBZtCky3CrnKPE7Ml56LEE6xAw+gxDrdpr7wdEWKY/UeGT\n+F59u364D+LtFOTr83TBURG/9s31/frlw4K5CicDEke35JjbewZrLZ9u8UvVNrtp\n6Ghr2v0o1nxlmYAS/Sgs4a1WGkYG6WdYBmVkjXf+Li0jZfJSi772dYbmnvXCputD\nQ2Pbj3GVM0ATGvfZio66ldGcSuMD8h+wFA843V8mhHWdk8HwAy0iNNVsipza78U0\nphuGASwhAoGBAM2p6CVCS8a71Uy7ctAh9oN6vMyQt+D4RoHfGpWz3+3H9qqb1WIq\nzXj1MVgXsTC4gSlpXC4OGIkDQgqyl1sSoKDtiepGYe6wOjvl7EBDRxCPY9sQiFQt\n/US7OMX4B21dabTm2KiMYb+tAuwF7nk3bi/BGZMcY00sGDwmDuG95/NRAoGBAOIj\nAwWQ7uTM/RbKj6doKkexr5drP5myR4KuUqRPYpfHXfaFJBLcbTtPZF3TN6LuTLfl\ngFtWZc2piP63Nk7JRvr3qZ/yv8Em2u9+XTcrII7x+nGbwbMWJyCXvycl7kwcs/Jr\nJUTlm8YSAXHNHj+Zo95L6G9D8VYPeXRQ674LbQmnAoGAGm0blDYJkJawGLT5Ur8a\nctiBi/OIfRLJ1IQ7YUMEogQQsOlnKL8BOeqflYct0GnUxuJv4scS5gASK1e5VQ12\nsFb1YrH6gXYJdYrcqYE7j2gtV4evTMnAAmXgLKfrJGVdYM5MxpOLN9reRj+Y3eB+\newpf4+RA6jihQJFPVjhVppECgYA10jtv4bTaA+fguslCAMq/UY0HLuFuRT473h2R\nOcuvcCXu/HU/f/MHgLfUlObTAoCD7D2Gf6OvNUCDzzs/uSwJo1Rd2zrET+kfwyWQ\ncdVH8FO5ImcRpp4dZcB7Is36k4JImjO+mB9hHvv1B+rBHGIiEFL72GHiJ8CybGgP\nTUzgVQKBgQCVYOsZ80HWiSNBBTq9/jYM44kj40jl70WE2Qx7NkrE+g9schWJIV56\n3NYUiEYQqjcnh9TKwnsTOwbBSwxsqT1ANbXGhPeVCgq1s2fwGICp8nDdlRswpUJy\nkzB6FXeXz1YFeTdMRTqm2aXeL1sfs7AM8sau7GejWfa0M308w6Zg0Q==\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/kubelet.key",
                            "id": "49593516dc56f6b93a0bb4afdbcf02ab0c2ac861"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.service-account-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.service-account"
                    ],
                    "primary": {
                        "id": "6986958f7b0a1b0ae392335b3d7f1cfa7791654d",
                        "attributes": {
                            "content": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw2NcBkdRj4i9jGN11Q7e\n3N29S9xp6Vf5+VX5m1T3jsbBySyxoctI/ouDBFNPzxbejJPxcgEFcQNu4nE36sEJ\ni5AxKVo2evWQZ0oQj7QRmuI2O9aULdKSlktJ6teYggwzLweQuO/8H6LsleFLrqMy\naJtcZZdk1sRRvs9npaZT+HDKjjOHZpNgtDBZs6treulAeix5T5GKuXjSKs7KeVwJ\nJi5HyVQTqlID126JYO8PxJV0pDeUfHJPna+P5hMpbTvYaRwT/pqvE+3ftzWvHRHl\n4WKaxH7AxJUnv4721wtk5jnfckqX1oQM+lIy5/WCTPfO3+cKU884E0wMdzjSPoFE\n+wIDAQAB\n-----END PUBLIC KEY-----\n",
                            "filename": "assets/tls/service-account.pub",
                            "id": "6986958f7b0a1b0ae392335b3d7f1cfa7791654d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.service-account-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.service-account"
                    ],
                    "primary": {
                        "id": "e8c574c3b81f4d33439c6ff21b76abed071df48a",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAw2NcBkdRj4i9jGN11Q7e3N29S9xp6Vf5+VX5m1T3jsbBySyx\noctI/ouDBFNPzxbejJPxcgEFcQNu4nE36sEJi5AxKVo2evWQZ0oQj7QRmuI2O9aU\nLdKSlktJ6teYggwzLweQuO/8H6LsleFLrqMyaJtcZZdk1sRRvs9npaZT+HDKjjOH\nZpNgtDBZs6treulAeix5T5GKuXjSKs7KeVwJJi5HyVQTqlID126JYO8PxJV0pDeU\nfHJPna+P5hMpbTvYaRwT/pqvE+3ftzWvHRHl4WKaxH7AxJUnv4721wtk5jnfckqX\n1oQM+lIy5/WCTPfO3+cKU884E0wMdzjSPoFE+wIDAQABAoIBAQCtheFlZhNGMP99\n3Zr5M/KzHm6OH9sjs9E6IaPC0svkzhmuK3Y6JYrXHVmnDsJTPZE6Me18/PEzNARX\nMIujffqXKuCuRAMcYlfzk3Bv31C/R+U4cVI5+8fZmFW2LfCwllsiikp6JA+6nPwW\nA/ctypvrEQcW5kRVBBdBKXt4PuZWPXAV2MydJQ7ENWE9kgBUpwn7ci70qq2pE6yQ\nAaJTHO85Y0uWjB7x7ceyzIzpqwwcAZPEoNtvbhYRnNUW4EPH1szi5G8CM/4vjrvs\nmEVVDZ7SwJbpWQUAn+rxLEiTkG31HT68R8nLGXZGnZxq5tIL1Ei0MHNGHU7REQ+2\n0JHAw3phAoGBANoNaEXjL6G6jWD3PaCUoJGvXE0IgbiJaijgEJoQqX2aP2WHgmFg\nCY8EVkSDJLQEaYkalJJP56cHHpYJzp4NWXSdxPMyAbLQSiV6wfsFxQ6FQqFotXqs\nCFiLOm1DG+fgBjJTFNQaaWa1THDEfSBqoZfXj3/fwafAAVabRPyPK7KLAoGBAOVk\nOPRQEzCRKAnvGy2KIIXJyaF6XKe9Zxn69+LGIakN1mpmxFc62srvE4mgJacND7SQ\nyAnQECFSNPMbE0isIMYFS/BkXCUhuC6saq/kvaODqQi2sDAuJGJvnqEpqm+EzNID\nbEutNKIyRKoC1mTaxkQnw3C4YAnXuUhe0jlbBTVRAoGBAJujWjwYDtWHTIZbsxc9\nPub9ngo1+jF3k9idJfxxzCikwn97m6pZXDlCxTidysLbK2D7IfTVJ+nmgQRi96GE\nscc1HXDgzqmNVn8uAetkkOTuZULEdFSdGk/pAMkgT3jQRFwDRSinuXfgDDGpbg6H\nTdQNvpVtZtKPj+T7auBCaNRFAoGAONYCPpZwisIMd5mk1D27HSsIKFhXCMCnAQrr\nzGZnBKoHDEn2L97HQyzFXH4vlhpoX8bXqYbB2F+z+uAkgQcU/7tkO2XCZvjZ18ak\nkHxOeGswwJXzRZzJKxKY7TmTnxn6Xba3aHC778wgszcMw+Ro544qoI0uToICyGmm\nEMv6mGECgYEAurULY7NvfeW6E85ceAAuwBj7L4j2gtUu0X+SWZel19P/VWsSl7kn\nTB0s7qBDzCSl4ZraL2IhcBvaPtTjktwdqDgnEut2xzuoYKY5pH96OPACRYv9ZHwu\nTi50Zf4VyrB4kOnBXF1ylcUB45qyeZfXQ81AnLYz7TVhnmsasj4eGhk=\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/service-account.key",
                            "id": "e8c574c3b81f4d33439c6ff21b76abed071df48a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.user-kubeconfig": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.user-kubeconfig"
                    ],
                    "primary": {
                        "id": "9868d0928ae3190e88a111b06a7ca7c15adcd832",
                        "attributes": {
                            "content": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRY3dQUEFYUTJKWkJ3dXJqdlBoU2I0akFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpneApNVEE0TlRGYUZ3MHhPVEEwTWpneE1UQTROVEZhTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXRhd2ZtUmdZYktuMk1xVGZDR3UrMlFZMjFJWEUxNi9Va0orQzBNNUJ2QjFDNit0dUR5ZytNZ1djb0dvRwpzOXhPZWJFeXRiUG5XSFFkd0FSSXdBazNrQmI1VkY5bDVBc2owS0VIWWVXOHZ5VlBrNzdkWFNIbWdJa29LTW5uCkd4d3lJdUljbEVwUEp1SUtMR3FrRTByMCtWZXYvNDZHWkF1YS9EbFhVTlFwTHdCNno4ZnFzTjdQZmdmZmRjNEgKOXd4Yjg1WG1ZeXV2dUwrT0dCSHRLMWg3NEp5NW1ZYlc0SjZlSTk2Z0lCUy9JTWxxNTJOeGJ6N0IzV0RGa2NXYgo4b0Z0T2o0QjdxVEs5OGFCTDJOZ0VrdVBKQ3oxTVg2ZzdaVXAxbTZpbXZRdGhSbWdFcGo5cHJ3SjBlQXJUaU5MCmZOSm10ZURMbXl0bVZLazRjbWxGSGxxUzF3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUpwamo0aHNCeldlOGV0Ym96dDdxY21Zd1BKVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnYzCmxlZW02UFBTeDVhOG9UbEZRQkh3YWhMdHFwSU1IUDM2ZTgyUENKOXZibjdPbW5YWjJaOWZsZkZKODF1Rks1c2wKemFXN3BmL2hnNXlGM0JNRTBFZjE0WHdhZ1kycmozTkh3RnN5SGpLRThocSswS05xa25XYytpN3A3aFViK2JqUwp2SWdJdEw2dFdhb1RxODdsRmp5RXgxdXFqTjF1L08rb1ZPWGh5OTlweUpGclNlSVI1ZnVoaGtQM1hIOEJ3U1RyCmJhbUdNN2VtTXRxTFZXUXE3N0RPN1lPQ1lMaGlrRzBSUXFPN1FBY1Y2R2VlTlYyck1oQ3ZiWnZNOXU0TllTa2EKMWc2NTlvc3VWZkUwc2IwenVUMlF0Z2lzcEZwMUtSMk51Ny92clBKdm5idEo1R1J5Tkk2QVdMQnFhTlJBd3NpWApxazFTNjRQN25tOVdpK01HU1FnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGF3Zm1SZ1liS24yTXFUZkNHdSsyUVkyMUlYRTE2L1VrSitDME01QnZCMUM2K3R1CkR5ZytNZ1djb0dvR3M5eE9lYkV5dGJQbldIUWR3QVJJd0FrM2tCYjVWRjlsNUFzajBLRUhZZVc4dnlWUGs3N2QKWFNIbWdJa29LTW5uR3h3eUl1SWNsRXBQSnVJS0xHcWtFMHIwK1Zldi80NkdaQXVhL0RsWFVOUXBMd0I2ejhmcQpzTjdQZmdmZmRjNEg5d3hiODVYbVl5dXZ1TCtPR0JIdEsxaDc0Snk1bVliVzRKNmVJOTZnSUJTL0lNbHE1Mk54CmJ6N0IzV0RGa2NXYjhvRnRPajRCN3FUSzk4YUJMMk5nRWt1UEpDejFNWDZnN1pVcDFtNmltdlF0aFJtZ0VwajkKcHJ3SjBlQXJUaU5MZk5KbXRlRExteXRtVktrNGNtbEZIbHFTMXdJREFRQUJBb0lCQVFDTkxDNzF1WnFwUGozWgp4dktseVl4cGV3RzZqaVNUY3NnY2hrZVNXT1VOK0RNYnZ6d3NQUnB2cHBxNnNRbDZWTlVLalo4WlFhNmh0c0d6CmgrQzhrYTBDcEVlbHYrZ2VtR1dCWnRDa3kzQ3JuS1BFN01sNTZMRUU2eEF3K2d4RHJkcHI3d2RFV0tZL1VlR1QKK0Y1OXUzNjREK0x0Rk9UcjgzVEJVUkcvOXMzMS9mcmx3NEs1Q2ljREVrZTM1SmpiZXdackxaOXU4VXZWTnJ0cAo2R2hyMnYwbzFueGxtWUFTL1NnczRhMVdHa1lHNldkWUJtVmtqWGYrTGkwalpmSlNpNzcyZFlibW52WENwdXREClEyUGJqM0dWTTBBVEd2ZlppbzY2bGRHY1N1TUQ4aCt3RkE4NDNWOG1oSFdkazhId0F5MGlOTlZzaXB6YTc4VTAKcGh1R0FTd2hBb0dCQU0ycDZDVkNTOGE3MVV5N2N0QWg5b042dk15UXQrRDRSb0hmR3BXejMrM0g5cXFiMVdJcQp6WGoxTVZnWHNUQzRnU2xwWEM0T0dJa0RRZ3F5bDFzU29LRHRpZXBHWWU2d09qdmw3RUJEUnhDUFk5c1FpRlF0Ci9VUzdPTVg0QjIxZGFiVG0yS2lNWWIrdEF1d0Y3bmszYmkvQkdaTWNZMDBzR0R3bUR1Rzk1L05SQW9HQkFPSWoKQXdXUTd1VE0vUmJLajZkb0trZXhyNWRyUDVteVI0S3VVcVJQWXBmSFhmYUZKQkxjYlR0UFpGM1RONkx1VExmbApnRnRXWmMycGlQNjNOazdKUnZyM3FaL3l2OEVtMnU5K1hUY3JJSTd4K25HYndiTVdKeUNYdnljbDdrd2NzL0pyCkpVVGxtOFlTQVhITkhqK1pvOTVMNkc5RDhWWVBlWFJRNjc0TGJRbW5Bb0dBR20wYmxEWUprSmF3R0xUNVVyOGEKY3RpQmkvT0lmUkxKMUlRN1lVTUVvZ1FRc09sbktMOEJPZXFmbFljdDBHblV4dUp2NHNjUzVnQVNLMWU1VlExMgpzRmIxWXJINmdYWUpkWXJjcVlFN2oyZ3RWNGV2VE1uQUFtWGdMS2ZySkdWZFlNNU14cE9MTjlyZVJqK1kzZUIrCmV3cGY0K1JBNmppaFFKRlBWamhWcHBFQ2dZQTEwanR2NGJUYUErZmd1c2xDQU1xL1VZMEhMdUZ1UlQ0NzNoMlIKT2N1dmNDWHUvSFUvZi9NSGdMZlVsT2JUQW9DRDdEMkdmNk92TlVDRHp6cy91U3dKbzFSZDJ6ckVUK2tmd3lXUQpjZFZIOEZPNUltY1JwcDRkWmNCN0lzMzZrNEpJbWpPK21COWhIdnYxQityQkhHSWlFRkw3MkdIaUo4Q3liR2dQClRVemdWUUtCZ1FDVllPc1o4MEhXaVNOQkJUcTkvallNNDRrajQwamw3MFdFMlF4N05rckUrZzlzY2hXSklWNTYKM05ZVWlFWVFxamNuaDlUS3duc1RPd2JCU3d4c3FUMUFOYlhHaFBlVkNncTFzMmZ3R0lDcDhuRGRsUnN3cFVKeQprekI2RlhlWHoxWUZlVGRNUlRxbTJhWGVMMXNmczdBTThzYXU3R2VqV2ZhME0zMDh3NlpnMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n",
                            "filename": "assets/auth/steve-config",
                            "id": "9868d0928ae3190e88a111b06a7ca7c15adcd832"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "template_dir.bootstrap-manifests": {
                    "type": "template_dir",
                    "depends_on": [],
                    "primary": {
                        "id": "e2934d23da955e660787419c71a43357a8209b34",
                        "attributes": {
                            "destination_dir": "assets/bootstrap-manifests",
                            "id": "e2934d23da955e660787419c71a43357a8209b34",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/bootstrap-manifests",
                            "vars.%": "6",
                            "vars.cloud_provider": "",
                            "vars.etcd_servers": "https://n2.steve:2379",
                            "vars.hyperkube_image": "k8s.gcr.io/hyperkube:v1.10.1",
                            "vars.pod_cidr": "10.2.0.0/16",
                            "vars.service_cidr": "10.3.0.0/16",
                            "vars.trusted_certs_dir": "/usr/share/ca-certificates"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "template_dir.calico-manifests": {
                    "type": "template_dir",
                    "depends_on": [],
                    "primary": {
                        "id": "c73a66f3e6827250e61454f14ce5e32bff5e6716",
                        "attributes": {
                            "destination_dir": "assets/manifests-networking",
                            "id": "c73a66f3e6827250e61454f14ce5e32bff5e6716",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/calico",
                            "vars.%": "4",
                            "vars.calico_cni_image": "quay.io/calico/cni:v2.0.1",
                            "vars.calico_image": "quay.io/calico/node:v3.0.4",
                            "vars.network_mtu": "1480",
                            "vars.pod_cidr": "10.2.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "template_dir.manifests": {
                    "type": "template_dir",
                    "depends_on": [
                        "tls_locally_signed_cert.apiserver",
                        "tls_locally_signed_cert.client",
                        "tls_private_key.apiserver",
                        "tls_private_key.client",
                        "tls_private_key.service-account",
                        "tls_self_signed_cert.etcd-ca",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "afe3ebd4ff1230cd6b34243acef8d0a3bcb84c0d",
                        "attributes": {
                            "destination_dir": "assets/manifests",
                            "id": "afe3ebd4ff1230cd6b34243acef8d0a3bcb84c0d",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/manifests",
                            "vars.%": "21",
                            "vars.apiserver_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0ekNDQXArZ0F3SUJBZ0lSQUlPTiszb2lTZ2psZGNPTlIyZkg0bGd3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RVeFdoY05NVGt3TkRJNE1URXdPRFV4V2pBdk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVYCk1CVUdBMVVFQXhNT2EzVmlaUzFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNzWVMwYVVENElpTU54LzJjS3Y0cEpJaGU5YXgwN0lDVzlUY01ETklNVHdhWFRFaTdZM2JRSwpiSWxJZmQ4TVBGelV2RVU5SFRYVFlEQ0hJcmpkRE1COWZGeGhKMXF4UnhUVmVyWGxMajJtcmprK21vcVFIaGF3CjRqR1NKODNXUVZvTVNZcnpxTjc5VlpYUlBFNjBVdGlKb3hBcmdCWENCRjQxMkVrZmoyMDdPTk15TWRBWlErRmcKQWw5NGQ3c1ZSU2tCUytWZmlKc0M2a1htK0VSU1RUOWVtM0ptR29kcEdrbERFNS9MZ1cyMmVCTkQ1bGFvazRNRgo1V1dSZlhweUVaWnRXUlRjU0x2aWZvbUlMeThnMnJjYVN4emd5MVZZYkVHT2ppUlphZTQrcy9uYThOQXN6dEJZCjJ4U2FRZEdWREhVVUNwY0lPV0xzNFRnbUhzRS9PQ0hyQWdNQkFBR2pnZGN3Z2RRd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjhHQTFVZEl3UVlNQmFBRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1IUUdBMVVkRVFSdE1HdUNCWE4wClpYWmxnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQ0ZtdDFZbVZ5Ym1WMFpYTXUKWkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaApiSWNFQ2dNQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFiSVJ5QUNsK3MySEJ3dnlTSHQxRmx4US8wQklrCnJ3VXY2UkVyL3NJRDhvRm1HTDZ0T2w4VDZuYWRSdFZ2OFhMUXkxNzFUR1ozdUpvTVEycy9BcmUwbTh6b0YxSjQKMzFCbko3MDkwQmM4VGJrbEdDWmsxMXhza0p1ZTZoTVFiV1pqcjRsRGFab21EMU9EQnNoMDE3bHpLZ2FOazZBSwpNaDBuV21LSUxlbjVhMDRNZHBpdHcxTlJ1bEhCOTZWU09vWGxNTVNqYzB6S2ZGdmlSUHVTSDgyWlB4eWFYNXpFCkwrU1dkZzEycmFuNjArWGVmK2luQ1dEcEhSSzFiNE9Da09xbTYzWWJoKytkK1orbkE3L01iNXVZU3ZRTnBNQ1cKUnZpcXBtcGU2TCtkTlhrc3VyczMreThFWW1OMGtWZE5HVVBlcGtzeFllZzk4RjFVU3FKYVJ3cXdOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.apiserver_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckdFdEdsQStDSWpEY2Y5bkNyK0tTU0lYdldzZE95QWx2VTNEQXpTREU4R2wweEl1CjJOMjBDbXlKU0gzZkREeGMxTHhGUFIwMTAyQXdoeUs0M1F6QWZYeGNZU2Rhc1VjVTFYcTE1UzQ5cHE0NVBwcUsKa0I0V3NPSXhraWZOMWtGYURFbUs4NmplL1ZXVjBUeE90RkxZaWFNUUs0QVZ3Z1JlTmRoSkg0OXRPempUTWpIUQpHVVBoWUFKZmVIZTdGVVVwQVV2bFg0aWJBdXBGNXZoRVVrMC9YcHR5WmhxSGFScEpReE9meTRGdHRuZ1RRK1pXCnFKT0RCZVZsa1gxNmNoR1diVmtVM0VpNzRuNkppQzh2SU5xM0drc2M0TXRWV0d4QmpvNGtXV251UHJQNTJ2RFEKTE03UVdOc1Vta0hSbFF4MUZBcVhDRGxpN09FNEpoN0JQemdoNndJREFRQUJBb0lCQURhbmZQQnAzckZBQTQvaQpaWjVQeXAyVGRLbDNDOGFTVThUb29kc2pUQ2Y0YndZMExxeE41dWFqTVFmTitPbGRQaVdwSjk3UG95QkkwRG9ZCmRUcUk3NE1aNmdSWHdQYVNUZlc5dVd4WHMrNWtNUHc3YlpGeUtNbWVmZzhVRmJ4SDdqQVZKVHhLSDZGOUFFcGQKNzZwVzFoY1ZuMnZiYVlxaGJlbHVrUWl6cGZOdmRIVDFmek5TOUQ3aFdIeUdOZHlEMm9ZRjdoMlNSUHo5Q1g1cAowTi9BMlY0N0dFeEkxSHJveHRUbFE3eWRuR3dXcnJHa0JuenQ1MUREUWk5TFVJNElKQVFxU0dNcGdCUHhaZE9XCnVERzZiNkRtQi9wTGlBZSt5SjFPVlVIZkgyVVV5ZTBsM3Q2dlBzVGpqWEw3UlRCUFJIMDBSTmdHd0lVVktVNVMKUlh4Rmg4a0NnWUVBMzhZSGMyT2NFdUIrbjRhS05wWDVwdDRYMitWQWE4UHl2Y0dnTVo3ekU1Y0xjUGFLTjEvcApjd1Z3M3RiOG5NTmdBWjRDejAxSGtyWEVDbU82UzBic2E1MjZRdE02dUpQNFhXVnVSMytvRUFIL0pnbysrSm43CkRRQXN3eUpOektjeldiOTdrYWNNUHIxTmRwbUpMZk9QbWpFM0ZaVDFVdGk4cFpBdWxiSXovZFVDZ1lFQXhUUmgKYUJJcVd5V1NCamg5S21EOXJuM1RGcFNCdk1CMnFFVnZKU1l0NUJaMGRxNks2MWpBUWpzU2JZeWhsVS9BbjVKcQpBNEhVUlRERXUrd0VIUHJSS3dFZWRtZXpDY0hNTnhhcEozM2hieHV0T0ltTnMzKzEzR2VQY0JJaDZ4d1R2WEU0CmpoZGxGeUd0c2RUbTZWZmhzcUZmVUZ6NzFlRmpTaU1yUmF6V3dMOENnWUVBeVRRMjJOTFVyOGg1TWhqM3gzTDgKWWNUS2NTYmwwTUFFVUFoOGNJRjZFTUE4UWxyN0ZpVkFNL0xOZFNDYlRKMERneEMvZUFRRmVlM0Rrby92SHVacgpoNnZ2b1V4cVBUS1hHK3NxeUZFSkhUT2VabWJLRGgvdHN0ZllaN0E5Z2VsSTY4YVhaZlJzdHpEaEtPV09pZW00CjBpeTBXY3h3OVFmNlAyZXY2MXVyRWUwQ2dZQms4RmUvVmpUNTdIUWUzUUVzRlBNa1FtRXVtSnNEaXh2eEs0RWwKYWJKcG9oakF1cngrbERIc2RLSU5Fc09PVW9FTTdIdDVDaFlseUQyYTFzYVFNczJuam00U095Z0lJWHN1NDFsMwp6bFg2Y2hjcTdqVnFvRDdzN3RFYmt4eHJaRGF5YStaL3pIZkE3RXNrMEEzVmVGY2RBTDV4dXZab1ZuSmsrelZsCjkzOEFyd0tCZ0dMZ2R3WXlVQVdpemJtMk5UWGZySERvK0szUGRKcytkY29pT2RkQlB0emh2eTQ3ZjVZR09KVXkKT3NlZFRrRk1lSHBQVkl4MEthaW4zd2Qwc2hwWDZmczlQVWF3ZCt2MElSWitBaFI5Sk1EdHAxdmRib1ZHbXFubQpVd3FTb2dpQWRKdWovdmNBYkFpU3l1NVN5bWppVFhFVG41OUJ4UkxiU1Q1VmI1a3FiTTJxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUo0TlQ2NXhwL3RiTXVDSm9IUHpWbmt3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFUk1BOEdBMVVFQ2hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd3TkRJNApNVEV3T0RRNFdoY05NVGt3TkRJNE1URXdPRFE0V2pBbE1SRXdEd1lEVlFRS0V3aGliMjkwYTNWaVpURVFNQTRHCkExVUVBeE1IYTNWaVpTMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOcUwKWXk5ZFkzLzVWdHY0UGhqVVh3QXgrSDBlYy9LMWtuSGRneDFxa3FidldVVnZpL1hOaFhPQXpqTCtOTDlhTVlXeApPM3IvaWM3WDU1bEpHZWNaN2h5dUdwQ2J1eXNUTGxiRXRsZEg4UXJVWTRCa0I1RVNyYzZac3UwNGRySUhocHd1Ck43NUlZeVJiMVdmb09VZkFNQkszS2w1T3ZUeS9tQnlPMmxJSEdVUWppUG1xOUtKejdBOHdYckwrbEtEY203REYKUmp1NTdiSXBPdVEvRG5CZm40VWNXcWlJZjVlbGpOZUc0c0xobkRkaXliY3JHeEh1UjhGb3BjOFBNdHVkdXUySApGWm5kTGgveWJMUXBGT0dOMVp2eFd2U3ZOWEZVV2NldkJ5MTBxN2lMMms5NUlXaGc3cDJCNkwzd0tYcFMraTE2CndvMWhQNmlOdzVIS3hBUy8zc3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNhWTQrSWJBYzFudkhyVzZNN2U2bkptTUR5Vk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFVK29NcGVWc1VwWHdib2pXVjBIb2tKZGlPRlBMVUJqeTlwWE15M2VYVHFQQS9qc1NoCm91ZDVtdWloOFRqUDFKNmZXUmZzT2RUYjYwZ2gzQ1lMQU91dGxiU1piODg2M1hGb3lJc3VkZjdTVFNETkl4Q0QKMlI4SGE4NkZ5dC96L2pFdUVWaTVRNTRwNVZVU053V0RMd1p2LzFzL0k3SnlEZm5MVHFLeStlNWw4S3BDdFozWQpUUWJNdnBTY0s3WmlUbHdob292Tk9vam0rYlQrSU1xVHZyaUI3M1BQeGtaYStxT1FCbEhsT1Urekd3ZWlLaWJrCjgwbE1RaWYyMGN4dG9hM0Q1L1M0REdMUmRzR24xMlJwOC9NVjlORWNJOUtycGF0L3AxTTk1dGNKVHBwODJNSUcKZ2c0bkNVSzhsT1ZHOFRyU0RpTUhyNVpyTjYwMlVxdHc0OUVRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.cloud_provider": "",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.etcd_ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQWZhZ0F3SUJBZ0lRTk9XL3NucUhJc012NC80aTZ1QUk3ekFOQmdrcWhraUc5dzBCQVFzRkFEQWgKTVEwd0N3WURWUVFLRXdSbGRHTmtNUkF3RGdZRFZRUURFd2RsZEdOa0xXTmhNQjRYRFRFNE1EUXlPREV4TURnMApOMW9YRFRFNU1EUXlPREV4TURnME4xb3dJVEVOTUFzR0ExVUVDaE1FWlhSalpERVFNQTRHQTFVRUF4TUhaWFJqClpDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNV1h0ZGwvKzRmOHoycVgKSGhNa3k1OWVJb1hQSVpMTDhYclE0QVFyYWlyQ2NCRDJWWWJsN2R3WDRKTUFUZXV2WE8zOHU2K3IrVmJKMDY4MgpZOEltWXJrK2U1U0RJYXZ2ZG9zaVlYWndaMWN1cFQ4bUZ6SUJFL3FteUhyVUJrWkJhbmpkdVpCcFZFUXlvajNrCmsyaUFCSE96R2RUOE0rMHZhYndidnNXaHM0L0IydGR6Q0hyN0ZodWFVcUZnbmJISVFzdzNkbkNXK1lUYkdrZG8KblF6STZmQlZzOTB4UXZTU0FNblRCdUpqYTJidEtXcjdxZnQrQjNTbTZ2cnBZVjdIem1NS1NkZFJydmtycEg3RAp5emdMM2dKQWVsOG45TUtIb2VaSEl3U0wwQmg3aGlKejNLd21Ia2FhTHFkajY4dHdySlhPczAzaGU0MWpuNDFlCldXQkJNYXNDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKSFFZRFZSME9CQllFRkptbHFDVmgrN2Y5MTVidDZBaVR3eXVpdC8wV01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUNXekUxcS9XbGwyMGF4Y2Q2aFRYaG5XaUxvcW52RTlJV3lTSjFlUXNWWXFUMVBCeXgrTWM2alF0SG1DKzlqCjZvUVlPNnRLWkkvSVZmdW9Jc0VPMitOaUFIUGdRSmFyWEc1ekhtR2NmamNialo1b3g5QWMvNjVyUUlETmhtSFAKNy9FN25aVTVUN08rWUkrdzZhN09jYUxHUVNxY2cxRUQxb1dMNWh5c3BBZEk2c0lkMkpIejgwd2MrSFh0Z0hJTApDejN4T0pualcrQXFRdEZkM0hHWTdoZU1ST1JmVWtwdWpXTzN1R0kzdzdvemxIc2NnUGsxaVVOV0VGR0IxWkxJCjcvTm5oV2NMZzBSd3lncXFTMHNlaCtzSExaR0kzbmV6a25LdEMzVnNDU3o4Z2ZjVWRGbWtuRlFEcGdUaW1YejcKdTIzVk84THFiZWdOVGdUb1pWc0pONGgyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.etcd_client_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRZkNlYjA5SzNzd3kwUHN0ZzdTTXp5REFOQmdrcWhraUc5dzBCQVFzRkFEQWgKTVEwd0N3WURWUVFLRXdSbGRHTmtNUkF3RGdZRFZRUURFd2RsZEdOa0xXTmhNQjRYRFRFNE1EUXlPREV4TURnMQpNVm9YRFRFNU1EUXlPREV4TURnMU1Wb3dKVEVOTUFzR0ExVUVDaE1FWlhSalpERVVNQklHQTFVRUF4TUxaWFJqClpDMWpiR2xsYm5Rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtQmFUTWJNZE8KQUhKUkhBSUlZNkEzTmNONUFNenJ3ODVtT2QzWUNnd2VpK3UzNWZKOUU5NCtabWpJY2hqU3ZLUi9ER0hrVHR0ZQpFTWI0UUlRb0wyZEd2Smp2UXB6VUpvWHdScU1oYTZvSDBpQ2RzYVFtVzVSVHZWbU9LYlFZcmZyc1dsSkh4dy9rCmprc0JsL3h0MStSMCtFMkpRQVdIL0diUit1RkFGdTRsSUQ2T050OFlPSDBjTDVhNjNiZWJvU0d3K1NacU5STVcKVy9QU2o1ZmxUWHNnamp3RVBEcmVrc3JLQXhvaEd4Z0dVdVNOdFZQeURMYUJpa3RxdGI1NnEycXRkR2FyWDVCdApoM2tMU04vbzZaQ2hRaW9DeXkvNWFBU2d0S2I2UzZtdXNYWGl4TjNtZ0xGeVdZRkVzb0hDRWdBbWhYSzRPZTNCCkVFcU9MM1hKOWhIWEFnTUJBQUdqZ1ljd2dZUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkptbApxQ1ZoKzdmOTE1YnQ2QWlUd3l1aXQvMFdNQ1FHQTFVZEVRUWRNQnVDQ0c0eUxuTjBaWFpsZ2dsc2IyTmhiR2h2CmMzU0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIZDZtc0FXUldmRWZmbjNLSlpCRFAwZ0JjRS8KSEJtNDBBUml4OVZZUi9IU1JHdnozN3ZqTjJLUEhsTzRiMGF1TFRReW1qRTROd0pSMWJ3OUc1c3cxc1ZId0U5RApTWHdoUW8zYTcvL2M3UzkvZ1dOdXZYYjdOWlJtZ1k3UnlDU1RTTTBiUmlXNjNIeFQzbVdQb1JseTFmTkVqcTVmCmN4REE4K3dtME9tNlh6K3VERjBCUEtSM29BYmJGM3lBTXJZTE4vN0szV3RKZ0twWWsrT1FMQnpRTjRrTlh6V0QKVGhBd1c1eGJtVGRsMEhiUTlqZnlzVSthUjZCVVI5VW0wQ3JOcWg0bEc0Z2dON0JyTk13NmJFZzhweVpDU1dUdgo0ZEdFTnJrKysvSU1ZZGp3dHVWY2tLOVlxb3ZkVWJibmxGaThhZlVXd2pCN3hXUWtzSmtreFh6Z2MyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "vars.etcd_client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGdXa3pHekhUZ0J5VVJ3Q0NHT2dOelhEZVFETTY4UE9aam5kMkFvTUhvdnJ0K1h5CmZSUGVQbVpveUhJWTByeWtmd3hoNUU3YlhoREcrRUNFS0M5blJyeVk3MEtjMUNhRjhFYWpJV3VxQjlJZ25iR2sKSmx1VVU3MVpqaW0wR0szNjdGcFNSOGNQNUk1TEFaZjhiZGZrZFBoTmlVQUZoL3htMGZyaFFCYnVKU0ErampiZgpHRGg5SEMrV3V0MjNtNkVoc1BrbWFqVVRGbHZ6MG8rWDVVMTdJSTQ4QkR3NjNwTEt5Z01hSVJzWUJsTGtqYlZUCjhneTJnWXBMYXJXK2VxdHFyWFJtcTErUWJZZDVDMGpmNk9tUW9VSXFBc3N2K1dnRW9MU20ra3VwcnJGMTRzVGQKNW9DeGNsbUJSTEtCd2hJQUpvVnl1RG50d1JCS2ppOTF5ZllSMXdJREFRQUJBb0lCQUJLbkFhdmg4TVpuc0hCQwphRXdPL1ZvV2xUNk1BM25kaHR2ZlZuaEdNTFJoM2ZyTVArRWprVTJMYmV4UFBWQzMxdmRiS2NoZnY2K2l6T2ZwClA2L1FHNWRMNnhhK2NpWTNxY2FqK1FIeE9hb2xSbnJSRVhNcHlORmJyYXNXTG1DemMwU0lwVVBoTG56c0s2c2oKS3o0Z0NrL0Y4ZGdndEQ1aDhoOVhRMlZTN2pDSGIzdjJIWFlRUWdiUmUzUW5VanQrSGVXQ2ZZbVFUV1pPZkxkegoxQmRnOVZRR2tBUlQxTDhQSTRBQVg0L1ZYSktzUVcrRTR0N2pnSGp5em9DcDAwcmIwQjNCOG42a0YzZHFrc2RXClBlcHJ6cjlZc1lGVVlMNEdQOW5PZTRqZ3V1U2hrWWhIanN3ZVVhS0p3eTdZRCtwN243R21zQmFrWk5COUlnMy8KeFpFZVF5RUNnWUVBdzNmbHFWSVRTbnFnWTFqK1RwMVpDNFRWMnJVbGp6QkVlZFBxV0hndDFXQmFwQk5pSktVQwpDZExQcXVxVzJLNzRhc0xiT0o3VzZibExoNWJsMDM3b251SVdXaHNkM1dkQUdLUW5hV1ZPTmY1Tk1BNHVpMjIvCnBscC8xRHNCT21kTUVXdkJwdExici9nRE1HOXBxd3F3WlF1SWF5THdMRXA0NjFmUWgzNHhMQkVDZ1lFQTJXOVcKbm9ac3JiVnQ0aEpVa1B2RUlIb1RSQTVyeXJ4V3VES1NFa29sRk44TGdRaEJuK2xrdDYxMklxNHhOTTRnM0ZWLwpVQk9iRVYxYmQ4Nm5zVDU2VnVyNFBRS2YyVGVtQzFQZVNCTStzTGZFbFhsVHV4aWszR21FL01VTm1RN1l0cktSCldJa0V6U2dHeG5mc09WWGZMdTVtNkpmUE4wTkdZSms1T09ESzUyY0NnWUVBbFJKU2IyQnQzK1pIZlp6NFRZSkkKejdVZDEyOUJWc09MNVpHTmJxMHczME5kdlRZZktpMUJzYlk1dEhLMldraU9vZlU3ZFNJR2F6ZHFkOXpJS0JUbwpXWXU1V2p6RitQMXViNXg1aGpMQmhBSU9ZZkRlNUd6dHRYUGRlMEVJdmI3Yno0bHJwY3UzeWFzTzI1aU1jT3AwCi9vcmVIajhHQmZGQjZOSU84ZFoycjlFQ2dZQVprUWZrVi9ZTGJ0dmV5eno2VjBBMmVXUXVpbXVPU1JzQlNhRDMKV1pTR29idGVqclA0czU3T0lpMVQ0cHVTay9JMU5qQmtJQW9KdnFwMHFlMzUzMWpQUTQyd3p0QXc0R1E3ekw3RQpSczhHUkhWdkJmY2Nkc2RieTJTQnZFSGZEMm5ZQWFNcGYrTDZwSXczWmY1MnQyd292b3VIS2VLSm92VnhnbExDCkoxeDBYUUtCZ0gvNWZPblYvbkRucXZoWHZ3SDlrTFg4eHVJODBZZGJwSjVpeEVyRk1CWGVZRWNTUDAwZkZ3UE0KUDAxU2F2Zis5NGIrNDBUdC9hNWtkMHlLcEswbUdWZ20xWWFMY2VmdEJLUGFnU0NiRWR3Q3hoTm92NGczNU5yawowVHBIYnN0R0V0Y2VDTWVXYi8wRSt0Tjd1SVJXTGRnd1JJVHRSL29jRVhIUDlZcnF5TGRCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "vars.etcd_servers": "https://n2.steve:2379",
                            "vars.hyperkube_image": "k8s.gcr.io/hyperkube:v1.10.1",
                            "vars.kube_dns_service_ip": "10.3.0.10",
                            "vars.kubedns_dnsmasq_image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.9",
                            "vars.kubedns_image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.9",
                            "vars.kubedns_sidecar_image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.9",
                            "vars.pod_checkpointer_image": "quay.io/coreos/pod-checkpointer:9dc83e1ab3bc36ca25c9f7c18ddef1b91d4a0558",
                            "vars.pod_cidr": "10.2.0.0/16",
                            "vars.server": "https://steve:443",
                            "vars.service_cidr": "10.3.0.0/16",
                            "vars.serviceaccount_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdzJOY0JrZFJqNGk5akdOMTFRN2UzTjI5Uzl4cDZWZjUrVlg1bTFUM2pzYkJ5U3l4Cm9jdEkvb3VEQkZOUHp4YmVqSlB4Y2dFRmNRTnU0bkUzNnNFSmk1QXhLVm8yZXZXUVowb1FqN1FSbXVJMk85YVUKTGRLU2xrdEo2dGVZZ2d3ekx3ZVF1Ty84SDZMc2xlRkxycU15YUp0Y1paZGsxc1JSdnM5bnBhWlQrSERLampPSApacE5ndERCWnM2dHJldWxBZWl4NVQ1R0t1WGpTS3M3S2VWd0pKaTVIeVZRVHFsSUQxMjZKWU84UHhKVjBwRGVVCmZISlBuYStQNWhNcGJUdllhUndUL3BxdkUrM2Z0eld2SFJIbDRXS2F4SDdBeEpVbnY0NzIxd3RrNWpuZmNrcVgKMW9RTStsSXk1L1dDVFBmTzMrY0tVODg0RTB3TWR6alNQb0ZFK3dJREFRQUJBb0lCQVFDdGhlRmxaaE5HTVA5OQozWnI1TS9LekhtNk9IOXNqczlFNklhUEMwc3ZremhtdUszWTZKWXJYSFZtbkRzSlRQWkU2TWUxOC9QRXpOQVJYCk1JdWpmZnFYS3VDdVJBTWNZbGZ6azNCdjMxQy9SK1U0Y1ZJNSs4ZlptRlcyTGZDd2xsc2lpa3A2SkErNm5Qd1cKQS9jdHlwdnJFUWNXNWtSVkJCZEJLWHQ0UHVaV1BYQVYyTXlkSlE3RU5XRTlrZ0JVcHduN2NpNzBxcTJwRTZ5UQpBYUpUSE84NVkwdVdqQjd4N2NleXpJenBxd3djQVpQRW9OdHZiaFlSbk5VVzRFUEgxc3ppNUc4Q00vNHZqcnZzCm1FVlZEWjdTd0picFdRVUFuK3J4TEVpVGtHMzFIVDY4UjhuTEdYWkduWnhxNXRJTDFFaTBNSE5HSFU3UkVRKzIKMEpIQXczcGhBb0dCQU5vTmFFWGpMNkc2aldEM1BhQ1VvSkd2WEUwSWdiaUphaWpnRUpvUXFYMmFQMldIZ21GZwpDWThFVmtTREpMUUVhWWthbEpKUDU2Y0hIcFlKenA0TldYU2R4UE15QWJMUVNpVjZ3ZnNGeFE2RlFxRm90WHFzCkNGaUxPbTFERytmZ0JqSlRGTlFhYVdhMVRIREVmU0Jxb1pmWGozL2Z3YWZBQVZhYlJQeVBLN0tMQW9HQkFPVmsKT1BSUUV6Q1JLQW52R3kyS0lJWEp5YUY2WEtlOVp4bjY5K0xHSWFrTjFtcG14RmM2MnNydkU0bWdKYWNORDdTUQp5QW5RRUNGU05QTWJFMGlzSU1ZRlMvQmtYQ1VodUM2c2FxL2t2YU9EcVFpMnNEQXVKR0p2bnFFcHFtK0V6TklECmJFdXROS0l5UktvQzFtVGF4a1FudzNDNFlBblh1VWhlMGpsYkJUVlJBb0dCQUp1aldqd1lEdFdIVElaYnN4YzkKUHViOW5nbzErakYzazlpZEpmeHh6Q2lrd245N202cFpYRGxDeFRpZHlzTGJLMkQ3SWZUVkorbm1nUVJpOTZHRQpzY2MxSFhEZ3pxbU5Wbjh1QWV0a2tPVHVaVUxFZEZTZEdrL3BBTWtnVDNqUVJGd0RSU2ludVhmZ0RER3BiZzZIClRkUU52cFZ0WnRLUGorVDdhdUJDYU5SRkFvR0FPTllDUHBad2lzSU1kNW1rMUQyN0hTc0lLRmhYQ01DbkFRcnIKekdabkJLb0hERW4yTDk3SFF5ekZYSDR2bGhwb1g4YlhxWWJCMkYreit1QWtnUWNVLzd0a08yWENadmpaMThhawprSHhPZUdzd3dKWHpSWnpKS3hLWTdUbVRueG42WGJhM2FIQzc3OHdnc3pjTXcrUm81NDRxb0kwdVRvSUN5R21tCkVNdjZtR0VDZ1lFQXVyVUxZN052ZmVXNkU4NWNlQUF1d0JqN0w0ajJndFV1MFgrU1daZWwxOVAvVldzU2w3a24KVEIwczdxQkR6Q1NsNFpyYUwySWhjQnZhUHRUamt0d2RxRGduRXV0Mnh6dW9ZS1k1cEg5Nk9QQUNSWXY5Wkh3dQpUaTUwWmY0VnlyQjRrT25CWEYxeWxjVUI0NXF5ZVpmWFE4MUFuTFl6N1RWaG5tc2FzajRlR2hrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.serviceaccount_pub": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Mk5jQmtkUmo0aTlqR04xMVE3ZQozTjI5Uzl4cDZWZjUrVlg1bTFUM2pzYkJ5U3l4b2N0SS9vdURCRk5QenhiZWpKUHhjZ0VGY1FOdTRuRTM2c0VKCmk1QXhLVm8yZXZXUVowb1FqN1FSbXVJMk85YVVMZEtTbGt0SjZ0ZVlnZ3d6THdlUXVPLzhINkxzbGVGTHJxTXkKYUp0Y1paZGsxc1JSdnM5bnBhWlQrSERLampPSFpwTmd0REJaczZ0cmV1bEFlaXg1VDVHS3VYalNLczdLZVZ3SgpKaTVIeVZRVHFsSUQxMjZKWU84UHhKVjBwRGVVZkhKUG5hK1A1aE1wYlR2WWFSd1QvcHF2RSszZnR6V3ZIUkhsCjRXS2F4SDdBeEpVbnY0NzIxd3RrNWpuZmNrcVgxb1FNK2xJeTUvV0NUUGZPMytjS1U4ODRFMHdNZHpqU1BvRkUKK3dJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==",
                            "vars.trusted_certs_dir": "/usr/share/ca-certificates"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "tls_cert_request.apiserver": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.apiserver"
                    ],
                    "primary": {
                        "id": "0553f647a6ae5fc0a8f6a3a572ed8c6f06272efc",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC/TCCAeUCAQAwLzEUMBIGA1UEChMLa3ViZS1tYXN0ZXIxFzAVBgNVBAMTDmt1\nYmUtYXBpc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArGEt\nGlA+CIjDcf9nCr+KSSIXvWsdOyAlvU3DAzSDE8Gl0xIu2N20CmyJSH3fDDxc1LxF\nPR0102AwhyK43QzAfXxcYSdasUcU1Xq15S49pq45PpqKkB4WsOIxkifN1kFaDEmK\n86je/VWV0TxOtFLYiaMQK4AVwgReNdhJH49tOzjTMjHQGUPhYAJfeHe7FUUpAUvl\nX4ibAupF5vhEUk0/XptyZhqHaRpJQxOfy4FttngTQ+ZWqJODBeVlkX16chGWbVkU\n3Ei74n6JiC8vINq3Gksc4MtVWGxBjo4kWWnuPrP52vDQLM7QWNsUmkHRlQx1FAqX\nCDli7OE4Jh7BPzgh6wIDAQABoIGIMIGFBgkqhkiG9w0BCQ4xeDB2MHQGA1UdEQRt\nMGuCBXN0ZXZlggprdWJlcm5ldGVzghJrdWJlcm5ldGVzLmRlZmF1bHSCFmt1YmVy\nbmV0ZXMuZGVmYXVsdC5zdmOCJGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rl\nci5sb2NhbIcECgMAATANBgkqhkiG9w0BAQsFAAOCAQEAMWh0h88c8t8/qHgPSI9S\nrk9snef2Gq9PwJFcRR+6B766tcXs63fLOxlNXRxCwW0yk83+wjcRblp9Acw+bw3k\nVB+A/lrr+Kfjc8XhDy76KigUW5nYFBNSQjHQ1lWfbpXWujt9kkGsnZSQh8LjK2f2\nUIGJ4bHHV6qW1yuvgbTosVkSJ+xmfxLK9CHIlydI4rxAO3PEugtWH/GmN66U/U4n\nH5ciWjkT3F8Na39CGJMa0T3hWLugDyxb4XmIvH0yMp8XvY5R8uk/aASGrS5/XpF1\nefc61V38sRsPOkhQ4ehIKL74POflQzIgu5pbCKHyfMFnaH0ZzwNh8t6QsHHI/B73\n8w==\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "5",
                            "dns_names.0": "steve",
                            "dns_names.1": "kubernetes",
                            "dns_names.2": "kubernetes.default",
                            "dns_names.3": "kubernetes.default.svc",
                            "dns_names.4": "kubernetes.default.svc.cluster.local",
                            "id": "0553f647a6ae5fc0a8f6a3a572ed8c6f06272efc",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "10.3.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "27b025b46d5684fd6d27f8037b675492de879cc4",
                            "subject.#": "1",
                            "subject.0.common_name": "kube-apiserver",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "kube-master",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.client": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.client"
                    ],
                    "primary": {
                        "id": "de1883fd8f1834e4d2810db85b0a29281a34c164",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICoTCCAYkCAQAwJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRjZC1jbGll\nbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmBaTMbMdOAHJRHAII\nY6A3NcN5AMzrw85mOd3YCgwei+u35fJ9E94+ZmjIchjSvKR/DGHkTtteEMb4QIQo\nL2dGvJjvQpzUJoXwRqMha6oH0iCdsaQmW5RTvVmOKbQYrfrsWlJHxw/kjksBl/xt\n1+R0+E2JQAWH/GbR+uFAFu4lID6ONt8YOH0cL5a63beboSGw+SZqNRMWW/PSj5fl\nTXsgjjwEPDreksrKAxohGxgGUuSNtVPyDLaBiktqtb56q2qtdGarX5Bth3kLSN/o\n6ZChQioCyy/5aASgtKb6S6musXXixN3mgLFyWYFEsoHCEgAmhXK4Oe3BEEqOL3XJ\n9hHXAgMBAAGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCCG4yLnN0ZXZl\ngglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBADJHlOEvid3PCHHV\n7elK2pA49t1T4H5/2YTFmZBf0LL3dE8Lf7PDHbVLouTQSDT0D1CY/pEoBLpytepd\nUhVwx/DZVByu02kSz0mlihc78AkC4tkVfwXphsxZfsa4TwthMfFXi0p3M+PWOxpW\nwvWRV9fPrLt76+2ktvJ5QEOtvipPqu/3pUJbgbHnaxBFdWEYlq5UQSBzNceU9aMw\ntiuhwanGdGtFEZR0nEQerCidHZtdHimnyWxzswaVKwDCnoedeQN1slFegmab3qzD\niSMRJ7GS1/w7FydqE4VLlbqO39Q/UkuR/Orr+HJDN/hRzuC60HtC5hyqqPCETfsp\nig7pCE0=\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "2",
                            "dns_names.0": "n2.steve",
                            "dns_names.1": "localhost",
                            "id": "de1883fd8f1834e4d2810db85b0a29281a34c164",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "127.0.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "3062a45c19d96cb5e598e1dd4fb0007e7b34ff20",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-client",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.kubelet": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.kubelet"
                    ],
                    "primary": {
                        "id": "3037d5ddee4b3e79f1c8e08bea4de1d9f426eebe",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICcDCCAVgCAQAwKzEXMBUGA1UEChMOc3lzdGVtOm1hc3RlcnMxEDAOBgNVBAMT\nB2t1YmVsZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1rB+ZGBhs\nqfYypN8Ia77ZBjbUhcTXr9SQn4LQzkG8HULr624PKD4yBZygagaz3E55sTK1s+dY\ndB3ABEjACTeQFvlUX2XkCyPQoQdh5by/JU+Tvt1dIeaAiSgoyecbHDIi4hyUSk8m\n4gosaqQTSvT5V6//joZkC5r8OVdQ1CkvAHrPx+qw3s9+B991zgf3DFvzleZjK6+4\nv44YEe0rWHvgnLmZhtbgnp4j3qAgFL8gyWrnY3FvPsHdYMWRxZvygW06PgHupMr3\nxoEvY2ASS48kLPUxfqDtlSnWbqKa9C2FGaASmP2mvAnR4CtOI0t80ma14MubK2ZU\nqThyaUUeWpLXAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAB4l6SXtIFhBYMxHK\nf9DSlipD7HeXVjoPgigNGQI14WRWjHPL67CnRoac6PFHZr3cVhoRFiIzILHoJwhC\nfQnandTDwv/wqGv0BYy89EDPICjiOYm9AJ2g9Ejbl0sCTPi5MuVW572cAoFIPJC3\n6jZ3XYNpFOgavT1F2DtvwY0yRXf4iyeWYDAQnDzx55kpiPfQv0uqvgIa6KauxwiP\n5h8J2xPszRWzOgSG7b4vY09c3uy70c/YgLFs6VSFQKPOgijnvjezMVKh6JSoaeUW\njvAOliYqGJfC8KVSMEtV2+TvliTqXZYcaX2GzGl4JCpX+ZdsNzpkMKcPW59faomt\nEMGATQ==\n-----END CERTIFICATE REQUEST-----\n",
                            "id": "3037d5ddee4b3e79f1c8e08bea4de1d9f426eebe",
                            "key_algorithm": "RSA",
                            "private_key_pem": "16f7e25f5a26697c921cc1a655a541997f140df7",
                            "subject.#": "1",
                            "subject.0.common_name": "kubelet",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "system:masters",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.peer": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.peer"
                    ],
                    "primary": {
                        "id": "060f55876658c49b7808f5447727a61183cdb09f",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICjjCCAXYCAQAwIzENMAsGA1UEChMEZXRjZDESMBAGA1UEAxMJZXRjZC1wZWVy\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx/24xxpeWniFtoyOCZAd\nT1a+rUjgWdE8LohPdVNk9GRvCrUwt6ZTswUllLyBoUsHeTSbnceEH2USw6Pb2NuT\n5iuZ4rD71IN35OQYNUpBTxxj0tzvcKS87jqpZuvO7gwiSyRYhfHlPD1GD0wGwYRk\nU6CbfkPKsaHYneqE5c7V6oA9h/XYrRgUyM1MxHEz3QDZE2kTPfLpxLIRGDU/C0FY\nFmTneFKZOon6iVXFGQdfAA6uWfnuFDbg0K2UbNfjMf9S6rxuiemv2I2i6FD36dgR\nzh3GwWF6EXfYh+FqWCRK9TgBCtW0j7Qbs+8Hejv6nzUKyTslJ/vaGO0JLDO0rK9K\nrQIDAQABoCYwJAYJKoZIhvcNAQkOMRcwFTATBgNVHREEDDAKgghuMi5zdGV2ZTAN\nBgkqhkiG9w0BAQsFAAOCAQEAl6oU2U1BLtVsYVAL9SHVXjxxwFZ6t52YJV9q7NE6\nIyt6a4zxDctpYwaRz1m2UEj42fRsw/IuBD1zxjZZc5jiL68zBA2WkDxqB8aeEqiv\nEinZ67I90Pg0Ge2XMmkfqpFMqZIVXetk/KEA+KdXylP1SXxMhh8Yj/RFCkAlasNI\ncVTaDUUXYwA/sWvo9MJikvLwCO+U9in4WYPmSJhK8mZB7uqtCm0XXcNnGG4lW/Rn\nCIAPTmgFVw+vbxWOMWC+GRoKuNZLiCrl3sRzvlXBpBMhv+C4tmV7pNgkk03rBD6b\nY+P/EmF7zIF7ersG3U02xuRT7sCjHEtPRZHH9Pu3P5VvRw==\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "1",
                            "dns_names.0": "n2.steve",
                            "id": "060f55876658c49b7808f5447727a61183cdb09f",
                            "key_algorithm": "RSA",
                            "private_key_pem": "cb7118308fa012d30298fd5df6f9174b4c57bbd3",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-peer",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.server": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.server"
                    ],
                    "primary": {
                        "id": "a6c38ce23474d84f1d577036d4256f51a018b150",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICoTCCAYkCAQAwJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRjZC1zZXJ2\nZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8pUr76J9zP9RLtH2U\nOAMmRFnNw7D4EG2uEjMggcIyCmbtFD89EwkskBbuzJVsdII4mp/iLjtBVXSlnpwM\nmVF6eaD/1DZwW7UI5Bh/gvCmy37GwRn9cbrYce11ZZ0wuPTAPnlNkJ46DZNJ+epn\nnOsPxteWtoeTPBzRbrIDW0km9yyaK44CeCYqIlobTOjIsE8Urv/G03/FBpZ7DPcc\nPIcJtwMuN4iDLb5JTrK1bah0xqFw01j5HGlvhGMZQ1rbZK1kIFdYyyDazs31j565\nugApUQJh/qyUjG9KGYcegbwUSi6XUIVe22OqZzIP9a/SMAbttlB3u63gkRQk9EdC\nwfbDAgMBAAGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCCG4yLnN0ZXZl\ngglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAKH/QhxfQcftVy7J\nZJeGCs6H1GWFNOUS6eG/n0LyUnFpkhfcpbPF5CWUcffDV2jwmKubU2WcvHSp5ZPg\nIrFattleCIwl4G111X2NIdBZPHPbsMQIRKenhzwVnDrh/8R6QiJ9rRUkOX5XY+ii\nX6yWaTll/jvaU1tJsT2dk1jqLRGEb86MCd7wn2sNScLGmshHNTcRSOe0jR0fyGLD\nc7WBl13mzdV3JhlKSZPq867k5Ty88ZbML9wvDuX6xLkLiyE/uMzJbffEBPr6OICU\n//rOFV/k9fR7KsdwBNwde8u6n0jk9D20JPoZ4iWQMDq09SFMpdYhXxPjLskGAM+d\nbiolfeA=\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "2",
                            "dns_names.0": "n2.steve",
                            "dns_names.1": "localhost",
                            "id": "a6c38ce23474d84f1d577036d4256f51a018b150",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "127.0.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "dc8611fc5b5e8aaf599af5d35797d8f1afa4615b",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-server",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.apiserver": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.apiserver",
                        "tls_private_key.kube-ca.*",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "174866081866135726211846374244519240280",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "c9d54e60ed40f13594bd927854548b6da780e8b2",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "0d419d8d7352502e29b3550dafeae986da719c4e",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDtzCCAp+gAwIBAgIRAION+3oiSgjldcONR2fH4lgwDQYJKoZIhvcNAQELBQAw\nJTERMA8GA1UEChMIYm9vdGt1YmUxEDAOBgNVBAMTB2t1YmUtY2EwHhcNMTgwNDI4\nMTEwODUxWhcNMTkwNDI4MTEwODUxWjAvMRQwEgYDVQQKEwtrdWJlLW1hc3RlcjEX\nMBUGA1UEAxMOa3ViZS1hcGlzZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQCsYS0aUD4IiMNx/2cKv4pJIhe9ax07ICW9TcMDNIMTwaXTEi7Y3bQK\nbIlIfd8MPFzUvEU9HTXTYDCHIrjdDMB9fFxhJ1qxRxTVerXlLj2mrjk+moqQHhaw\n4jGSJ83WQVoMSYrzqN79VZXRPE60UtiJoxArgBXCBF412Ekfj207ONMyMdAZQ+Fg\nAl94d7sVRSkBS+VfiJsC6kXm+ERSTT9em3JmGodpGklDE5/LgW22eBND5laok4MF\n5WWRfXpyEZZtWRTcSLvifomILy8g2rcaSxzgy1VYbEGOjiRZae4+s/na8NAsztBY\n2xSaQdGVDHUUCpcIOWLs4TgmHsE/OCHrAgMBAAGjgdcwgdQwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAA\nMB8GA1UdIwQYMBaAFCaY4+IbAc1nvHrW6M7e6nJmMDyVMHQGA1UdEQRtMGuCBXN0\nZXZlggprdWJlcm5ldGVzghJrdWJlcm5ldGVzLmRlZmF1bHSCFmt1YmVybmV0ZXMu\nZGVmYXVsdC5zdmOCJGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2Nh\nbIcECgMAATANBgkqhkiG9w0BAQsFAAOCAQEAbIRyACl+s2HBwvySHt1FlxQ/0BIk\nrwUv6REr/sID8oFmGL6tOl8T6nadRtVv8XLQy171TGZ3uJoMQ2s/Are0m8zoF1J4\n31BnJ7090Bc8TbklGCZk11xskJue6hMQbWZjr4lDaZomD1ODBsh017lzKgaNk6AK\nMh0nWmKILen5a04Mdpitw1NRulHB96VSOoXlMMSjc0zKfFviRPuSH82ZPxyaX5zE\nL+SWdg12ran60+Xef+inCWDpHRK1b4OCkOqm63Ybh++d+Z+nA7/Mb5uYSvQNpMCW\nRviqpmpe6L+dNXksurs3+y8EYmN0kVdNGUPepksxYeg98F1USqJaRwqwNw==\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "0d99c7fb8e94a6f0937463a30e4a8cb0b62e8e98",
                            "early_renewal_hours": "0",
                            "id": "174866081866135726211846374244519240280",
                            "validity_end_time": "2019-04-28T11:08:51.850726162Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:51.850726162Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.client": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.client",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "165029931610657214061697055008047182792",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "203b8b979008c881fb9a63cef0bfcd32fe79e9c5",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "cee41d088dfa52b2501cbc457395b9ffe0d9bebb",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQfCeb09K3swy0Pstg7SMzyDANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg1\nMVoXDTE5MDQyODExMDg1MVowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmBaTMbMdO\nAHJRHAIIY6A3NcN5AMzrw85mOd3YCgwei+u35fJ9E94+ZmjIchjSvKR/DGHkTtte\nEMb4QIQoL2dGvJjvQpzUJoXwRqMha6oH0iCdsaQmW5RTvVmOKbQYrfrsWlJHxw/k\njksBl/xt1+R0+E2JQAWH/GbR+uFAFu4lID6ONt8YOH0cL5a63beboSGw+SZqNRMW\nW/PSj5flTXsgjjwEPDreksrKAxohGxgGUuSNtVPyDLaBiktqtb56q2qtdGarX5Bt\nh3kLSN/o6ZChQioCyy/5aASgtKb6S6musXXixN3mgLFyWYFEsoHCEgAmhXK4Oe3B\nEEqOL3XJ9hHXAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJml\nqCVh+7f915bt6AiTwyuit/0WMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAHd6msAWRWfEffn3KJZBDP0gBcE/\nHBm40ARix9VYR/HSRGvz37vjN2KPHlO4b0auLTQymjE4NwJR1bw9G5sw1sVHwE9D\nSXwhQo3a7//c7S9/gWNuvXb7NZRmgY7RyCSTSM0bRiW63HxT3mWPoRly1fNEjq5f\ncxDA8+wm0Om6Xz+uDF0BPKR3oAbbF3yAMrYLN/7K3WtJgKpYk+OQLBzQN4kNXzWD\nThAwW5xbmTdl0HbQ9jfysU+aR6BUR9Um0CrNqh4lG4ggN7BrNMw6bEg8pyZCSWTv\n4dGENrk++/IMYdjwtuVckK9YqovdUbbnlFi8afUWwjB7xWQksJkkxXzgc2E=\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "cfb876513afeb40e18909a80c9a01c24a868f269",
                            "early_renewal_hours": "0",
                            "id": "165029931610657214061697055008047182792",
                            "validity_end_time": "2019-04-28T11:08:51.853835186Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:51.853835186Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.kubelet": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.kubelet",
                        "tls_private_key.kube-ca.*",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "152880994979822768802414737049938861026",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "c9d54e60ed40f13594bd927854548b6da780e8b2",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "0d419d8d7352502e29b3550dafeae986da719c4e",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOjCCAiKgAwIBAgIQcwPPAXQ2JZBwurjvPhSb4jANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0Mjgx\nMTA4NTFaFw0xOTA0MjgxMTA4NTFaMCsxFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJz\nMRAwDgYDVQQDEwdrdWJlbGV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAtawfmRgYbKn2MqTfCGu+2QY21IXE16/UkJ+C0M5BvB1C6+tuDyg+MgWcoGoG\ns9xOebEytbPnWHQdwARIwAk3kBb5VF9l5Asj0KEHYeW8vyVPk77dXSHmgIkoKMnn\nGxwyIuIclEpPJuIKLGqkE0r0+Vev/46GZAua/DlXUNQpLwB6z8fqsN7Pfgffdc4H\n9wxb85XmYyuvuL+OGBHtK1h74Jy5mYbW4J6eI96gIBS/IMlq52Nxbz7B3WDFkcWb\n8oFtOj4B7qTK98aBL2NgEkuPJCz1MX6g7ZUp1m6imvQthRmgEpj9prwJ0eArTiNL\nfNJmteDLmytmVKk4cmlFHlqS1wIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAwHQYD\nVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0j\nBBgwFoAUJpjj4hsBzWe8etbozt7qcmYwPJUwDQYJKoZIhvcNAQELBQADggEBAFv3\nleem6PPSx5a8oTlFQBHwahLtqpIMHP36e82PCJ9vbn7OmnXZ2Z9flfFJ81uFK5sl\nzaW7pf/hg5yF3BME0Ef14XwagY2rj3NHwFsyHjKE8hq+0KNqknWc+i7p7hUb+bjS\nvIgItL6tWaoTq87lFjyEx1uqjN1u/O+oVOXhy99pyJFrSeIR5fuhhkP3XH8BwSTr\nbamGM7emMtqLVWQq77DO7YOCYLhikG0RQqO7QAcV6GeeNV2rMhCvbZvM9u4NYSka\n1g659osuVfE0sb0zuT2QtgispFp1KR2Nu7/vrPJvnbtJ5GRyNI6AWLBqaNRAwsiX\nqk1S64P7nm9Wi+MGSQg=\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "ebc8510b4efb932bdd70572fc41f970233ded21b",
                            "early_renewal_hours": "0",
                            "id": "152880994979822768802414737049938861026",
                            "validity_end_time": "2019-04-28T11:08:51.733181398Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:51.733181398Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.peer": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.peer",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "173005234395023402162332042796719786246",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "203b8b979008c881fb9a63cef0bfcd32fe79e9c5",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "cee41d088dfa52b2501cbc457395b9ffe0d9bebb",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAIInmJ0BW5cPBo8qBYg9yQYwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMf9uMcaXlp4\nhbaMjgmQHU9Wvq1I4FnRPC6IT3VTZPRkbwq1MLemU7MFJZS8gaFLB3k0m53HhB9l\nEsOj29jbk+YrmeKw+9SDd+TkGDVKQU8cY9Lc73CkvO46qWbrzu4MIkskWIXx5Tw9\nRg9MBsGEZFOgm35DyrGh2J3qhOXO1eqAPYf12K0YFMjNTMRxM90A2RNpEz3y6cSy\nERg1PwtBWBZk53hSmTqJ+olVxRkHXwAOrln57hQ24NCtlGzX4zH/Uuq8bonpr9iN\nouhQ9+nYEc4dxsFhehF32IfhalgkSvU4AQrVtI+0G7PvB3o7+p81Csk7JSf72hjt\nCSwztKyvSq0CAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFJmlqCVh\n+7f915bt6AiTwyuit/0WMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQBASgi3g27jZhnC94xgWedwkqU9NnRj5fBPJJgzasq6+WkrL65woyRF\nQ7LQmz6luvUCWH9GV4SYNf0qcPAsKVqirIJt5iLtiv8NURuujXhePCOxj7So7fKt\nogLT/Chcq8Ualtqk3mF671wgnN3Wu5MLj0TBvLH4HJjTLIisbycuS6xqJCE9Mdhk\neGSi/OGPXmdEN96aelvXz1b+rbWbrsgDLgWCee4EwgSY4qEK3Evl+O4zAemw2xl2\nLF/AAzwTJrHrq1CBR8IM7QPU5WV0h/ejYR0VTzG6dNM2whWbNWVIie4ABSWulOXB\nq5+ttDiXYDW93XuZAY8maq8jEj3VMMeG\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "d0dd025534b7eabe100ace0ab3007f4cdf16741c",
                            "early_renewal_hours": "0",
                            "id": "173005234395023402162332042796719786246",
                            "validity_end_time": "2019-04-28T11:08:51.340922924Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:51.340922924Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.server": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.server",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "228744973708324120793865942100330182122",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "203b8b979008c881fb9a63cef0bfcd32fe79e9c5",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "cee41d088dfa52b2501cbc457395b9ffe0d9bebb",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAKwWrfBjjcG12bhg2RoAdeowDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjgxMTA4\nNTFaFw0xOTA0MjgxMTA4NTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvKVK++if\ncz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/PRMJLJAW7syVbHSCOJqf4i47\nQVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ/XG62HHtdWWdMLj0wD55TZCe\nOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuOAngmKiJaG0zoyLBPFK7/xtN/\nxQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY+Rxpb4RjGUNa22StZCBXWMsg\n2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CFXttjqmcyD/Wv0jAG7bZQd7ut\n4JEUJPRHQsH2wwIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSZ\npaglYfu3/deW7egIk8Mrorf9FjAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCqdLw7+tZj+rOjin14jUQOABlA\ntkfuioe4wEVuQeutWb2s04Agh5uTHrynDTQXxbRdsklXLKcwz6p9pjysovMvK4xk\nXlzismII/6r1eLZ7c87ll9ocHvA8VZDAiFxPnZ3SHnPtUxu0Or17EWnoSiUGFzdp\n2HQ1DYGK1grBzct9a9mK7426Nuc//m4xWa3reHNWg6F7fuyKenL+Se9kvCG399cd\nThos798BDJ0r9poBEdy0ssnz/Wb+jlLBh/8eBn0fFten59THAZrALGjJOWWgphEZ\n6tOBwSfXdFzu73YdKl6i2wdHd6wzNcLrVt+5jPWS7HSts2HVdliKTiQ/NK26\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "811ade540557da3df4a2221f6a4364bba3ea7a03",
                            "early_renewal_hours": "0",
                            "id": "228744973708324120793865942100330182122",
                            "validity_end_time": "2019-04-28T11:08:51.539904087Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:51.539904087Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.apiserver": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "82b853c1b8af88e1c12ac3837a670adee0c2cf78",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "82b853c1b8af88e1c12ac3837a670adee0c2cf78",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEArGEtGlA+CIjDcf9nCr+KSSIXvWsdOyAlvU3DAzSDE8Gl0xIu\n2N20CmyJSH3fDDxc1LxFPR0102AwhyK43QzAfXxcYSdasUcU1Xq15S49pq45PpqK\nkB4WsOIxkifN1kFaDEmK86je/VWV0TxOtFLYiaMQK4AVwgReNdhJH49tOzjTMjHQ\nGUPhYAJfeHe7FUUpAUvlX4ibAupF5vhEUk0/XptyZhqHaRpJQxOfy4FttngTQ+ZW\nqJODBeVlkX16chGWbVkU3Ei74n6JiC8vINq3Gksc4MtVWGxBjo4kWWnuPrP52vDQ\nLM7QWNsUmkHRlQx1FAqXCDli7OE4Jh7BPzgh6wIDAQABAoIBADanfPBp3rFAA4/i\nZZ5Pyp2TdKl3C8aSU8ToodsjTCf4bwY0LqxN5uajMQfN+OldPiWpJ97PoyBI0DoY\ndTqI74MZ6gRXwPaSTfW9uWxXs+5kMPw7bZFyKMmefg8UFbxH7jAVJTxKH6F9AEpd\n76pW1hcVn2vbaYqhbelukQizpfNvdHT1fzNS9D7hWHyGNdyD2oYF7h2SRPz9CX5p\n0N/A2V47GExI1HroxtTlQ7ydnGwWrrGkBnzt51DDQi9LUI4IJAQqSGMpgBPxZdOW\nuDG6b6DmB/pLiAe+yJ1OVUHfH2UUye0l3t6vPsTjjXL7RTBPRH00RNgGwIUVKU5S\nRXxFh8kCgYEA38YHc2OcEuB+n4aKNpX5pt4X2+VAa8PyvcGgMZ7zE5cLcPaKN1/p\ncwVw3tb8nMNgAZ4Cz01HkrXECmO6S0bsa526QtM6uJP4XWVuR3+oEAH/Jgo++Jn7\nDQAswyJNzKczWb97kacMPr1NdpmJLfOPmjE3FZT1Uti8pZAulbIz/dUCgYEAxTRh\naBIqWyWSBjh9KmD9rn3TFpSBvMB2qEVvJSYt5BZ0dq6K61jAQjsSbYyhlU/An5Jq\nA4HURTDEu+wEHPrRKwEedmezCcHMNxapJ33hbxutOImNs3+13GePcBIh6xwTvXE4\njhdlFyGtsdTm6VfhsqFfUFz71eFjSiMrRazWwL8CgYEAyTQ22NLUr8h5Mhj3x3L8\nYcTKcSbl0MAEUAh8cIF6EMA8Qlr7FiVAM/LNdSCbTJ0DgxC/eAQFee3Dko/vHuZr\nh6vvoUxqPTKXG+sqyFEJHTOeZmbKDh/tstfYZ7A9gelI68aXZfRstzDhKOWOiem4\n0iy0Wcxw9Qf6P2ev61urEe0CgYBk8Fe/VjT57HQe3QEsFPMkQmEumJsDixvxK4El\nabJpohjAurx+lDHsdKINEsOOUoEM7Ht5ChYlyD2a1saQMs2njm4SOygIIXsu41l3\nzlX6chcq7jVqoD7s7tEbkxxrZDaya+Z/zHfA7Esk0A3VeFcdAL5xuvZoVnJk+zVl\n938ArwKBgGLgdwYyUAWizbm2NTXfrHDo+K3PdJs+dcoiOddBPtzhvy47f5YGOJUy\nOsedTkFMeHpPVIx0Kain3wd0shpX6fs9PUawd+v0IRZ+AhR9JMDtp1vdboVGmqnm\nUwqSogiAdJuj/vcAbAiSyu5SymjiTXETn59BxRLbST5Vb5kqbM2q\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsYS0aUD4IiMNx/2cKv4pJIhe9ax07ICW9TcMDNIMTwaXTEi7Y3bQKbIlIfd8MPFzUvEU9HTXTYDCHIrjdDMB9fFxhJ1qxRxTVerXlLj2mrjk+moqQHhaw4jGSJ83WQVoMSYrzqN79VZXRPE60UtiJoxArgBXCBF412Ekfj207ONMyMdAZQ+FgAl94d7sVRSkBS+VfiJsC6kXm+ERSTT9em3JmGodpGklDE5/LgW22eBND5laok4MF5WWRfXpyEZZtWRTcSLvifomILy8g2rcaSxzgy1VYbEGOjiRZae4+s/na8NAsztBY2xSaQdGVDHUUCpcIOWLs4TgmHsE/OCHr\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArGEtGlA+CIjDcf9nCr+K\nSSIXvWsdOyAlvU3DAzSDE8Gl0xIu2N20CmyJSH3fDDxc1LxFPR0102AwhyK43QzA\nfXxcYSdasUcU1Xq15S49pq45PpqKkB4WsOIxkifN1kFaDEmK86je/VWV0TxOtFLY\niaMQK4AVwgReNdhJH49tOzjTMjHQGUPhYAJfeHe7FUUpAUvlX4ibAupF5vhEUk0/\nXptyZhqHaRpJQxOfy4FttngTQ+ZWqJODBeVlkX16chGWbVkU3Ei74n6JiC8vINq3\nGksc4MtVWGxBjo4kWWnuPrP52vDQLM7QWNsUmkHRlQx1FAqXCDli7OE4Jh7BPzgh\n6wIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.client": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "056dfe69606245e0e7a754a51bac4a41716d5f3e",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "056dfe69606245e0e7a754a51bac4a41716d5f3e",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEApgWkzGzHTgByURwCCGOgNzXDeQDM68POZjnd2AoMHovrt+Xy\nfRPePmZoyHIY0rykfwxh5E7bXhDG+ECEKC9nRryY70Kc1CaF8EajIWuqB9IgnbGk\nJluUU71Zjim0GK367FpSR8cP5I5LAZf8bdfkdPhNiUAFh/xm0frhQBbuJSA+jjbf\nGDh9HC+Wut23m6EhsPkmajUTFlvz0o+X5U17II48BDw63pLKygMaIRsYBlLkjbVT\n8gy2gYpLarW+eqtqrXRmq1+QbYd5C0jf6OmQoUIqAssv+WgEoLSm+kuprrF14sTd\n5oCxclmBRLKBwhIAJoVyuDntwRBKji91yfYR1wIDAQABAoIBABKnAavh8MZnsHBC\naEwO/VoWlT6MA3ndhtvfVnhGMLRh3frMP+EjkU2LbexPPVC31vdbKchfv6+izOfp\nP6/QG5dL6xa+ciY3qcaj+QHxOaolRnrREXMpyNFbrasWLmCzc0SIpUPhLnzsK6sj\nKz4gCk/F8dggtD5h8h9XQ2VS7jCHb3v2HXYQQgbRe3QnUjt+HeWCfYmQTWZOfLdz\n1Bdg9VQGkART1L8PI4AAX4/VXJKsQW+E4t7jgHjyzoCp00rb0B3B8n6kF3dqksdW\nPeprzr9YsYFUYL4GP9nOe4jguuShkYhHjsweUaKJwy7YD+p7n7GmsBakZNB9Ig3/\nxZEeQyECgYEAw3flqVITSnqgY1j+Tp1ZC4TV2rUljzBEedPqWHgt1WBapBNiJKUC\nCdLPquqW2K74asLbOJ7W6blLh5bl037onuIWWhsd3WdAGKQnaWVONf5NMA4ui22/\nplp/1DsBOmdMEWvBptLbr/gDMG9pqwqwZQuIayLwLEp461fQh34xLBECgYEA2W9W\nnoZsrbVt4hJUkPvEIHoTRA5ryrxWuDKSEkolFN8LgQhBn+lkt612Iq4xNM4g3FV/\nUBObEV1bd86nsT56Vur4PQKf2TemC1PeSBM+sLfElXlTuxik3GmE/MUNmQ7YtrKR\nWIkEzSgGxnfsOVXfLu5m6JfPN0NGYJk5OODK52cCgYEAlRJSb2Bt3+ZHfZz4TYJI\nz7Ud129BVsOL5ZGNbq0w30NdvTYfKi1BsbY5tHK2WkiOofU7dSIGazdqd9zIKBTo\nWYu5WjzF+P1ub5x5hjLBhAIOYfDe5GzttXPde0EIvb7bz4lrpcu3yasO25iMcOp0\n/oreHj8GBfFB6NIO8dZ2r9ECgYAZkQfkV/YLbtveyzz6V0A2eWQuimuOSRsBSaD3\nWZSGobtejrP4s57OIi1T4puSk/I1NjBkIAoJvqp0qe3531jPQ42wztAw4GQ7zL7E\nRs8GRHVvBfccdsdby2SBvEHfD2nYAaMpf+L6pIw3Zf52t2wovouHKeKJovVxglLC\nJ1x0XQKBgH/5fOnV/nDnqvhXvwH9kLX8xuI80YdbpJ5ixErFMBXeYEcSP00fFwPM\nP01Savf+94b+40Tt/a5kd0yKpK0mGVgm1YaLceftBKPagSCbEdwCxhNov4g35Nrk\n0TpHbstGEtceCMeWb/0E+tN7uIRWLdgwRITtR/ocEXHP9YrqyLdB\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmBaTMbMdOAHJRHAIIY6A3NcN5AMzrw85mOd3YCgwei+u35fJ9E94+ZmjIchjSvKR/DGHkTtteEMb4QIQoL2dGvJjvQpzUJoXwRqMha6oH0iCdsaQmW5RTvVmOKbQYrfrsWlJHxw/kjksBl/xt1+R0+E2JQAWH/GbR+uFAFu4lID6ONt8YOH0cL5a63beboSGw+SZqNRMWW/PSj5flTXsgjjwEPDreksrKAxohGxgGUuSNtVPyDLaBiktqtb56q2qtdGarX5Bth3kLSN/o6ZChQioCyy/5aASgtKb6S6musXXixN3mgLFyWYFEsoHCEgAmhXK4Oe3BEEqOL3XJ9hHX\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApgWkzGzHTgByURwCCGOg\nNzXDeQDM68POZjnd2AoMHovrt+XyfRPePmZoyHIY0rykfwxh5E7bXhDG+ECEKC9n\nRryY70Kc1CaF8EajIWuqB9IgnbGkJluUU71Zjim0GK367FpSR8cP5I5LAZf8bdfk\ndPhNiUAFh/xm0frhQBbuJSA+jjbfGDh9HC+Wut23m6EhsPkmajUTFlvz0o+X5U17\nII48BDw63pLKygMaIRsYBlLkjbVT8gy2gYpLarW+eqtqrXRmq1+QbYd5C0jf6OmQ\noUIqAssv+WgEoLSm+kuprrF14sTd5oCxclmBRLKBwhIAJoVyuDntwRBKji91yfYR\n1wIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.etcd-ca": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "201b58d477aa05ae1120341bb46e2d638ef1a092",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "201b58d477aa05ae1120341bb46e2d638ef1a092",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxZe12X/7h/zPapceEyTLn14ihc8hksvxetDgBCtqKsJwEPZV\nhuXt3BfgkwBN669c7fy7r6v5VsnTrzZjwiZiuT57lIMhq+92iyJhdnBnVy6lPyYX\nMgET+qbIetQGRkFqeN25kGlURDKiPeSTaIAEc7MZ1Pwz7S9pvBu+xaGzj8Ha13MI\nevsWG5pSoWCdschCzDd2cJb5hNsaR2idDMjp8FWz3TFC9JIAydMG4mNrZu0pavup\n+34HdKbq+ulhXsfOYwpJ11Gu+SukfsPLOAveAkB6Xyf0woeh5kcjBIvQGHuGInPc\nrCYeRpoup2Pry3Cslc6zTeF7jWOfjV5ZYEExqwIDAQABAoIBAFVaoa1gwbEOnjK3\nMMCoRmWDbnpK7X/SJXAeRobGkkgCUhKhtnRdYpCOp+4YVZCX4hbT8+eA7GZ3LMAl\nSJaXqlHHEe8nbiYtfRHBOkTFbX6VocBTnfV1zcGaxkN4z3UN0QaBESW2ujXzgW4n\nDR45HrM0DNaaU3wD3TLq8U/B+CUCn/Uslkv2wLiEvOaoRvtLjyKnAJsAph6XBdPQ\nskRRw6ylADZfrDhXU8GkUzUjjlJY4QnkE33FjZ93Y2YCh1glaNPeYo+5lgtLpLfM\nZGxTisMUci02LmJv2VL1lMdPZ5y8ibqGZXq9wQP45dHpl+yBe2zjxkW+mL6hGV96\n2uSflUECgYEA0/LXzqpoTe3Up4c+fQ2GhssMbDFsSuWnKeAtD4hei089NLKog5zB\nE/m+sJyA/js0cOqHT2tph2mlhvL+WbDGL/nGBSqEWtrvdHfZMZ/EZ+EvM65zboPA\nAmeM1DlUL1kEoAFecxY3dSCNhUHYLIOZSTurei+myRf+3om78hIMObECgYEA7qkH\nIOyUCq+KVcxfh+6CyLLbU3BLK+zMH+f/HEG76sm+6V6oVl/wynEOvawrR5cMTJ1q\n2KycCcp3oDTu+n1CVoKFaIT5+9W7tU3RzYMCzJJ4eoa+XdYwd3uN+45uKldKbCtR\noxZT+lGZnzBqge8MCRoojD5Jd/Dh9bEk+jNT3BsCgYBugBVzcfSfbHeKQECcAgk5\nDXOUlM/Y3JKiinXzuy1PhChs6RhiRb+EIpkAixfVdBiLJjsVdPK33qSmDtn8+OTa\n7mYHG3uVwr9FAZcDAEDtx8FMOI+F9rqMhmAt5RW2+bonkY8kgVi4gBhIeWOzEYlB\nXRKxyVYzUYdXjoemVTJ6gQKBgQDV8dSgITS9N4vtSh7BfoDjZeLTs7DPmaGLYLAD\nJrJM0bpA/kgt1ifHcv5h7fuGW9P8wolL38CpzkTa61joWG2lm6/4eGyY44s4BqDz\neGSD+zHhtPTmreIY2jv3rED51/KxcUvnxVZW6durJv3zqNXDOx3qStQVn20QkVKy\nsFyWzQKBgQC8Dct0w2W1EY/M8hbtKUmsUnQyzlET2d1UvEHNLtWpULkx7IUa4B1G\nPHl3q34X77l4gH+8lds5UL9QzSZ9jECfCe55pisGaJzit+5OXN1VRUbaw4kJRelw\nhMcA5+ULbQZWTaZvggCEAK2GylYmK7gQ15UyejgpAm+qtkbjY1UFrw==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFl7XZf/uH/M9qlx4TJMufXiKFzyGSy/F60OAEK2oqwnAQ9lWG5e3cF+CTAE3rr1zt/Luvq/lWydOvNmPCJmK5PnuUgyGr73aLImF2cGdXLqU/JhcyARP6psh61AZGQWp43bmQaVREMqI95JNogARzsxnU/DPtL2m8G77FobOPwdrXcwh6+xYbmlKhYJ2xyELMN3ZwlvmE2xpHaJ0MyOnwVbPdMUL0kgDJ0wbiY2tm7Slq+6n7fgd0pur66WFex85jCknXUa75K6R+w8s4C94CQHpfJ/TCh6HmRyMEi9AYe4Yic9ysJh5Gmi6nY+vLcKyVzrNN4XuNY5+NXllgQTGr\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxZe12X/7h/zPapceEyTL\nn14ihc8hksvxetDgBCtqKsJwEPZVhuXt3BfgkwBN669c7fy7r6v5VsnTrzZjwiZi\nuT57lIMhq+92iyJhdnBnVy6lPyYXMgET+qbIetQGRkFqeN25kGlURDKiPeSTaIAE\nc7MZ1Pwz7S9pvBu+xaGzj8Ha13MIevsWG5pSoWCdschCzDd2cJb5hNsaR2idDMjp\n8FWz3TFC9JIAydMG4mNrZu0pavup+34HdKbq+ulhXsfOYwpJ11Gu+SukfsPLOAve\nAkB6Xyf0woeh5kcjBIvQGHuGInPcrCYeRpoup2Pry3Cslc6zTeF7jWOfjV5ZYEEx\nqwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.kube-ca": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "96860f486d7deb01080bc8a2555bc91511dcf17f",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "96860f486d7deb01080bc8a2555bc91511dcf17f",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA2otjL11jf/lW2/g+GNRfADH4fR5z8rWScd2DHWqSpu9ZRW+L\n9c2Fc4DOMv40v1oxhbE7ev+JztfnmUkZ5xnuHK4akJu7KxMuVsS2V0fxCtRjgGQH\nkRKtzpmy7Th2sgeGnC43vkhjJFvVZ+g5R8AwErcqXk69PL+YHI7aUgcZRCOI+ar0\nonPsDzBesv6UoNybsMVGO7ntsik65D8OcF+fhRxaqIh/l6WM14biwuGcN2LJtysb\nEe5HwWilzw8y25267YcVmd0uH/JstCkU4Y3Vm/Fa9K81cVRZx68HLXSruIvaT3kh\naGDunYHovfApelL6LXrCjWE/qI3DkcrEBL/eywIDAQABAoIBAQChcr2oPQaHgQzQ\n3hgJwcIY49GdpQSlNcvlAG6fKZ8DYeiCKkCsKtM+m9Y4x6DyB9Bz4pV9bRBCVS/M\nBrvzBS3p1Bjd4Z4o2TevdAz8d7IzfOmw7LTGUJVD/jm3k7HkHTktYdteYB2Vu53w\n8BZ40hrxiIztNKAKI8RcvI++b24T7gsFP5qCtXciGBSBGEwEOQ2wwOmsurXbc6an\nt/dQtavk/Jp2DHS53pVJ1iRUOzDT7G6s6jQcvEES5vu7YfpQkW7BICblRy51NlXo\nktrHATGDcJLylQfi1q2GsIPpnnYS6MtpEXQApb/Z94rx4iSFynOh44eWfGuu49aN\nty2FbvRJAoGBAO0UTyzCdo1lkqsu+U3R5Bn+5i3Ja0sI/UBmWmYU6qUauEW3bhL9\n+9Fm02gtqHNs27wgbflpYGD7D0ERbJF+C+vYk2Q/5TC0FzGF5g4KwttjXOQ0/0Kf\n6mWkStS9i81birZmkjs5NnNgpxANukyB/av84HA61EXnvM+IFw4svXfPAoGBAOv8\nZg5N618en+R2VlneGoBMxjm+maR2ikhW43D5+XjcNaYcImDDzGRFipFSrl/7kEQn\nuy98YS4HqABM78B4PIHijQSIseoektqHYW28n+bZYDxrlSNHnDyqo0p9ZB6K3Vob\ny8X3XJr5ufqkpVsQcIoqXiwinPQxuwSUdgjIOSxFAoGAZa4sNvpAdmx1901yR1oa\nBrw4ZLLafZghZhl/9ABMkvtexSfi4epksm7zhN7wPHEX3RvbjvkPCQkkhbe/ZLc2\nzbRZosl0turGd8sB3EvpPsbi9E12nVCQ638HSS7yYuU8HPbpCNWE8P8nJ897c4zd\nC4Ktj/TrTgASDsBDgyTVLikCgYAwi8nK44iqFri53QZCkohNIH4e3vDofmJQI1/C\nnAoQLOz0cRE5as4fSpcI8kNhB3VUMAA38pRjTbvn4+vmYlXAOoTcC+rdyNBZGESY\nuJcEfG9pvo/9o/umF0xkRItWJScIJHO1E//++aSixUAnDai5I6If3jb/nUNl28y0\nXcw1KQKBgF7HTA+j9dURC/HI6YigIgbtoTsyY7kXsDogHvFIKt8LuQqg36l2wm6d\niSYSe7b+i8nVZmtnJH2nuu0JNp2drpS9HdbCBPk9jn7NjdGpI+mNhApTYHvDWY0i\nlsk/yUlzoVitEjDPy+4o80cKDsPUuj2N9J1oO4xI/TAJgdQH3WWW\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDai2MvXWN/+Vbb+D4Y1F8AMfh9HnPytZJx3YMdapKm71lFb4v1zYVzgM4y/jS/WjGFsTt6/4nO1+eZSRnnGe4crhqQm7srEy5WxLZXR/EK1GOAZAeREq3OmbLtOHayB4acLje+SGMkW9Vn6DlHwDAStypeTr08v5gcjtpSBxlEI4j5qvSic+wPMF6y/pSg3JuwxUY7ue2yKTrkPw5wX5+FHFqoiH+XpYzXhuLC4Zw3Ysm3KxsR7kfBaKXPDzLbnbrthxWZ3S4f8my0KRThjdWb8Vr0rzVxVFnHrwctdKu4i9pPeSFoYO6dgei98Cl6UvotesKNYT+ojcORysQEv97L\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2otjL11jf/lW2/g+GNRf\nADH4fR5z8rWScd2DHWqSpu9ZRW+L9c2Fc4DOMv40v1oxhbE7ev+JztfnmUkZ5xnu\nHK4akJu7KxMuVsS2V0fxCtRjgGQHkRKtzpmy7Th2sgeGnC43vkhjJFvVZ+g5R8Aw\nErcqXk69PL+YHI7aUgcZRCOI+ar0onPsDzBesv6UoNybsMVGO7ntsik65D8OcF+f\nhRxaqIh/l6WM14biwuGcN2LJtysbEe5HwWilzw8y25267YcVmd0uH/JstCkU4Y3V\nm/Fa9K81cVRZx68HLXSruIvaT3khaGDunYHovfApelL6LXrCjWE/qI3DkcrEBL/e\nywIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.kubelet": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "0902e83ece8272fbabc475b5a7f2468777fa6814",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "0902e83ece8272fbabc475b5a7f2468777fa6814",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtawfmRgYbKn2MqTfCGu+2QY21IXE16/UkJ+C0M5BvB1C6+tu\nDyg+MgWcoGoGs9xOebEytbPnWHQdwARIwAk3kBb5VF9l5Asj0KEHYeW8vyVPk77d\nXSHmgIkoKMnnGxwyIuIclEpPJuIKLGqkE0r0+Vev/46GZAua/DlXUNQpLwB6z8fq\nsN7Pfgffdc4H9wxb85XmYyuvuL+OGBHtK1h74Jy5mYbW4J6eI96gIBS/IMlq52Nx\nbz7B3WDFkcWb8oFtOj4B7qTK98aBL2NgEkuPJCz1MX6g7ZUp1m6imvQthRmgEpj9\nprwJ0eArTiNLfNJmteDLmytmVKk4cmlFHlqS1wIDAQABAoIBAQCNLC71uZqpPj3Z\nxvKlyYxpewG6jiSTcsgchkeSWOUN+DMbvzwsPRpvppq6sQl6VNUKjZ8ZQa6htsGz\nh+C8ka0CpEelv+gemGWBZtCky3CrnKPE7Ml56LEE6xAw+gxDrdpr7wdEWKY/UeGT\n+F59u364D+LtFOTr83TBURG/9s31/frlw4K5CicDEke35JjbewZrLZ9u8UvVNrtp\n6Ghr2v0o1nxlmYAS/Sgs4a1WGkYG6WdYBmVkjXf+Li0jZfJSi772dYbmnvXCputD\nQ2Pbj3GVM0ATGvfZio66ldGcSuMD8h+wFA843V8mhHWdk8HwAy0iNNVsipza78U0\nphuGASwhAoGBAM2p6CVCS8a71Uy7ctAh9oN6vMyQt+D4RoHfGpWz3+3H9qqb1WIq\nzXj1MVgXsTC4gSlpXC4OGIkDQgqyl1sSoKDtiepGYe6wOjvl7EBDRxCPY9sQiFQt\n/US7OMX4B21dabTm2KiMYb+tAuwF7nk3bi/BGZMcY00sGDwmDuG95/NRAoGBAOIj\nAwWQ7uTM/RbKj6doKkexr5drP5myR4KuUqRPYpfHXfaFJBLcbTtPZF3TN6LuTLfl\ngFtWZc2piP63Nk7JRvr3qZ/yv8Em2u9+XTcrII7x+nGbwbMWJyCXvycl7kwcs/Jr\nJUTlm8YSAXHNHj+Zo95L6G9D8VYPeXRQ674LbQmnAoGAGm0blDYJkJawGLT5Ur8a\nctiBi/OIfRLJ1IQ7YUMEogQQsOlnKL8BOeqflYct0GnUxuJv4scS5gASK1e5VQ12\nsFb1YrH6gXYJdYrcqYE7j2gtV4evTMnAAmXgLKfrJGVdYM5MxpOLN9reRj+Y3eB+\newpf4+RA6jihQJFPVjhVppECgYA10jtv4bTaA+fguslCAMq/UY0HLuFuRT473h2R\nOcuvcCXu/HU/f/MHgLfUlObTAoCD7D2Gf6OvNUCDzzs/uSwJo1Rd2zrET+kfwyWQ\ncdVH8FO5ImcRpp4dZcB7Is36k4JImjO+mB9hHvv1B+rBHGIiEFL72GHiJ8CybGgP\nTUzgVQKBgQCVYOsZ80HWiSNBBTq9/jYM44kj40jl70WE2Qx7NkrE+g9schWJIV56\n3NYUiEYQqjcnh9TKwnsTOwbBSwxsqT1ANbXGhPeVCgq1s2fwGICp8nDdlRswpUJy\nkzB6FXeXz1YFeTdMRTqm2aXeL1sfs7AM8sau7GejWfa0M308w6Zg0Q==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1rB+ZGBhsqfYypN8Ia77ZBjbUhcTXr9SQn4LQzkG8HULr624PKD4yBZygagaz3E55sTK1s+dYdB3ABEjACTeQFvlUX2XkCyPQoQdh5by/JU+Tvt1dIeaAiSgoyecbHDIi4hyUSk8m4gosaqQTSvT5V6//joZkC5r8OVdQ1CkvAHrPx+qw3s9+B991zgf3DFvzleZjK6+4v44YEe0rWHvgnLmZhtbgnp4j3qAgFL8gyWrnY3FvPsHdYMWRxZvygW06PgHupMr3xoEvY2ASS48kLPUxfqDtlSnWbqKa9C2FGaASmP2mvAnR4CtOI0t80ma14MubK2ZUqThyaUUeWpLX\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtawfmRgYbKn2MqTfCGu+\n2QY21IXE16/UkJ+C0M5BvB1C6+tuDyg+MgWcoGoGs9xOebEytbPnWHQdwARIwAk3\nkBb5VF9l5Asj0KEHYeW8vyVPk77dXSHmgIkoKMnnGxwyIuIclEpPJuIKLGqkE0r0\n+Vev/46GZAua/DlXUNQpLwB6z8fqsN7Pfgffdc4H9wxb85XmYyuvuL+OGBHtK1h7\n4Jy5mYbW4J6eI96gIBS/IMlq52Nxbz7B3WDFkcWb8oFtOj4B7qTK98aBL2NgEkuP\nJCz1MX6g7ZUp1m6imvQthRmgEpj9prwJ0eArTiNLfNJmteDLmytmVKk4cmlFHlqS\n1wIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.peer": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "2b7aa3eb42c30cd2b5be4f00e59d2b34dd6f9094",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "2b7aa3eb42c30cd2b5be4f00e59d2b34dd6f9094",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAx/24xxpeWniFtoyOCZAdT1a+rUjgWdE8LohPdVNk9GRvCrUw\nt6ZTswUllLyBoUsHeTSbnceEH2USw6Pb2NuT5iuZ4rD71IN35OQYNUpBTxxj0tzv\ncKS87jqpZuvO7gwiSyRYhfHlPD1GD0wGwYRkU6CbfkPKsaHYneqE5c7V6oA9h/XY\nrRgUyM1MxHEz3QDZE2kTPfLpxLIRGDU/C0FYFmTneFKZOon6iVXFGQdfAA6uWfnu\nFDbg0K2UbNfjMf9S6rxuiemv2I2i6FD36dgRzh3GwWF6EXfYh+FqWCRK9TgBCtW0\nj7Qbs+8Hejv6nzUKyTslJ/vaGO0JLDO0rK9KrQIDAQABAoIBAQCe72mQeckwVwXU\nzKD4wpo4ejSw2/DIEHumc1fKYwshGkwRE2vzF3D/HYD/Ukwm1czLq15cprm+hYHD\nDw7hqadBTbdPK94GxrBarFb8ytVaPLKsWj7Do3guT1pfW9mo3uXGF81uLY5DMGLk\nN0RLOJ7Owx2v28pTHs9auI0DYTwpznYM7rVe/SNzNiqnvBLQjgVmzMWySsDy33N6\ncFN/Whsfeln3o+2haN+AV27g+jLXw2nYQobnqi088XV1hBDGUXtKSNaiDa7tw0o6\nBJRNHTbJA4lhXhuZxOVQYkTgoRJsgkMAC3nyXbKutRnwZJ2oukz5zHB3Rabk+OkP\no4unI26BAoGBANLQgZlW3ggu2GJ/Q5WuvbsLpbA5S50dkNs/trk/Pt5cVjC9hBBT\nKMQuSDknB53F9MA0HSGu1L1x0XPx/7ay9rwjgL67QTUOH3pMA5HI9XoQymGYJtDX\nTBmD4QiuCfmvqUHdVZxl/kWOpeFoW4rgvIiZ4PK2bCKgNHMoA40A9TihAoGBAPLb\nVOB9NPq+HXJfm9WXiZPOGM0eOGfcSTazk67a/QMooNEdXhUxVPMC0yhUyjbMqtVN\nkiFdXH20/a+kGa18GQ/U6+NsMdS6OodyzJBx+BtxKubLu+/LumVFnzOASMVkJYnm\naLZxqUSdDSPwaTypyuTpbRwL2tcbm5xM3Jq7ptqNAoGAVAl0MDk1p1NtRM5wlaGj\n1oVNFlOwtcAMd6oNYAk7OY7bePCDTbKoxJOijM3nNlisOVZM6pl0CtTtZufoRN9Q\nhi0s7FtfIhQwLiNRJPNUD8XTt1Xc21GH73/n2/rs1RDWSwA9WWw7EWVM8O8V1uXB\noj6dMoPP1XnBjso7qCDioCECgYB0RpNC0G/XRcMviZtBDsbuH5U8UCXNhGkBacVh\nyLOvGXq15IuxNedoWofjHYWb6y435mX614p7HXcA617n8yzEqbsvLhRFt8xiIZLT\n7d1OtkZGLnGTBEYASu9IZzlwWNyoQ8sK3yyeD1vFQ0v/oYPlSeXVsc9bgnpkwWA2\nLXZb2QKBgQCIlCfD/An1NaukxI5scoe5JuuFkzA58ERZA6DPsG1TLK33/DjbVhfR\nT5m72rG4J6rDt87K4qsl56OkRlay1yvsZpGpsL6JYvpAg+YWR0mxGtssnXjVHcBU\nLyfTq8FelGiO1DModwOGSG52OV3erp7rwZvR9oxnAPZWPplyK1YtTg==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDH/bjHGl5aeIW2jI4JkB1PVr6tSOBZ0TwuiE91U2T0ZG8KtTC3plOzBSWUvIGhSwd5NJudx4QfZRLDo9vY25PmK5nisPvUg3fk5Bg1SkFPHGPS3O9wpLzuOqlm687uDCJLJFiF8eU8PUYPTAbBhGRToJt+Q8qxodid6oTlztXqgD2H9ditGBTIzUzEcTPdANkTaRM98unEshEYNT8LQVgWZOd4Upk6ifqJVcUZB18ADq5Z+e4UNuDQrZRs1+Mx/1LqvG6J6a/YjaLoUPfp2BHOHcbBYXoRd9iH4WpYJEr1OAEK1bSPtBuz7wd6O/qfNQrJOyUn+9oY7QksM7Ssr0qt\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx/24xxpeWniFtoyOCZAd\nT1a+rUjgWdE8LohPdVNk9GRvCrUwt6ZTswUllLyBoUsHeTSbnceEH2USw6Pb2NuT\n5iuZ4rD71IN35OQYNUpBTxxj0tzvcKS87jqpZuvO7gwiSyRYhfHlPD1GD0wGwYRk\nU6CbfkPKsaHYneqE5c7V6oA9h/XYrRgUyM1MxHEz3QDZE2kTPfLpxLIRGDU/C0FY\nFmTneFKZOon6iVXFGQdfAA6uWfnuFDbg0K2UbNfjMf9S6rxuiemv2I2i6FD36dgR\nzh3GwWF6EXfYh+FqWCRK9TgBCtW0j7Qbs+8Hejv6nzUKyTslJ/vaGO0JLDO0rK9K\nrQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.server": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "a9b9d17ea0a82cc2e7b85cb7397217825d49c55b",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "a9b9d17ea0a82cc2e7b85cb7397217825d49c55b",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAvKVK++ifcz/US7R9lDgDJkRZzcOw+BBtrhIzIIHCMgpm7RQ/\nPRMJLJAW7syVbHSCOJqf4i47QVV0pZ6cDJlRenmg/9Q2cFu1COQYf4Lwpst+xsEZ\n/XG62HHtdWWdMLj0wD55TZCeOg2TSfnqZ5zrD8bXlraHkzwc0W6yA1tJJvcsmiuO\nAngmKiJaG0zoyLBPFK7/xtN/xQaWewz3HDyHCbcDLjeIgy2+SU6ytW2odMahcNNY\n+Rxpb4RjGUNa22StZCBXWMsg2s7N9Y+euboAKVECYf6slIxvShmHHoG8FEoul1CF\nXttjqmcyD/Wv0jAG7bZQd7ut4JEUJPRHQsH2wwIDAQABAoIBAQCBaOrdkKEBkMH0\nBSc4rIwMjksEyr/2DF8RUM7d9+XeKiCddoxDO3HJrjbtLk87DVnftsMDiC+CDDtu\n+jWWtv6cBCAcH9oQjfjM1pyvrIWmBmc7tXA82u4QWWdKZ6DDsb3Eu5a/TPweWv21\ne8n/tjfSpNd0PlcW+9/RFBzuDItMPIpHJEe/W7EfHYCEcivBy4sus0eB0aOWWJdk\n40P8dyWvieej2vdsEKdlp2wyU6MJBcg2/rlSnh0OTAB+qW0kdBtZi20smEENrztX\nzSEjM1caEp13nzuwsoyCb8QV8VkKlmWZlyDJfew0Cxo6MW1aDqf8OM7ao8mPG9wH\niWsP0hvBAoGBANlLg+QwJoCjbHG42QgN2YfF9eswhtz9cN+PRzmoC/bL0+q0lgGi\n2VwNSvi3YKGOPdtXdP6EA45oJeh1guWPaFk7DvQ3Igty8UHxqVeZX29VLTCGItky\n0BqQiXdDCTLBeuv5rsaeuKRDa+1J2arLYe6wW9XHeVxXrfDEzTINV4GRAoGBAN4/\nZCusmo1sesIqVopH18OGcZ3ypDRnPOXYHL4U7jyLYEsEqyd4QCNhS6gUcQJo5IjZ\nCp+8oYHGh2G30ZCPtJU5cKWsf/NgpL9B1p/0PmaGKkSp/CCMziWd5hNa7uEPZLh5\ndUVwDGTabgRGIOV+uZV7/x2F6c6BiJ3cgX3zwUkTAoGAI7+2vS3mx7cbOkJtAlQ0\n+49n+/+J0IWpsj4CO8wX28yA2tZG75H5LJnLQcv5i9q49oMW7mCNrToZMntSw62q\nPzPmK+t+IGASrQSzFYRYHRroSllnFlCzyAsLcqGGu+D09imnxWmLewrUkL9bnivD\nut8s3KjqoHSUW04lbByhzuECgYEAuCQVvwn31A15eL7TjScRYnNWV+PeoXyYPGff\nCK8W5Rsl4YIwvTcpDSdkJBMrvy9hivEpmEgWGQyAxzoibIBkwu8gomRWbzQ3zC+k\nwEsCGLg49UNSHzYK56f4JTlGizrR3Pblb27zFezVEr14LC3fXjeqnK+DlRJGO2Wj\n9NOt5fkCgYEAht0VurmwkgeupSCMJFCIJ0giJpPThasKzjBq3DXGw3aiI6fGiNzX\nPUwOtQtsUIDO5t97L4ONg/9NajxRfbpY+9s/xMza1f4ABZhAYF2Kf7Sssi97phUD\ndHP/4vAfTRRSSrkT/q68pLFrGNzdiLCMhNZ/E7EC31JR3BMl83+W6l4=\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8pUr76J9zP9RLtH2UOAMmRFnNw7D4EG2uEjMggcIyCmbtFD89EwkskBbuzJVsdII4mp/iLjtBVXSlnpwMmVF6eaD/1DZwW7UI5Bh/gvCmy37GwRn9cbrYce11ZZ0wuPTAPnlNkJ46DZNJ+epnnOsPxteWtoeTPBzRbrIDW0km9yyaK44CeCYqIlobTOjIsE8Urv/G03/FBpZ7DPccPIcJtwMuN4iDLb5JTrK1bah0xqFw01j5HGlvhGMZQ1rbZK1kIFdYyyDazs31j565ugApUQJh/qyUjG9KGYcegbwUSi6XUIVe22OqZzIP9a/SMAbttlB3u63gkRQk9EdCwfbD\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvKVK++ifcz/US7R9lDgD\nJkRZzcOw+BBtrhIzIIHCMgpm7RQ/PRMJLJAW7syVbHSCOJqf4i47QVV0pZ6cDJlR\nenmg/9Q2cFu1COQYf4Lwpst+xsEZ/XG62HHtdWWdMLj0wD55TZCeOg2TSfnqZ5zr\nD8bXlraHkzwc0W6yA1tJJvcsmiuOAngmKiJaG0zoyLBPFK7/xtN/xQaWewz3HDyH\nCbcDLjeIgy2+SU6ytW2odMahcNNY+Rxpb4RjGUNa22StZCBXWMsg2s7N9Y+euboA\nKVECYf6slIxvShmHHoG8FEoul1CFXttjqmcyD/Wv0jAG7bZQd7ut4JEUJPRHQsH2\nwwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.service-account": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "b3f002e433891334772cf0f461dd55f9d4729ffd",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "b3f002e433891334772cf0f461dd55f9d4729ffd",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAw2NcBkdRj4i9jGN11Q7e3N29S9xp6Vf5+VX5m1T3jsbBySyx\noctI/ouDBFNPzxbejJPxcgEFcQNu4nE36sEJi5AxKVo2evWQZ0oQj7QRmuI2O9aU\nLdKSlktJ6teYggwzLweQuO/8H6LsleFLrqMyaJtcZZdk1sRRvs9npaZT+HDKjjOH\nZpNgtDBZs6treulAeix5T5GKuXjSKs7KeVwJJi5HyVQTqlID126JYO8PxJV0pDeU\nfHJPna+P5hMpbTvYaRwT/pqvE+3ftzWvHRHl4WKaxH7AxJUnv4721wtk5jnfckqX\n1oQM+lIy5/WCTPfO3+cKU884E0wMdzjSPoFE+wIDAQABAoIBAQCtheFlZhNGMP99\n3Zr5M/KzHm6OH9sjs9E6IaPC0svkzhmuK3Y6JYrXHVmnDsJTPZE6Me18/PEzNARX\nMIujffqXKuCuRAMcYlfzk3Bv31C/R+U4cVI5+8fZmFW2LfCwllsiikp6JA+6nPwW\nA/ctypvrEQcW5kRVBBdBKXt4PuZWPXAV2MydJQ7ENWE9kgBUpwn7ci70qq2pE6yQ\nAaJTHO85Y0uWjB7x7ceyzIzpqwwcAZPEoNtvbhYRnNUW4EPH1szi5G8CM/4vjrvs\nmEVVDZ7SwJbpWQUAn+rxLEiTkG31HT68R8nLGXZGnZxq5tIL1Ei0MHNGHU7REQ+2\n0JHAw3phAoGBANoNaEXjL6G6jWD3PaCUoJGvXE0IgbiJaijgEJoQqX2aP2WHgmFg\nCY8EVkSDJLQEaYkalJJP56cHHpYJzp4NWXSdxPMyAbLQSiV6wfsFxQ6FQqFotXqs\nCFiLOm1DG+fgBjJTFNQaaWa1THDEfSBqoZfXj3/fwafAAVabRPyPK7KLAoGBAOVk\nOPRQEzCRKAnvGy2KIIXJyaF6XKe9Zxn69+LGIakN1mpmxFc62srvE4mgJacND7SQ\nyAnQECFSNPMbE0isIMYFS/BkXCUhuC6saq/kvaODqQi2sDAuJGJvnqEpqm+EzNID\nbEutNKIyRKoC1mTaxkQnw3C4YAnXuUhe0jlbBTVRAoGBAJujWjwYDtWHTIZbsxc9\nPub9ngo1+jF3k9idJfxxzCikwn97m6pZXDlCxTidysLbK2D7IfTVJ+nmgQRi96GE\nscc1HXDgzqmNVn8uAetkkOTuZULEdFSdGk/pAMkgT3jQRFwDRSinuXfgDDGpbg6H\nTdQNvpVtZtKPj+T7auBCaNRFAoGAONYCPpZwisIMd5mk1D27HSsIKFhXCMCnAQrr\nzGZnBKoHDEn2L97HQyzFXH4vlhpoX8bXqYbB2F+z+uAkgQcU/7tkO2XCZvjZ18ak\nkHxOeGswwJXzRZzJKxKY7TmTnxn6Xba3aHC778wgszcMw+Ro544qoI0uToICyGmm\nEMv6mGECgYEAurULY7NvfeW6E85ceAAuwBj7L4j2gtUu0X+SWZel19P/VWsSl7kn\nTB0s7qBDzCSl4ZraL2IhcBvaPtTjktwdqDgnEut2xzuoYKY5pH96OPACRYv9ZHwu\nTi50Zf4VyrB4kOnBXF1ylcUB45qyeZfXQ81AnLYz7TVhnmsasj4eGhk=\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDY1wGR1GPiL2MY3XVDt7c3b1L3GnpV/n5VfmbVPeOxsHJLLGhy0j+i4MEU0/PFt6Mk/FyAQVxA27icTfqwQmLkDEpWjZ69ZBnShCPtBGa4jY71pQt0pKWS0nq15iCDDMvB5C47/wfouyV4UuuozJom1xll2TWxFG+z2elplP4cMqOM4dmk2C0MFmzq2t66UB6LHlPkYq5eNIqzsp5XAkmLkfJVBOqUgPXbolg7w/ElXSkN5R8ck+dr4/mEyltO9hpHBP+mq8T7d+3Na8dEeXhYprEfsDElSe/jvbXC2TmOd9ySpfWhAz6UjLn9YJM987f5wpTzzgTTAx3ONI+gUT7\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw2NcBkdRj4i9jGN11Q7e\n3N29S9xp6Vf5+VX5m1T3jsbBySyxoctI/ouDBFNPzxbejJPxcgEFcQNu4nE36sEJ\ni5AxKVo2evWQZ0oQj7QRmuI2O9aULdKSlktJ6teYggwzLweQuO/8H6LsleFLrqMy\naJtcZZdk1sRRvs9npaZT+HDKjjOHZpNgtDBZs6treulAeix5T5GKuXjSKs7KeVwJ\nJi5HyVQTqlID126JYO8PxJV0pDeUfHJPna+P5hMpbTvYaRwT/pqvE+3ftzWvHRHl\n4WKaxH7AxJUnv4721wtk5jnfckqX1oQM+lIy5/WCTPfO3+cKU884E0wMdzjSPoFE\n+wIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_self_signed_cert.etcd-ca": {
                    "type": "tls_self_signed_cert",
                    "depends_on": [
                        "tls_private_key.etcd-ca"
                    ],
                    "primary": {
                        "id": "70312779842187866270912982799515388143",
                        "attributes": {
                            "allowed_uses.#": "3",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "cert_signing",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQNOW/snqHIsMv4/4i6uAI7zANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyODExMDg0\nN1oXDTE5MDQyODExMDg0N1owITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMWXtdl/+4f8z2qX\nHhMky59eIoXPIZLL8XrQ4AQrairCcBD2VYbl7dwX4JMATeuvXO38u6+r+VbJ0682\nY8ImYrk+e5SDIavvdosiYXZwZ1cupT8mFzIBE/qmyHrUBkZBanjduZBpVEQyoj3k\nk2iABHOzGdT8M+0vabwbvsWhs4/B2tdzCHr7FhuaUqFgnbHIQsw3dnCW+YTbGkdo\nnQzI6fBVs90xQvSSAMnTBuJja2btKWr7qft+B3Sm6vrpYV7HzmMKSddRrvkrpH7D\nyzgL3gJAel8n9MKHoeZHIwSL0Bh7hiJz3KwmHkaaLqdj68twrJXOs03he41jn41e\nWWBBMasCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFJmlqCVh+7f915bt6AiTwyuit/0WMA0GCSqGSIb3DQEBCwUAA4IB\nAQCWzE1q/Wll20axcd6hTXhnWiLoqnvE9IWySJ1eQsVYqT1PByx+Mc6jQtHmC+9j\n6oQYO6tKZI/IVfuoIsEO2+NiAHPgQJarXG5zHmGcfjcbjZ5ox9Ac/65rQIDNhmHP\n7/E7nZU5T7O+YI+w6a7OcaLGQSqcg1ED1oWL5hyspAdI6sId2JHz80wc+HXtgHIL\nCz3xOJnjW+AqQtFd3HGY7heMRORfUkpujWO3uGI3w7ozlHscgPk1iUNWEFGB1ZLI\n7/NnhWcLg0RwygqqS0seh+sHLZGI3nezknKtC3VsCSz8gfcUdFmknFQDpgTimXz7\nu23VO8LqbegNTgToZVsJN4h2\n-----END CERTIFICATE-----\n",
                            "early_renewal_hours": "0",
                            "id": "70312779842187866270912982799515388143",
                            "is_ca_certificate": "true",
                            "key_algorithm": "RSA",
                            "private_key_pem": "cee41d088dfa52b2501cbc457395b9ffe0d9bebb",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-ca",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0",
                            "validity_end_time": "2019-04-28T11:08:47.054129548Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:47.054129548Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_self_signed_cert.kube-ca": {
                    "type": "tls_self_signed_cert",
                    "depends_on": [
                        "tls_private_key.kube-ca"
                    ],
                    "primary": {
                        "id": "210087139324411510359925273331579967097",
                        "attributes": {
                            "allowed_uses.#": "3",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "cert_signing",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFzCCAf+gAwIBAgIRAJ4NT65xp/tbMuCJoHPzVnkwDQYJKoZIhvcNAQELBQAw\nJTERMA8GA1UEChMIYm9vdGt1YmUxEDAOBgNVBAMTB2t1YmUtY2EwHhcNMTgwNDI4\nMTEwODQ4WhcNMTkwNDI4MTEwODQ4WjAlMREwDwYDVQQKEwhib290a3ViZTEQMA4G\nA1UEAxMHa3ViZS1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANqL\nYy9dY3/5Vtv4PhjUXwAx+H0ec/K1knHdgx1qkqbvWUVvi/XNhXOAzjL+NL9aMYWx\nO3r/ic7X55lJGecZ7hyuGpCbuysTLlbEtldH8QrUY4BkB5ESrc6Zsu04drIHhpwu\nN75IYyRb1WfoOUfAMBK3Kl5OvTy/mByO2lIHGUQjiPmq9KJz7A8wXrL+lKDcm7DF\nRju57bIpOuQ/DnBfn4UcWqiIf5eljNeG4sLhnDdiybcrGxHuR8Fopc8PMtuduu2H\nFZndLh/ybLQpFOGN1ZvxWvSvNXFUWcevBy10q7iL2k95IWhg7p2B6L3wKXpS+i16\nwo1hP6iNw5HKxAS/3ssCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFCaY4+IbAc1nvHrW6M7e6nJmMDyVMA0GCSqGSIb3\nDQEBCwUAA4IBAQAU+oMpeVsUpXwbojWV0HokJdiOFPLUBjy9pXMy3eXTqPA/jsSh\noud5muih8TjP1J6fWRfsOdTb60gh3CYLAOutlbSZb8863XFoyIsudf7STSDNIxCD\n2R8Ha86Fyt/z/jEuEVi5Q54p5VUSNwWDLwZv/1s/I7JyDfnLTqKy+e5l8KpCtZ3Y\nTQbMvpScK7ZiTlwhoovNOojm+bT+IMqTvriB73PPxkZa+qOQBlHlOU+zGweiKibk\n80lMQif20cxtoa3D5/S4DGLRdsGn12Rp8/MV9NEcI9Krpat/p1M95tcJTpp82MIG\ngg4nCUK8lOVG8TrSDiMHr5ZrN602Uqtw49EQ\n-----END CERTIFICATE-----\n",
                            "early_renewal_hours": "0",
                            "id": "210087139324411510359925273331579967097",
                            "is_ca_certificate": "true",
                            "key_algorithm": "RSA",
                            "private_key_pem": "0d419d8d7352502e29b3550dafeae986da719c4e",
                            "subject.#": "1",
                            "subject.0.common_name": "kube-ca",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "bootkube",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0",
                            "validity_end_time": "2019-04-28T11:08:48.257425039Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-28T11:08:48.257425039Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                }
            },
            "depends_on": []
        }
    ]
}
