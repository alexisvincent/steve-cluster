{
    "version": 3,
    "terraform_version": "0.11.7",
    "serial": 4,
    "lineage": "0ad1d3cf-81ed-3a71-582a-0e26a1725072",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.cl_gateway": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14da0d30cbeae02cd0eca5b9ca24a884865f97a0ebe85a1c4b65febe8f1c8a73",
                        "attributes": {
                            "id": "14da0d30cbeae02cd0eca5b9ca24a884865f97a0ebe85a1c4b65febe8f1c8a73",
                            "rendered": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/16\n        Address=10.10.0.1/16\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=10.10.0.1:8080 \\\n            -rpc-address=10.10.0.1:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,10.10.0.1 \\\n            --dhcp-range={{.interface_internal}},10.10.100.50,10.10.100.100,12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://10.10.0.1:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "template": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n${dnsmasq_conf}\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/${subnet_short}\n        Address=${gateway_address}/${subnet_short}\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=${gateway_address}:8080 \\\n            -rpc-address=${gateway_address}:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,${gateway_address} \\\n            --dhcp-range={{.interface_internal}},${dhcp_start},${dhcp_end},12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://${gateway_address}:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "vars.%": "7",
                            "vars.dhcp_end": "10.10.100.100",
                            "vars.dhcp_start": "10.10.100.50",
                            "vars.dnsmasq_conf": "          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n",
                            "vars.gateway_address": "10.10.0.1",
                            "vars.network_domain": "steve",
                            "vars.subnet_long": "255.255.0.0",
                            "vars.subnet_short": "16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "matchbox_group.install-reboot-n1": {
                    "type": "matchbox_group",
                    "depends_on": [],
                    "primary": {
                        "id": "install-reboot-n1",
                        "attributes": {
                            "id": "install-reboot-n1",
                            "metadata.%": "1",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1",
                            "name": "install-reboot-n1",
                            "profile": "steve-cached-container-linux-install-n1",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:AC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.install-reboot-vm1": {
                    "type": "matchbox_group",
                    "depends_on": [],
                    "primary": {
                        "id": "install-reboot-vm1",
                        "attributes": {
                            "id": "install-reboot-vm1",
                            "metadata.%": "1",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1",
                            "name": "install-reboot-vm1",
                            "profile": "steve-cached-container-linux-install-vm2",
                            "selector.%": "1",
                            "selector.mac": "08:00:27:FE:45:EF"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.n1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "n1",
                        "attributes": {
                            "id": "n1",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.1.1",
                            "metadata.hostname": "n1.steve",
                            "metadata.interface_external": "eno1",
                            "metadata.interface_internal": "eno2",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1",
                            "name": "n1",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:AC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.vm1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "vm1",
                        "attributes": {
                            "id": "vm1",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.10.1",
                            "metadata.hostname": "vm1.steve",
                            "metadata.interface_external": "enp0s8",
                            "metadata.interface_internal": "enp0s3",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1",
                            "name": "vm1",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "08:00:27:FE:45:EF",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.vm2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.gateway"
                    ],
                    "primary": {
                        "id": "vm2",
                        "attributes": {
                            "id": "vm2",
                            "metadata.%": "5",
                            "metadata.address_internal": "10.10.10.1",
                            "metadata.hostname": "vm1",
                            "metadata.interface_external": "enp0s8",
                            "metadata.interface_internal": "enp0s3",
                            "metadata.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1",
                            "name": "vm2",
                            "profile": "gateway",
                            "selector.%": "2",
                            "selector.mac": "08:00:27:3A:40:26",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.gateway": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cl_gateway"
                    ],
                    "primary": {
                        "id": "gateway",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "coreos.config.url=http://http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.1": "coreos.first_boot=yes",
                            "args.2": "console=tty0",
                            "args.3": "console=ttyS0",
                            "args.4": "coreos.autologin",
                            "container_linux_config": "# storage:\n#   disks:\n#   - device: /dev/sda\n#     wipe_table: true\n#     partitions:\n#     - label: ROOT\n#   filesystems:\n#   - mount:\n#       device: /dev/disk/by-partlabel/ROOT\n#       format: ext4\n#       create:\n#         force: true\n#         options: [-L, ROOT]\n\npasswd:\n  users:\n    - name: core\n      password_hash: \"$6$rounds=4096$LP6daiKkb6c$MGeaex639HmrfnglLpYsxPPruEovlzmkqgvbrouiDmv9XH/zEo7rM9ja/y9ur89OveohZ8VUf8NbdgjGRyEOi1\"\n      \n\nstorage:\n  files:\n    - path: /etc/dnsmasq.conf\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          address=/gateway.steve/10.10.0.1\n\n          address=/steve/10.10.1.2\n\n          address=/n1.steve/10.10.1.1\n          address=/n2.steve/10.10.1.2\n          address=/n3.steve/10.10.1.3\n          address=/n4.steve/10.10.1.4\n          address=/n5.steve/10.10.1.5\n          address=/n6.steve/10.10.1.6\n          address=/n7.steve/10.10.1.7\n          address=/n8.steve/10.10.1.8\n          address=/n9.steve/10.10.1.9\n          address=/n10.steve/10.10.1.10\n          address=/n11.steve/10.10.1.11\n          address=/n12.steve/10.10.1.12\n          address=/n13.steve/10.10.1.13\n\n          address=/vm1.steve/10.10.10.1\n          address=/vm2.steve/10.10.10.2\n          address=/vm3.steve/10.10.10.3\n          address=/vm4.steve/10.10.10.4\n          address=/vm5.steve/10.10.10.5\n          address=/vm6.steve/10.10.10.6\n          address=/vm7.steve/10.10.10.7\n          address=/vm8.steve/10.10.10.8\n          address=/vm9.steve/10.10.10.9\n          address=/vm10.steve/10.10.10.10\n\n          dhcp-host=00:22:19:8E:26:AC,10.10.1.1\n          dhcp-host=00:1E:4F:28:30:12,10.10.1.2\n          dhcp-host=00:22:19:AB:7E:78,10.10.1.3\n          dhcp-host=00:22:19:8E:15:77,10.10.1.4\n          dhcp-host=00:1E:C9:D0:AA:9E,10.10.1.5\n          dhcp-host=00:22:19:8E:26:B6,10.10.1.6\n          dhcp-host=00:22:19:8E:25:A1,10.10.1.7\n          dhcp-host=00:22:19:8E:26:00,10.10.1.8\n          dhcp-host=00:1E:C9:D0:AA:BC,10.10.1.9\n          dhcp-host=00:1A:A0:15:E3:76,10.10.1.10\n          dhcp-host=00:1D:09:05:9A:C0,10.10.1.11\n          dhcp-host=00:1A:A0:26:DA:B6,10.10.1.12\n          dhcp-host=00:1D:09:05:98:DC,10.10.1.13\n\n          dhcp-host=00:0C:29:90:A9:F3,10.10.10.1\n          dhcp-host=00:50:56:30:35:90,10.10.10.2\n          dhcp-host=00:50:56:30:35:91,10.10.10.3\n\n\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: {{.hostname}}\n\n    - path: /etc/check-asset-status.sh\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          if [ ! -e /opt/cluster-config/assets.ready.processed ]\n          then\n            while [ ! -e /opt/cluster-config/assets.ready ]\n            do\n              sleep 1\n            done\n          else\n            touch /opt/cluster-config/assets.ready\n          fi\n\n    # - path: /root/.ssh/known_hosts\n    #   filesystem: root\n    #   mode: 0644\n    #   contents:\n    #     inline: \"\"\n\n    # - path: /root/.ssh/id_rsa\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper\n\n    # - path: /root/.ssh/id_rsa.pub\n    #   filesystem: root\n    #   mode: 0600\n    #   contents:\n    #     remote:\n    #       url: http://{|network.bootstrapper.address.internal|}:8080/assets/keys/bootstrapper.pub\n\nnetworkd:\n  units:\n    - name: gateway.network\n      contents: |\n        [Match]\n        Name={{.interface_internal}}\n\n        [Network]\n        Address={{.address_internal}}/16\n        Address=10.10.0.1/16\n        DNS={{.address_internal}}\n        IPForward=ipv4\n        IPMasquerade=yes\n\nsystemd:\n  units:\n    - name: assets.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for assets to be pushed (assets.path)\n\n        [Service]\n        Type=oneshot\n        ExecStartPre=/usr/bin/bash /etc/check-asset-status.sh\n        ExecStart=/usr/bin/mv /opt/cluster-config/assets.ready /opt/cluster-config/assets.ready.processed\n        RemainAfterExit=true\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: ssh-agent.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run ssh-agent\n\n        [Service]\n        ExecStart=/usr/bin/ssh-agent\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: matchbox.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=CoreOS matchbox Server\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill matchbox\n        ExecStartPre=-/usr/bin/docker rm matchbox\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/matchbox\n        ExecStart=/usr/bin/docker run --name=matchbox --net=host \\\n          -v /opt/cluster-config/matchbox:/var/lib/matchbox:Z \\\n          -v /opt/cluster-config/matchbox/etc/tls:/etc/matchbox:Z,ro \\\n          quay.io/coreos/matchbox \\\n            -address=10.10.0.1:8080 \\\n            -rpc-address=10.10.0.1:8081 \\\n            -log-level=debug \\\n            -assets-path=/var/lib/matchbox/assets\n        ExecStop=/usr/bin/docker stop matchbox\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: dnsmasq.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Run dnsmasq, providing dhcp, dns and network book\n        After=docker.service assets.service\n        Requires=docker.service assets.service\n\n        [Service]\n        ExecStartPre=-/usr/bin/docker kill dnsmasq\n        ExecStartPre=-/usr/bin/docker rm dnsmasq\n        ExecStartPre=/usr/bin/docker pull quay.io/coreos/dnsmasq\n        ExecStart=/usr/bin/docker run \\\n          --name=dnsmasq --cap-add=NET_ADMIN --net=host \\\n          -v /etc/dnsmasq.conf:/etc/dnsmasq.conf quay.io/coreos/dnsmasq -d -q \\\n            --interface={{.interface_internal}} \\\n            --dhcp-option=3,10.10.0.1 \\\n            --dhcp-range={{.interface_internal}},10.10.100.50,10.10.100.100,12h \\\n            --enable-tftp --tftp-root=/var/lib/tftpboot \\\n            --dhcp-userclass=set:ipxe,iPXE \\\n            --dhcp-boot=tag:#ipxe,undionly.kpxe \\\n            --dhcp-boot=tag:ipxe,http://10.10.0.1:8080/boot.ipxe \\\n            --log-queries \\\n            --log-dhcp\n        ExecStop=/usr/bin/docker stop dnsmasq\n        Restart=always\n\n        [Install]\n        WantedBy=multi-user.target\n",
                            "id": "gateway",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "gateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "kubernetes"
            ],
            "outputs": {
                "kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n"
                }
            },
            "resources": {
                "data.template_file.cached-container-linux-install-configs.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.10": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.3": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.4": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.5": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.6": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.7": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.8": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.cached-container-linux-install-configs.9": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                        "attributes": {
                            "id": "246c7623dd823197d3d47de2d27cfc19553a22d806b977dbc4c3bb774b8257c5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "-b http://10.10.0.1:8080/assets/coreos",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.10": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.3": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.4": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.5": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.6": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.7": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.8": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.container-linux-install-configs.9": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                        "attributes": {
                            "id": "97a84f7bf58f7d2f889217c7d4078ab2c4043a631c37e7860011c1ef0a8ad0b1",
                            "rendered": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "template": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"${ignition_endpoint}?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d ${install_disk} \\\n            -C ${container_linux_channel} \\\n            -V ${container_linux_version} \\\n            -o \"${container_linux_oem}\" \\\n            ${baseurl_flag} \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"${ssh_authorized_key}\"\n",
                            "vars.%": "7",
                            "vars.baseurl_flag": "",
                            "vars.container_linux_channel": "stable",
                            "vars.container_linux_oem": "",
                            "vars.container_linux_version": "1688.4.0",
                            "vars.ignition_endpoint": "http://10.10.0.1:8080/ignition",
                            "vars.install_disk": "/dev/sda",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.controller-configs": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "b1065810b266e924891d328c785ac6f6128d3ca769e833963f990f37da5a3110",
                        "attributes": {
                            "id": "b1065810b266e924891d328c785ac6f6128d3ca769e833963f990f37da5a3110",
                            "rendered": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=n2\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://n2.steve:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://n2.steve:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=n2=https://n2.steve:2380\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n2.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n2.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $RKT_OPTS \\\n            ${BOOTKUBE_ACI}:${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n",
                            "template": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=${etcd_name}\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://${domain_name}:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://${domain_name}:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=${etcd_initial_cluster}\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"$${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"$${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"$${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $$RKT_OPTS \\\n            $${BOOTKUBE_ACI}:$${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n",
                            "vars.%": "7",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n2.steve",
                            "vars.etcd_initial_cluster": "n2=https://n2.steve:2380",
                            "vars.etcd_name": "n2",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.0": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "edfc08e5b3c308493a81d236848fd9a466cafba51283190e65f55e71a2387bf5",
                        "attributes": {
                            "id": "edfc08e5b3c308493a81d236848fd9a466cafba51283190e65f55e71a2387bf5",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n3.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n3.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n3.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.1": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "af9773a8126442fcb9c3616a5900ec5404c4aee95959fbfad88d76686a010b70",
                        "attributes": {
                            "id": "af9773a8126442fcb9c3616a5900ec5404c4aee95959fbfad88d76686a010b70",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n4.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n4.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n4.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.2": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "8f6e3a52dbda32694bb89c3109dcc69c326a32188c3519b4c53064b4b0cd7a2c",
                        "attributes": {
                            "id": "8f6e3a52dbda32694bb89c3109dcc69c326a32188c3519b4c53064b4b0cd7a2c",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n5.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n5.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n5.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.3": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "1125121c8846e902183cd4fea2888718ab01f2971723a6c2a85047ade6cd0529",
                        "attributes": {
                            "id": "1125121c8846e902183cd4fea2888718ab01f2971723a6c2a85047ade6cd0529",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n6.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n6.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n6.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.4": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "6f3d55cb157d458db4c03476202636013fdbfd2022b2b3d36e6f475e5fa06b84",
                        "attributes": {
                            "id": "6f3d55cb157d458db4c03476202636013fdbfd2022b2b3d36e6f475e5fa06b84",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n7.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n7.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n7.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.5": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "64d97da706eb2194e409e195a91ba02b324ad86b7afdd697c0065841bc3756d7",
                        "attributes": {
                            "id": "64d97da706eb2194e409e195a91ba02b324ad86b7afdd697c0065841bc3756d7",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n8.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n8.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n8.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.6": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "c8e346430fe778c1c77e022e49fbfb73a29823acfe645987ec32b2316fe6f393",
                        "attributes": {
                            "id": "c8e346430fe778c1c77e022e49fbfb73a29823acfe645987ec32b2316fe6f393",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n9.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n9.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n9.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.7": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "3c5d50a1b0f3ce9c5a90d5048cdf9541e4bb1ce9770254800122ce7a1b89831c",
                        "attributes": {
                            "id": "3c5d50a1b0f3ce9c5a90d5048cdf9541e4bb1ce9770254800122ce7a1b89831c",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n11.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n11.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n11.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.8": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "99d5145cc3dc7ec3974ed7285c0bbd9add63ecc4da666da14e2fd20715910044",
                        "attributes": {
                            "id": "99d5145cc3dc7ec3974ed7285c0bbd9add63ecc4da666da14e2fd20715910044",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n12.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n12.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n12.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.worker-configs.9": {
                    "type": "template_file",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "edd7d78a0b2f512bf6089cd8497cc1ca3e0b3bab934ce2d08080b7d97543261b",
                        "attributes": {
                            "id": "edd7d78a0b2f512bf6089cd8497cc1ca3e0b3bab934ce2d08080b7d97543261b",
                            "rendered": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n13.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n13.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "template": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=${k8s_dns_service_ip} \\\n          --cluster_domain=${cluster_domain_suffix} \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=${domain_name} \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          ${domain_name}\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  ${networkd_content}\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ${ssh_authorized_key}\n\n",
                            "vars.%": "5",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.domain_name": "n13.steve",
                            "vars.k8s_dns_service_ip": "10.3.0.10",
                            "vars.networkd_content": "",
                            "vars.ssh_authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "matchbox_group.container-linux-install.0": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n2",
                        "attributes": {
                            "id": "container-linux-install-n2",
                            "name": "container-linux-install-n2",
                            "profile": "steve-cached-container-linux-install-n2",
                            "selector.%": "1",
                            "selector.mac": "00:1E:4F:28:30:12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n3",
                        "attributes": {
                            "id": "container-linux-install-n3",
                            "name": "container-linux-install-n3",
                            "profile": "steve-cached-container-linux-install-n3",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:AB:7E:78"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.10": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n13",
                        "attributes": {
                            "id": "container-linux-install-n13",
                            "name": "container-linux-install-n13",
                            "profile": "steve-cached-container-linux-install-n13",
                            "selector.%": "1",
                            "selector.mac": "00:1D:09:05:98:DC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n4",
                        "attributes": {
                            "id": "container-linux-install-n4",
                            "name": "container-linux-install-n4",
                            "profile": "steve-cached-container-linux-install-n4",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:15:77"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.3": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n5",
                        "attributes": {
                            "id": "container-linux-install-n5",
                            "name": "container-linux-install-n5",
                            "profile": "steve-cached-container-linux-install-n5",
                            "selector.%": "1",
                            "selector.mac": "00:1E:C9:D0:AA:9E"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.4": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n6",
                        "attributes": {
                            "id": "container-linux-install-n6",
                            "name": "container-linux-install-n6",
                            "profile": "steve-cached-container-linux-install-n6",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:B6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.5": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n7",
                        "attributes": {
                            "id": "container-linux-install-n7",
                            "name": "container-linux-install-n7",
                            "profile": "steve-cached-container-linux-install-n7",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:25:A1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.6": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n8",
                        "attributes": {
                            "id": "container-linux-install-n8",
                            "name": "container-linux-install-n8",
                            "profile": "steve-cached-container-linux-install-n8",
                            "selector.%": "1",
                            "selector.mac": "00:22:19:8E:26:00"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.7": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n9",
                        "attributes": {
                            "id": "container-linux-install-n9",
                            "name": "container-linux-install-n9",
                            "profile": "steve-cached-container-linux-install-n9",
                            "selector.%": "1",
                            "selector.mac": "00:1E:C9:D0:AA:BC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.8": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n11",
                        "attributes": {
                            "id": "container-linux-install-n11",
                            "name": "container-linux-install-n11",
                            "profile": "steve-cached-container-linux-install-n11",
                            "selector.%": "1",
                            "selector.mac": "00:1D:09:05:9A:C0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.container-linux-install.9": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.cached-container-linux-install.*",
                        "matchbox_profile.container-linux-install.*"
                    ],
                    "primary": {
                        "id": "container-linux-install-n12",
                        "attributes": {
                            "id": "container-linux-install-n12",
                            "name": "container-linux-install-n12",
                            "profile": "steve-cached-container-linux-install-n12",
                            "selector.%": "1",
                            "selector.mac": "00:1A:A0:26:DA:B6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.controller": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.controllers.*"
                    ],
                    "primary": {
                        "id": "steve-n2",
                        "attributes": {
                            "id": "steve-n2",
                            "name": "steve-n2",
                            "profile": "steve-controller-n2",
                            "selector.%": "2",
                            "selector.mac": "00:1E:4F:28:30:12",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.0": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n3",
                        "attributes": {
                            "id": "steve-n3",
                            "name": "steve-n3",
                            "profile": "steve-worker-n3",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:AB:7E:78",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.1": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n4",
                        "attributes": {
                            "id": "steve-n4",
                            "name": "steve-n4",
                            "profile": "steve-worker-n4",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:15:77",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.2": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n5",
                        "attributes": {
                            "id": "steve-n5",
                            "name": "steve-n5",
                            "profile": "steve-worker-n5",
                            "selector.%": "2",
                            "selector.mac": "00:1E:C9:D0:AA:9E",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.3": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n6",
                        "attributes": {
                            "id": "steve-n6",
                            "name": "steve-n6",
                            "profile": "steve-worker-n6",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:B6",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.4": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n7",
                        "attributes": {
                            "id": "steve-n7",
                            "name": "steve-n7",
                            "profile": "steve-worker-n7",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:25:A1",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.5": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n8",
                        "attributes": {
                            "id": "steve-n8",
                            "name": "steve-n8",
                            "profile": "steve-worker-n8",
                            "selector.%": "2",
                            "selector.mac": "00:22:19:8E:26:00",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.6": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n9",
                        "attributes": {
                            "id": "steve-n9",
                            "name": "steve-n9",
                            "profile": "steve-worker-n9",
                            "selector.%": "2",
                            "selector.mac": "00:1E:C9:D0:AA:BC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.7": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n11",
                        "attributes": {
                            "id": "steve-n11",
                            "name": "steve-n11",
                            "profile": "steve-worker-n11",
                            "selector.%": "2",
                            "selector.mac": "00:1D:09:05:9A:C0",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.8": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n12",
                        "attributes": {
                            "id": "steve-n12",
                            "name": "steve-n12",
                            "profile": "steve-worker-n12",
                            "selector.%": "2",
                            "selector.mac": "00:1A:A0:26:DA:B6",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_group.worker.9": {
                    "type": "matchbox_group",
                    "depends_on": [
                        "matchbox_profile.workers.*"
                    ],
                    "primary": {
                        "id": "steve-n13",
                        "attributes": {
                            "id": "steve-n13",
                            "name": "steve-n13",
                            "profile": "steve-worker-n13",
                            "selector.%": "2",
                            "selector.mac": "00:1D:09:05:98:DC",
                            "selector.os": "installed"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n2",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n2",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n3",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n3",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.10": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n13",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n13",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n4",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n4",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n5",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n5",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n6",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n6",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n7",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n7",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n8",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n8",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n9",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n9",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n11",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n11",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.cached-container-linux-install.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.cached-container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-cached-container-linux-install-n12",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n            -b http://10.10.0.1:8080/assets/coreos \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-cached-container-linux-install-n12",
                            "initrd.#": "1",
                            "initrd.0": "/assets/coreos/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "/assets/coreos/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-cached-container-linux-install-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n2",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n2",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n3",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n3",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.10": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n13",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n13",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n4",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n4",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n5",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n5",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n6",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n6",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n7",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n7",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n8",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n8",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n9",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n9",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n11",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n11",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.container-linux-install.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.container-linux-install-configs.*"
                    ],
                    "primary": {
                        "id": "steve-container-linux-install-n12",
                        "attributes": {
                            "args.#": "5",
                            "args.0": "initrd=coreos_production_pxe_image.cpio.gz",
                            "args.1": "coreos.config.url=http://10.10.0.1:8080/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
                            "args.2": "coreos.first_boot=yes",
                            "args.3": "console=tty0",
                            "args.4": "console=ttyS0",
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: installer.service\n      enable: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\n    # Avoid using the standard SSH port so terraform apply cannot SSH until\n    # post-install. But admins may SSH to debug disk install problems.\n    # After install, sshd will use port 22 and users/terraform can connect.\n    - name: sshd.socket\n      dropins:\n        - name: 10-sshd-port.conf\n          contents: |\n            [Socket]\n            ListenStream=\n            ListenStream=2222\nstorage:\n  files:\n    - path: /opt/installer\n      filesystem: root\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl --retry 10 \"http://10.10.0.1:8080/ignition?{{.request.raw_query}}\u0026os=installed\" -o ignition.json\n          coreos-install \\\n            -d /dev/sda \\\n            -C stable \\\n            -V 1688.4.0 \\\n            -o \"\" \\\n             \\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\"\n",
                            "id": "steve-container-linux-install-n12",
                            "initrd.#": "1",
                            "initrd.0": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe_image.cpio.gz",
                            "kernel": "http://stable.release.core-os.net/amd64-usr/1688.4.0/coreos_production_pxe.vmlinuz",
                            "name": "steve-container-linux-install-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.controllers": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.controller-configs.*"
                    ],
                    "primary": {
                        "id": "steve-controller-n2",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: etcd-member.service\n      enable: true\n      dropins:\n        - name: 40-etcd-cluster.conf\n          contents: |\n            [Service]\n            Environment=\"ETCD_IMAGE_TAG=v3.3.3\"\n            Environment=\"ETCD_NAME=n2\"\n            Environment=\"ETCD_ADVERTISE_CLIENT_URLS=https://n2.steve:2379\"\n            Environment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://n2.steve:2380\"\n            Environment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\n            Environment=\"ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380\"\n            Environment=\"ETCD_LISTEN_METRICS_URLS=http://0.0.0.0:2381\"\n            Environment=\"ETCD_INITIAL_CLUSTER=n2=https://n2.steve:2380\"\n            Environment=\"ETCD_STRICT_RECONFIG_CHECK=true\"\n            Environment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\n            Environment=\"ETCD_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/server-ca.crt\"\n            Environment=\"ETCD_CERT_FILE=/etc/ssl/certs/etcd/server.crt\"\n            Environment=\"ETCD_KEY_FILE=/etc/ssl/certs/etcd/server.key\"\n            Environment=\"ETCD_CLIENT_CERT_AUTH=true\"\n            Environment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/etcd/peer-ca.crt\"\n            Environment=\"ETCD_PEER_CERT_FILE=/etc/ssl/certs/etcd/peer.crt\"\n            Environment=\"ETCD_PEER_KEY_FILE=/etc/ssl/certs/etcd/peer.key\"\n            Environment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n        RequiredBy=etcd-member.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n2.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/master \\\n          --node-labels=node-role.kubernetes.io/controller=\"true\" \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=10\n        [Install]\n        WantedBy=multi-user.target\n    - name: bootkube.service\n      contents: |\n        [Unit]\n        Description=Bootstrap a Kubernetes control plane with a temp api-server\n        ConditionPathExists=!/opt/bootkube/init_bootkube.done\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        WorkingDirectory=/opt/bootkube\n        ExecStart=/opt/bootkube/bootkube-start\n        ExecStartPost=/bin/touch /opt/bootkube/init_bootkube.done\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n2.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\n    - path: /opt/bootkube/bootkube-start\n      filesystem: root\n      mode: 0544\n      user:\n        id: 500\n      group:\n        id: 500\n      contents:\n        inline: |\n          #!/bin/bash\n          # Wrapper for bootkube start\n          set -e\n          # Move experimental manifests\n          [ -n \"$(ls /opt/bootkube/assets/manifests-*/* 2\u003e/dev/null)\" ] \u0026\u0026 mv /opt/bootkube/assets/manifests-*/* /opt/bootkube/assets/manifests \u0026\u0026 rm -rf /opt/bootkube/assets/manifests-*\n          BOOTKUBE_ACI=\"${BOOTKUBE_ACI:-quay.io/coreos/bootkube}\"\n          BOOTKUBE_VERSION=\"${BOOTKUBE_VERSION:-v0.12.0}\"\n          BOOTKUBE_ASSETS=\"${BOOTKUBE_ASSETS:-/opt/bootkube/assets}\"\n          exec /usr/bin/rkt run \\\n            --trust-keys-from-https \\\n            --volume assets,kind=host,source=$BOOTKUBE_ASSETS \\\n            --mount volume=assets,target=/assets \\\n            --volume bootstrap,kind=host,source=/etc/kubernetes \\\n            --mount volume=bootstrap,target=/etc/kubernetes \\\n            $RKT_OPTS \\\n            ${BOOTKUBE_ACI}:${BOOTKUBE_VERSION} \\\n            --net=host \\\n            --dns=host \\\n            --exec=/bootkube -- start --asset-dir=/assets \"$@\"\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n",
                            "id": "steve-controller-n2",
                            "name": "steve-controller-n2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.0": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n3",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n3.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n3.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n3",
                            "name": "steve-worker-n3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.1": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n4",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n4.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n4.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n4",
                            "name": "steve-worker-n4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.2": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n5",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n5.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n5.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n5",
                            "name": "steve-worker-n5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.3": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n6",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n6.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n6.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n6",
                            "name": "steve-worker-n6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.4": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n7",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n7.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n7.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n7",
                            "name": "steve-worker-n7"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.5": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n8",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n8.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n8.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n8",
                            "name": "steve-worker-n8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.6": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n9",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n9.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n9.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n9",
                            "name": "steve-worker-n9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.7": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n11",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n11.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n11.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n11",
                            "name": "steve-worker-n11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.8": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n12",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n12.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n12.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n12",
                            "name": "steve-worker-n12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "matchbox_profile.workers.9": {
                    "type": "matchbox_profile",
                    "depends_on": [
                        "data.template_file.worker-configs.*"
                    ],
                    "primary": {
                        "id": "steve-worker-n13",
                        "attributes": {
                            "container_linux_config": "---\nsystemd:\n  units:\n    - name: docker.service\n      enable: true\n    - name: locksmithd.service\n      mask: true\n    - name: kubelet.path\n      enable: true\n      contents: |\n        [Unit]\n        Description=Watch for kubeconfig\n        [Path]\n        PathExists=/etc/kubernetes/kubeconfig\n        [Install]\n        WantedBy=multi-user.target\n    - name: wait-for-dns.service\n      enable: true\n      contents: |\n        [Unit]\n        Description=Wait for DNS entries\n        Wants=systemd-resolved.service\n        Before=kubelet.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=true\n        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf \u003e /dev/null; do sleep 1; done'\n        [Install]\n        RequiredBy=kubelet.service\n    - name: kubelet.service\n      contents: |\n        [Unit]\n        Description=Kubelet via Hyperkube\n        Wants=rpc-statd.service\n        [Service]\n        EnvironmentFile=/etc/kubernetes/kubelet.env\n        Environment=\"RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \\\n          --volume=resolv,kind=host,source=/etc/resolv.conf \\\n          --mount volume=resolv,target=/etc/resolv.conf \\\n          --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n          --mount volume=var-lib-cni,target=/var/lib/cni \\\n          --volume opt-cni-bin,kind=host,source=/opt/cni/bin \\\n          --mount volume=opt-cni-bin,target=/opt/cni/bin \\\n          --volume var-log,kind=host,source=/var/log \\\n          --mount volume=var-log,target=/var/log \\\n          --insecure-options=image\"\n        ExecStartPre=/bin/mkdir -p /opt/cni/bin\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests\n        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d\n        ExecStartPre=/bin/mkdir -p /var/lib/cni\n        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/volumeplugins\n        ExecStartPre=/usr/bin/bash -c \"grep 'certificate-authority-data' /etc/kubernetes/kubeconfig | awk '{print $2}' | base64 -d \u003e /etc/kubernetes/ca.crt\"\n        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid\n        ExecStart=/usr/lib/coreos/kubelet-wrapper \\\n          --allow-privileged \\\n          --anonymous-auth=false \\\n          --client-ca-file=/etc/kubernetes/ca.crt \\\n          --cluster_dns=10.3.0.10 \\\n          --cluster_domain=cluster.local \\\n          --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n          --exit-on-lock-contention \\\n          --hostname-override=n13.steve \\\n          --kubeconfig=/etc/kubernetes/kubeconfig \\\n          --lock-file=/var/run/lock/kubelet.lock \\\n          --network-plugin=cni \\\n          --node-labels=node-role.kubernetes.io/node \\\n          --pod-manifest-path=/etc/kubernetes/manifests \\\n          --volume-plugin-dir=/var/lib/kubelet/volumeplugins\n        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid\n        Restart=always\n        RestartSec=5\n        [Install]\n        WantedBy=multi-user.target\n\nstorage:\n  files:\n    - path: /etc/kubernetes/kubelet.env\n      filesystem: root\n      mode: 0644\n      contents:\n        inline: |\n          KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube\n          KUBELET_IMAGE_TAG=v1.10.1\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0644\n      contents:\n        inline:\n          n13.steve\n    - path: /etc/sysctl.d/max-user-watches.conf\n      filesystem: root\n      contents:\n        inline: |\n          fs.inotify.max_user_watches=16184\nnetworkd:\n  \npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys:\n        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/Ak8O/7QhhWnHfOOZ4/t79Hj5zT52uYdPzFKGPn57eyqJ3rDpo8qr7NbLkgWK1cqLRIzAFhY18WUx24/gAzHREQP3tMd2yXtb91wEy2Hjs3RC9Kl7b3RenEqpynKSkShZvVahgq3xWNUrg4ElTd3GTCS9jouaOxbtZTKnulYIiW6UjU4ugCLEKqJUqL/X/I82pbzGYN/i53uK8PySgmhvkmwgfvJnEHrzw2OGlPocx3+bItxg7bcsiCkEkAeNwq9XUsqsHGQ8zO0esP6z86Cgb02doh5C0xqfYR3rDmqAH9ATMwlhq1rsGO57xukdHHBaFESCb+DmOTUrUkJCyBPv core@n1\n\n",
                            "id": "steve-worker-n13",
                            "name": "steve-worker-n13"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.matchbox"
                },
                "null_resource.copy-controller-secrets": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "9060408882399729626",
                        "attributes": {
                            "id": "9060408882399729626"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.0": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "78199995145544572",
                        "attributes": {
                            "id": "78199995145544572"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.1": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "1866167217281293252",
                        "attributes": {
                            "id": "1866167217281293252"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.2": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "417375391364124956",
                        "attributes": {
                            "id": "417375391364124956"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.3": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "5839389040603822786",
                        "attributes": {
                            "id": "5839389040603822786"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.4": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "29566016019485438",
                        "attributes": {
                            "id": "29566016019485438"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.5": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "3197122930918232322",
                        "attributes": {
                            "id": "3197122930918232322"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.6": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "8772305861840266136",
                        "attributes": {
                            "id": "8772305861840266136"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.7": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "7992071326114026848",
                        "attributes": {
                            "id": "7992071326114026848"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                },
                "null_resource.copy-worker-secrets.8": {
                    "type": "null_resource",
                    "depends_on": [
                        "module.bootkube"
                    ],
                    "primary": {
                        "id": "4056680345207146829",
                        "attributes": {
                            "id": "4056680345207146829"
                        },
                        "meta": {},
                        "tainted": true
                    },
                    "deposed": [],
                    "provider": "provider.null.default"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "kubernetes",
                "bootkube"
            ],
            "outputs": {
                "ca_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                },
                "content_hash": {
                    "sensitive": false,
                    "type": "string",
                    "value": "61abddb81f6fe7037b77ae9b803aecac85080f18"
                },
                "etcd_ca_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQQ/pcBuJNVpuB/EX8y5TQHTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMw\nOFoXDTE5MDQyNTExMjMwOFowITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMa9BNlYiOLU1i5R\niiEYEfZ5oX3F5b3/WjvmPlQCF66218ACo6XMYXf8srOg6LFJvvUye2tOcsNMYt8s\nyALOZnq8++saY+SyWHNgd95/Mxd9h9VlCaEjrG5HFBTKflNlG87P87Ozjm2ZfjHt\n6VvTdwVmlKCYezoKH4EGjYAq4Y3SzjsX3P34HjzhD1eAdN5Wzc6mkvosH8Y6LdFx\nEmKfGB7Ce0+0pp8Ic8qr91hhIgWO7ISQDcTUdiI2oORS/fzuIiNL/V/PXur3+suA\nPPusPnn051uv8b682iRBzvaSA1igQvK2fQYBs6c/gJBXOLVS5X824u+qc7eElurz\n7AuP8nECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFCX16IE66koRPOzdQ1Wamw1SdNoYMA0GCSqGSIb3DQEBCwUAA4IB\nAQCitAxfiv2jqbdt/XjmCr2KkPR7BJY4lfgLQPKxoP3gX7tKzPyWU+PWy+Yg+ZdC\n1TSJt9D6Glp3hqQ+3iVPXyxpZ8Q4cS9xwGqPsNKDJxZeF2P4C86wCmq9t1WEdWFK\nwlMx8IBndmi2F2fKs08HmtvkffmAmCjjTr48xyjGYVjIEj4+FYaumn4/dFdO93oS\nxhZt4ARrnVa5WnI2uisLHMWjCKiVNmyWm1BrcKs7wRbvLopcPwmZOvSvP9PCy0FN\nW30m4kUvobb9fl7xW03Dmeg5+X2ngZa9gwMLLokH17o2qys6u6p8XFTw1EUU7Abp\nnY4V+ERQNhQyL09OYfzIawVV\n-----END CERTIFICATE-----\n"
                },
                "etcd_client_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQMLsoTMWsys0G98j/UvwrFTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMx\nMloXDTE5MDQyNTExMjMxMlowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2cXltfiK6\nHcwPUlXolx4Ox6vEcwhl4kJpfPtkvWh+3GG4/YhjbAiKVRTaWNEOdAZVSoS6SW9H\nOm44IIhyNOy+GOevRSwOGyz5S53kYL2PtqURh1pvT3rMxsk9u9f2CkLDBzfQ72fm\n74M+OZL8DzEtfh70ZNoQYHW4gCADjjOYkPuvEzl/wgczFKBPflrGhsHsSatk+A63\nyanvSL/fBbB15ARmPJgIBhnXCPm9nWiPTMPCNq9i1CO/SYj77E8GO7vzVOtbEqN3\n90BDoI0WXDmYoRME2PCw6B0uspTGWbD4Nbk5sgsEVekcJCwObIo3xcYb1EpdV3dg\nGHOamYPU2AFBAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX1\n6IE66koRPOzdQ1Wamw1SdNoYMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBABnGsEP25S7eXXzHE4mswZ3utzjz\nu+ubXg+RuU19e6KzkU6Lr3t6kxg1bX52sPuHb3TiZa5maDw6A1XrIxBpFjk+mCOY\npPWF0/9+tup9aQ6UATCPNzpRgbMFGJ2ZBIFQWmmZTC+ykH1MzZnGwoytrn7GCyLs\n1gYaqFRh5ShekxPUVUOkh90yGFNvFrFTD/tJJqbW8nKFTNei/kAxqD9R1rdAIho5\nhI2T9iKkT0WbFUHy4SFJsjnPAVQgIEfhgxcTkOv3surNYO2LA1YtaU1UCU3P5JJS\nLi0FCEy2lKffNbmU8nkBGziDntov6yxM83kL6WzwL+2uWewGYGWKbmf3Y+M=\n-----END CERTIFICATE-----\n"
                },
                "etcd_client_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtnF5bX4iuh3MD1JV6JceDserxHMIZeJCaXz7ZL1oftxhuP2I\nY2wIilUU2ljRDnQGVUqEuklvRzpuOCCIcjTsvhjnr0UsDhss+Uud5GC9j7alEYda\nb096zMbJPbvX9gpCwwc30O9n5u+DPjmS/A8xLX4e9GTaEGB1uIAgA44zmJD7rxM5\nf8IHMxSgT35axobB7EmrZPgOt8mp70i/3wWwdeQEZjyYCAYZ1wj5vZ1oj0zDwjav\nYtQjv0mI++xPBju781TrWxKjd/dAQ6CNFlw5mKETBNjwsOgdLrKUxlmw+DW5ObIL\nBFXpHCQsDmyKN8XGG9RKXVd3YBhzmpmD1NgBQQIDAQABAoIBAQCVBgOFqG59UDGK\nolqB7k4jDH4FrWDCuBo/SFOgagac+S7piE6Lx4cCV5T89WduQt+Zc5EPCUTYDaZS\nOmC5yPlIHdfBluLxcsk9qMKD9XFhnnMe6ky4d1d7RTTENFenJaJ6475379YTELlH\nbofdVBt7aXWnc2mbzu7Zke6UeOc0SnZr+CNzJhFoUJZC+s+UvMdk0HlUg0gHe4Od\naGHcpoIXmZ1mcDuz+Zgbe7X5K/weV4YU8OTw5n5sCUm2oaH9TQLr7C3gEKUzG+zH\n7toNQv1+lUFxEubCAc1dXTf+h2eQbJFMMjCvbEdh28DiSTyzPi86CT/EPDc8HrSa\nfz0wOopxAoGBAMS3+GCBrF80TV2zgL0zalPa1AGmbb2JZt6yAdvURB6RRB9hm+Yn\n3AN+OI0CFBytk3HdVmbC/FzsAhPCPiIMvr7iNcfGSKvo9oUAP8Y4dBcbxSvqem/a\n7vhw8VGJMRRXN0ykeNIRmzo+7fxmArJ+lmkZoqFfhlolHlnLr3dl1Dd/AoGBAO1s\nN8rNae9QnufE3RqBs8G/tDkSPqkLoZQpzcpKL26qvg5MMx15TY01MoKN4sFg5L14\nzbhFMcfYnhCDSnlD3ZZvy0oCevCsZfsAOAEEhdGkYozEE+bnCIuP7eIuTGksYmbg\n/rQSenRWzFCHye5jflps1Z+EAU1RhT1mrrZz1ic/AoGBAJ6jyd5x1IM2V4nP/2sU\n8pNLLptiDq/CBb5jiRIxfPm1pl00Rxf1Xv1GJe65FWUHKZeyqkHWztNU1FwA0kB9\nTLn9DOfdZK+WAG/DgqqkziHwmDJRNonL4dlio4lgfL7tkr/xBypJXog7RYq87UHq\nyftZ3AgNU/iQZIh/tTIxYVGbAoGAR+HV2n7qrdwY4E8IKjhOtkBWTlkpw4CUAQnP\nFonzZmwncqi7aRcK1c/fZQuUNbwiRQNINZwtgDYjVRiK+cAEXMGoKNYrZqarkZz1\nV8mIwnokpD3RUL1uJuMCwNIHrGgVutQwCVD25jZJUbBrANP6s2H0I4GR61jdIEPw\nbakQk30CgYAetVxpx5PY33Zm6zxQ+JarZ7OMBRfJZ4WdB2JQp0ycePRQi5JQ5Xm/\n/8/R9k0gcgOgwYwW5a30i8tu3acQYktgN60/tNXu7k1o0vD/qWUM9QIs11ssyAPS\n6MMCXl9hOwjaY8X37dCk1EnqJ1rfe8k5DTrdtfLNGQozBXD8m9BovQ==\n-----END RSA PRIVATE KEY-----\n"
                },
                "etcd_peer_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAL8ala4juLavNCJHPGRlxZ8wDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTJaFw0xOTA0MjUxMTIzMTJaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKPh0FrlbiEO\nQncZfcM8ofqjGDHTlCFchzaPzpMyd+kQIsdC5gaoQaFm4HplxtgDnCppGHk5iPF9\n6zTNNHJb2hwnfRB23MzHsSYcTGjRsenXH5kbHQdItTfp6oGpenO4vOh+UutAHM8x\nJV4wrREYYD92x1OK3dU72hzlPMQODUBQABOv0rIRrOIE9Z7JPMAMcIhjRqYL84ZM\nZkPyEWon7gCYIA/5UhzPX+E8EGwzUm8ZY4YE+TB+bNUE1dbVWNR9q0jD9dvjOtLm\nKgV3V9MAh1U349UWcq1LAPuCt5M4VYf0TR1vjf0Kn+0x+227azZif4bwdqyNcLBi\nMOBZXgqsLIsCAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX16IE6\n6koRPOzdQ1Wamw1SdNoYMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQCMlYq4ORXyvUd3lUpmOd2geGVrny14fKcAY2BGH4gUNy70kGlN3qTV\n+CPhQsdwSUk4DpbK594MbYznuPmCL3pZ10tYsns0GMXaOIRK8q0VWhc3m/AbSV2N\nyQr9w88ygNE7h+UhaobPH4UloMZZZMa1uoZsf2K8kPnxNWMQs5PwyuIQCT74bJop\nmhH5lREGqo9wDZr42jo1M7W4wh83WBXVZIXVVsBMjwttCkQJy2Nq+hFvai0x7XT3\nm0DC68+xvmj62wpSSLNYtGTOIgSs+7WA9r5bAoaBADLHxDKBJ/kOXnluernqN3/a\n42h7dX83Wtv4b+rZ0v+1f6or6CtSVUol\n-----END CERTIFICATE-----\n"
                },
                "etcd_peer_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAo+HQWuVuIQ5Cdxl9wzyh+qMYMdOUIVyHNo/OkzJ36RAix0Lm\nBqhBoWbgemXG2AOcKmkYeTmI8X3rNM00clvaHCd9EHbczMexJhxMaNGx6dcfmRsd\nB0i1N+nqgal6c7i86H5S60AczzElXjCtERhgP3bHU4rd1TvaHOU8xA4NQFAAE6/S\nshGs4gT1nsk8wAxwiGNGpgvzhkxmQ/IRaifuAJggD/lSHM9f4TwQbDNSbxljhgT5\nMH5s1QTV1tVY1H2rSMP12+M60uYqBXdX0wCHVTfj1RZyrUsA+4K3kzhVh/RNHW+N\n/Qqf7TH7bbtrNmJ/hvB2rI1wsGIw4FleCqwsiwIDAQABAoIBABm56StbuN4XjveD\nWOq9KfBeif3IaQiTreYyzQrucUR09ACzz8hbwXHE5JhSQdTHPEysEtt03LqMOdAg\nJouNP8ALsuZSwnajInwJFTWfNX6v9pXiW7w4/bm5TsbsA/0GkyEsM3gaqGseG++d\nVI3KddGAo+nJcul2a9b9ZXyheBMQO5DOOVghxCh++/MudM4PXzKuZZA6YL+3BmV7\nWSOoaFM9p/OsrtD3VgpV2fUbJzdRHAmVy0xOZ7dt8jMmHaV3jy7d8J1a82Co7jTH\ni3x5JzG+ocSPiZjKC9J/oLYiDEHMKLU3NJa0vKveyH99nAXeEqEFdlEXB/wUpKEV\nrU4OkwECgYEAwy9mCx/5uiIi90XD96BcHR6r0d84RIAFh7JZaQ7FTl7aNITQBaFC\nOnHPy6ewriy/ug8ZIuKGIbVSDKERne/uYTMpLqYPG0aKjUb9u674yWWZmv9jIn7q\n+s0uKLV6HIw9CVRY0GdS1b6YkK8HdQGIu6ByQcACWgPjJw5QwAxL6MkCgYEA1vGU\nxjfWvyKKsQ5PhbVIeyzcrPKfgPztIyJ5PUiibMdqbn8aG5IXhb31HqwY1F8080BU\n0qtKNXq66Dy5W9lITk3QJBeuSERjNH1vpmRpl3GpvjRsfcJj5AcHPYDow3Ao3qAV\nTVzzbQDtUILUuGjBRIUlo3EwFpisaG8KP/DxKLMCgYBTwREOkQf94QwUAzHWHk+o\nhzK/egOREUZONi+7rwTnXjhP9PW2lL3wiknaX/impLkYw8XLfFyGNmIg3TTMCtrF\nhsiTJdqxn5Fwkhfq42gKM7i4FAKcGM4IFOdLvKPLgDnouPLraorXAVRCMXkHskLU\nEEM3B4d6zNQ6PCBWaHBiUQKBgFBn5sOPt+GgRkmdlNnrysVpLtPznv9dnkf6aWgn\nd7tBjerv2RBfQjVhrgRfVJp9Uw18Dz8PnJ8M3kZqENzvF0FTkn0t7qBSFNpZ4h5Y\nibeBaYIhkkQpJ7zxdB/pzSjvGBrPv6hFETrBkgUALBsf9MxxEndlrBuH2Vbn0unA\ndDZJAoGAZ3AfoJlBRQFcvk/cieOOYQoCmJqYTmqDY9oeHcpyCJks9P2QjChCM1c/\nnyK8XedX6aojdHzurKvzjUzn8iUK9XHctxH4D5QT1tpxdgrIBnILsfCIbl83/a9q\n47XYcYvZMyt0e4FSJ/u2op8fE4guExeXCZGtuHKOG5D3X2Uzaco=\n-----END RSA PRIVATE KEY-----\n"
                },
                "etcd_server_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAMwp7Oul5gv8qfbgpgDGbsEwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTFaFw0xOTA0MjUxMTIzMTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nSf/I0C\na2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eCcjY0brYbDXmD4op7oxsWekC7\ndAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQvgT5q6E1aXaRzPH1UbYLedDr\nmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxYC3U+21J00Npqb75102ER5+N9\nBDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7DutmAn5y/U/2r2Zy1lT4Syoxit6e\nbe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3JASMDdbjWLmQTq61Bu97yUnx\n4ThOzoT2eD1v6QIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQl\n9eiBOupKETzs3UNVmpsNUnTaGDAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCZbUr86mTTlRUFeF+PsUt+Kunk\nlMSMATndvabeoU9gwfw8Szhq4p8/855gFzab4RKswOsFbNtNITJ/eRBPzjn+A7Ho\n/M9V3kzO3jMI02HBvX6GlH0YyTkhWF/xmdBCZSM2bYe/ww7EXZzOXPPH2JfSCRiy\nj9e2WQrQRzS/pa3+/pqecJoPu9N/rSZdN/NQDcIwIIg5CHOnkz/AV3yCU38JFA8B\n8vch3ZGv3hyqcEP1tf0AQSXvfQnZGVfviyEZn61tHperVhYwq4a77Sc6ixpg19CL\ngyYyCL43MoyDEqZEIobUBL0I0MraV3T38Ir1lCn7kd0zYoCy9l4TCkW2ExAc\n-----END CERTIFICATE-----\n"
                },
                "etcd_server_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA1nSf/I0Ca2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eC\ncjY0brYbDXmD4op7oxsWekC7dAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQ\nvgT5q6E1aXaRzPH1UbYLedDrmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxY\nC3U+21J00Npqb75102ER5+N9BDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7Dutm\nAn5y/U/2r2Zy1lT4Syoxit6ebe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3\nJASMDdbjWLmQTq61Bu97yUnx4ThOzoT2eD1v6QIDAQABAoIBAQDDl0KDGChoyPcb\ngIyeHbYfIdUVg8UxMxIvF2dic1+CqK83jbqPaBiSEMzDkVxTtXHl5MKvZXKR7sv3\nJxb8eTeX8mrSB+4KZrdAyD3xxoaCjvasrd73L5p2imUodterT9IqYBo/U+hM+EXV\nI9f9EDALebiUKm/eX0eOxMioqcuEjDN2YlEOJDPz0nyE0rYyh0AeKaCopAzbAQ5G\nX7VBlliqh5062YrvKNwKDj+xjK3WvtkZgQuCoPlePndb9DPip83JHhcRSeNafrlu\n39rOXyZpfPs9eLFJR0/T0mCKvA9nOsm93bR515JR7OZFe7elhhtH/PL5+fbRqbN8\nXVXyMyixAoGBAOeZw9IfOzPvn5PjnV7zYW5Ns9cAt7pW4M+4XaYdOnT3P4+tgpek\nkxLGVOtLEkJABewjETNAyuweu3GVVDRAaQMnPqqNN6V6Mcz4iuroPE8ztrtTotAR\nLws6x6CMT7VP7vHuRqjcQM+jas1IGhHA5lkdTUDFSZ4m9xTowe5NB1LPAoGBAO0M\ndbXoKT6bbQxOq4yIufDVauajps/Aq5+gSAE5Gyz8iCTi/Fdxm/evwM7NPKkde5Mb\nxyBTAsdFZ94gEbswmxOdILh8tub6rteljaPSRKxG8RL5qPinLYQYgi8O81+8s/10\n3Sv67ayC0jmWBQMqYGrKid+jrrU53foXB39oax/HAoGBAKRX953eLZugGWPPK7fa\nCrREDS6vQrDGv4aG9GVQ7k9bt83TuQy0auzysgW5Yr6CQfGbvLPa8WP2NtrVtUfS\nwPHM4moSBX+2Iyqo36Lrowgs0SlCoxD0cKaOUmP5zQIDM7KXe6qNiKwO8VW0KVOZ\nx5tK8Kvak2/XhJNgy2S3Yk//AoGBANiVZMtipqSMT/NJwdXyaqmP5U97wQLa0DRV\nttRfP+Q3i5DgT5z5sX5595k7zivaQzkizSpMjiJR2NgLxweYHmiqTOYjFN4vtyZT\nHfnLOXGKk+M5dthRrvWdivzCFT2o5W8zooz3hMb09G0nE8dTpaqNCbHrFMqCZ72D\n4xbW6eGrAoGBAK/Zzc1Ja55+UkxGMgZE7TFBFXqiJ8u/8uEzD2EA/JY7EmyRsodb\ntxh4cItD9ydQFgnagZsbzjlTe7ch/Qx+q3a20vfaAMvylfs1cKo8o9ACu1tSxDJZ\nXLzs8Jy6WsCxKWsuP+X3CK8Ix7FhO8CYZJRdmW8GpE5ngkzPN5XmfqkZ\n-----END RSA PRIVATE KEY-----\n"
                },
                "id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "058b3f92d64fda69da148b191b6fca2279d3ccbd"
                },
                "kube_dns_service_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.3.0.10"
                },
                "kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n"
                },
                "kubelet_cert": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                },
                "kubelet_key": {
                    "sensitive": false,
                    "type": "string",
                    "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                },
                "server": {
                    "sensitive": false,
                    "type": "string",
                    "value": "https://steve:443"
                },
                "user-kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n"
                }
            },
            "resources": {
                "data.template_file.kubeconfig": {
                    "type": "template_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet",
                        "tls_private_key.kubelet",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "e238028040b157865ac030be53e5903f7229ab5b6fab95c54459bdb260a801fb",
                        "attributes": {
                            "id": "e238028040b157865ac030be53e5903f7229ab5b6fab95c54459bdb260a801fb",
                            "rendered": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "template": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: ${server}\n    certificate-authority-data: ${ca_cert}\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: ${kubelet_cert}\n    client-key-data: ${kubelet_key}\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "vars.%": "4",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.kubelet_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "vars.kubelet_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.server": "https://steve:443"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "data.template_file.user-kubeconfig": {
                    "type": "template_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet",
                        "tls_private_key.kubelet",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "4b8c2e0f4f06d1d154d485615de2dd856d2779646ffed6cdff97f97ee3067f47",
                        "attributes": {
                            "id": "4b8c2e0f4f06d1d154d485615de2dd856d2779646ffed6cdff97f97ee3067f47",
                            "rendered": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n",
                            "template": "apiVersion: v1\nkind: Config\nclusters:\n- name: ${name}-cluster\n  cluster:\n    server: ${server}\n    certificate-authority-data: ${ca_cert}\nusers:\n- name: ${name}-user\n  user:\n    client-certificate-data: ${kubelet_cert}\n    client-key-data: ${kubelet_key}\ncontexts:\n- name: ${name}-context\n  context:\n    cluster: ${name}-cluster\n    user: ${name}-user\n",
                            "vars.%": "5",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.kubelet_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "vars.kubelet_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.name": "steve",
                            "vars.server": "https://steve:443"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "local_file.apiserver-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.apiserver"
                    ],
                    "primary": {
                        "id": "1d11f20f2759bce7304728b98d83bb054006b997",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDtjCCAp6gAwIBAgIQE84krvyPdAlMPLPQJMbjPzANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMTJaFw0xOTA0MjUxMTIzMTJaMC8xFDASBgNVBAoTC2t1YmUtbWFzdGVyMRcw\nFQYDVQQDEw5rdWJlLWFwaXNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAL/jbHHRqnrHUP25tX3DIIiTPYgtUdwjFA5JNMr35sGiRKpm6OKBRGyB\nlXsYTuc2aMXhqeSaIdtjAKHhUMunbqhI9YvP0iGdHnD47N9kFZgMYzPpOBGz4xPo\nLb5L5+Z80hO1Xk13NuXV7Xh301YFKs7cNrlncjgLuMXA6THNMdXSdmxuLJ93mfeL\nukNsEmiQzBi9IAj0AZydhz0LHx1THW7mDAUJS9/rg722cNVvrm8lsW9X70MFnhUG\nITEx0SKHNaFOm/TyOmixDTlwEpTIQxAvp4hMWwgHbJQuFAZoeYyzwr5ugA9edIfU\n9lBt1t8mgKOnNRzQ5FScF83hb1Ma7C0CAwEAAaOB1zCB1DAOBgNVHQ8BAf8EBAMC\nBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAw\nHwYDVR0jBBgwFoAUCCqH0xMguPkFtAZgs38rkfpulKowdAYDVR0RBG0wa4IFc3Rl\ndmWCCmt1YmVybmV0ZXOCEmt1YmVybmV0ZXMuZGVmYXVsdIIWa3ViZXJuZXRlcy5k\nZWZhdWx0LnN2Y4Ika3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2Fs\nhwQKAwABMA0GCSqGSIb3DQEBCwUAA4IBAQBpm/mE+bMehRoSrP/A4mENeaf604/V\nFmq4tS2Z6kqQ8cb7R7LCjcQ1141WIP27Z2nbvOw2ImZcXLNcXd6KNbacDRaHv8W/\nUX4474pHA1reRizPdWEA/ZHqENpUqlr/uGgt/7JfeLLfRvT0MzTK1r3nviHVSU7h\n/galjjcvwG0CyVCGceUHKKVTnwMfYwf+sRLcpMneiBiv0pTPSt1HYVUOfxdchdsK\nQzitpjP7oC4wTKLvu2/ealz4lmiBSKQEloVryP2V2Msgw5HZq74Hmcagsn2V7fu/\nUYJaHGcStUUauINv5iYH/avxcyvAI5LKvG0Goz35xdm4RWYrqx3T40tg\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/apiserver.crt",
                            "id": "1d11f20f2759bce7304728b98d83bb054006b997"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.apiserver-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.apiserver"
                    ],
                    "primary": {
                        "id": "b3267457d08275f01f59217c320d72b6671781f2",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv+NscdGqesdQ/bm1fcMgiJM9iC1R3CMUDkk0yvfmwaJEqmbo\n4oFEbIGVexhO5zZoxeGp5Joh22MAoeFQy6duqEj1i8/SIZ0ecPjs32QVmAxjM+k4\nEbPjE+gtvkvn5nzSE7VeTXc25dXteHfTVgUqztw2uWdyOAu4xcDpMc0x1dJ2bG4s\nn3eZ94u6Q2wSaJDMGL0gCPQBnJ2HPQsfHVMdbuYMBQlL3+uDvbZw1W+ubyWxb1fv\nQwWeFQYhMTHRIoc1oU6b9PI6aLENOXASlMhDEC+niExbCAdslC4UBmh5jLPCvm6A\nD150h9T2UG3W3yaAo6c1HNDkVJwXzeFvUxrsLQIDAQABAoIBACRxriQD3SwKdPBr\nd/PVvnUR+erGKLj1lJaOAs/Vu2blScNPXkW+pV8yUVCaskmphMaocFrxhyKir/kO\n0QiM2TBvAuu14cPuklyEeoCHAq7pE2JFlheOob8jJqTwx69333JMzQdLcArA0aRC\npcm9m37ERkR6SDAq0cIFPITv4tooFSATQ6LIYYs7o6ackqIaAMc3u6AQPS5dDCPM\nVGBC5eTsAKsQR91n5ylnDaP4/wlc7TUuC3UwPVkEtejplc+B6gGLQnxO9pLUw6b6\nhJFztKNnv2MjuBAzC8FaHSt3zcq3c5xVJPU21SN9hlXpvD0Aie2+ev1KoOaddxKN\ntH4kSYUCgYEA9cOvEcytO31wFCVyNEY2lXBzcSI3mYnAdRIM7b2dxr+6fzxsFQ8L\neQl+qXZ954QKFZC235SVU4hA+576bF0skKMezCS+T4yixGRGiuSZ8sfgjVxHPo7D\nhkXqmOqkSWlWThJ4F3i+uMcUPuAYPeMkucxuASgyxZNLabuqTWOrFscCgYEAx+FR\noak5TUUqDF9Acwbh0MiRXPc70LpRKZjftWx5lnJAjrcx2tNEByO6ldgyEeYm43Y+\n0bUmV1Eae0hO6Fuk8XkSAmBZX2sNePHUVFUfz9aF9ZCM3wVDkk0SyZ9Ax2DwMi6x\nVoCfEWihFniKCnWFx0mRlfFAo2NWCKtXwE5RYWsCgYEA54h5cL1xHrCoXHKCyziy\nx8rvF1BzLRUX2bMttvSCpfGPE7uq35QS7O7DA4f8SZadoX96qdxjahTdk7BMoLaO\n+5yRsSWUnYES/w6xXrzLRGyF4udiv07kaaWIxJOaPwccJeVEemho1c/IBQw+Cl/q\nA5jSsgha/MQtsej5InuZfZUCgYBqWXKLp3R7ro8+4fdyvHiuE+l0I3/KAThp/5MX\n/s16xPOge8yk97+8ZMBENjH94A1U/XdTMSVjVB3Y9pI1g31xlc+FQCqNYHJcpZ8p\n99jjRusjy3OIvk5Dq4qRiJB5BRUIPlvRAMKiCp+bSyt3gSxa6sPxmdmglZwTJMed\n5I3cXQKBgBMu4RaO0GoBenEf/jB/vil4430fzWA4+DK7y7J6MgkNvrSePiuxhV2N\nlrkkEe5l6pic0eaN1HRCOh8Kvetu255HQ0HADKgiLL+T+3w3nDqVNiUcuE42afNe\nto4Hd1G7GjPt5fY0pKdcSRJYSwO8ksul8qwIClaIgY1VoebWZM4A\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/apiserver.key",
                            "id": "b3267457d08275f01f59217c320d72b6671781f2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQQ/pcBuJNVpuB/EX8y5TQHTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMw\nOFoXDTE5MDQyNTExMjMwOFowITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMa9BNlYiOLU1i5R\niiEYEfZ5oX3F5b3/WjvmPlQCF66218ACo6XMYXf8srOg6LFJvvUye2tOcsNMYt8s\nyALOZnq8++saY+SyWHNgd95/Mxd9h9VlCaEjrG5HFBTKflNlG87P87Ozjm2ZfjHt\n6VvTdwVmlKCYezoKH4EGjYAq4Y3SzjsX3P34HjzhD1eAdN5Wzc6mkvosH8Y6LdFx\nEmKfGB7Ce0+0pp8Ic8qr91hhIgWO7ISQDcTUdiI2oORS/fzuIiNL/V/PXur3+suA\nPPusPnn051uv8b682iRBzvaSA1igQvK2fQYBs6c/gJBXOLVS5X824u+qc7eElurz\n7AuP8nECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFCX16IE66koRPOzdQ1Wamw1SdNoYMA0GCSqGSIb3DQEBCwUAA4IB\nAQCitAxfiv2jqbdt/XjmCr2KkPR7BJY4lfgLQPKxoP3gX7tKzPyWU+PWy+Yg+ZdC\n1TSJt9D6Glp3hqQ+3iVPXyxpZ8Q4cS9xwGqPsNKDJxZeF2P4C86wCmq9t1WEdWFK\nwlMx8IBndmi2F2fKs08HmtvkffmAmCjjTr48xyjGYVjIEj4+FYaumn4/dFdO93oS\nxhZt4ARrnVa5WnI2uisLHMWjCKiVNmyWm1BrcKs7wRbvLopcPwmZOvSvP9PCy0FN\nW30m4kUvobb9fl7xW03Dmeg5+X2ngZa9gwMLLokH17o2qys6u6p8XFTw1EUU7Abp\nnY4V+ERQNhQyL09OYfzIawVV\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd-client-ca.crt",
                            "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.client"
                    ],
                    "primary": {
                        "id": "f4d6f7f53b6b6b1d65a14bc55fab5d6f28d71757",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQMLsoTMWsys0G98j/UvwrFTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMx\nMloXDTE5MDQyNTExMjMxMlowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2cXltfiK6\nHcwPUlXolx4Ox6vEcwhl4kJpfPtkvWh+3GG4/YhjbAiKVRTaWNEOdAZVSoS6SW9H\nOm44IIhyNOy+GOevRSwOGyz5S53kYL2PtqURh1pvT3rMxsk9u9f2CkLDBzfQ72fm\n74M+OZL8DzEtfh70ZNoQYHW4gCADjjOYkPuvEzl/wgczFKBPflrGhsHsSatk+A63\nyanvSL/fBbB15ARmPJgIBhnXCPm9nWiPTMPCNq9i1CO/SYj77E8GO7vzVOtbEqN3\n90BDoI0WXDmYoRME2PCw6B0uspTGWbD4Nbk5sgsEVekcJCwObIo3xcYb1EpdV3dg\nGHOamYPU2AFBAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX1\n6IE66koRPOzdQ1Wamw1SdNoYMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBABnGsEP25S7eXXzHE4mswZ3utzjz\nu+ubXg+RuU19e6KzkU6Lr3t6kxg1bX52sPuHb3TiZa5maDw6A1XrIxBpFjk+mCOY\npPWF0/9+tup9aQ6UATCPNzpRgbMFGJ2ZBIFQWmmZTC+ykH1MzZnGwoytrn7GCyLs\n1gYaqFRh5ShekxPUVUOkh90yGFNvFrFTD/tJJqbW8nKFTNei/kAxqD9R1rdAIho5\nhI2T9iKkT0WbFUHy4SFJsjnPAVQgIEfhgxcTkOv3surNYO2LA1YtaU1UCU3P5JJS\nLi0FCEy2lKffNbmU8nkBGziDntov6yxM83kL6WzwL+2uWewGYGWKbmf3Y+M=\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd-client.crt",
                            "id": "f4d6f7f53b6b6b1d65a14bc55fab5d6f28d71757"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_client_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.client"
                    ],
                    "primary": {
                        "id": "a8ff91bf9ce0a015695e501b1db213572634573f",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtnF5bX4iuh3MD1JV6JceDserxHMIZeJCaXz7ZL1oftxhuP2I\nY2wIilUU2ljRDnQGVUqEuklvRzpuOCCIcjTsvhjnr0UsDhss+Uud5GC9j7alEYda\nb096zMbJPbvX9gpCwwc30O9n5u+DPjmS/A8xLX4e9GTaEGB1uIAgA44zmJD7rxM5\nf8IHMxSgT35axobB7EmrZPgOt8mp70i/3wWwdeQEZjyYCAYZ1wj5vZ1oj0zDwjav\nYtQjv0mI++xPBju781TrWxKjd/dAQ6CNFlw5mKETBNjwsOgdLrKUxlmw+DW5ObIL\nBFXpHCQsDmyKN8XGG9RKXVd3YBhzmpmD1NgBQQIDAQABAoIBAQCVBgOFqG59UDGK\nolqB7k4jDH4FrWDCuBo/SFOgagac+S7piE6Lx4cCV5T89WduQt+Zc5EPCUTYDaZS\nOmC5yPlIHdfBluLxcsk9qMKD9XFhnnMe6ky4d1d7RTTENFenJaJ6475379YTELlH\nbofdVBt7aXWnc2mbzu7Zke6UeOc0SnZr+CNzJhFoUJZC+s+UvMdk0HlUg0gHe4Od\naGHcpoIXmZ1mcDuz+Zgbe7X5K/weV4YU8OTw5n5sCUm2oaH9TQLr7C3gEKUzG+zH\n7toNQv1+lUFxEubCAc1dXTf+h2eQbJFMMjCvbEdh28DiSTyzPi86CT/EPDc8HrSa\nfz0wOopxAoGBAMS3+GCBrF80TV2zgL0zalPa1AGmbb2JZt6yAdvURB6RRB9hm+Yn\n3AN+OI0CFBytk3HdVmbC/FzsAhPCPiIMvr7iNcfGSKvo9oUAP8Y4dBcbxSvqem/a\n7vhw8VGJMRRXN0ykeNIRmzo+7fxmArJ+lmkZoqFfhlolHlnLr3dl1Dd/AoGBAO1s\nN8rNae9QnufE3RqBs8G/tDkSPqkLoZQpzcpKL26qvg5MMx15TY01MoKN4sFg5L14\nzbhFMcfYnhCDSnlD3ZZvy0oCevCsZfsAOAEEhdGkYozEE+bnCIuP7eIuTGksYmbg\n/rQSenRWzFCHye5jflps1Z+EAU1RhT1mrrZz1ic/AoGBAJ6jyd5x1IM2V4nP/2sU\n8pNLLptiDq/CBb5jiRIxfPm1pl00Rxf1Xv1GJe65FWUHKZeyqkHWztNU1FwA0kB9\nTLn9DOfdZK+WAG/DgqqkziHwmDJRNonL4dlio4lgfL7tkr/xBypJXog7RYq87UHq\nyftZ3AgNU/iQZIh/tTIxYVGbAoGAR+HV2n7qrdwY4E8IKjhOtkBWTlkpw4CUAQnP\nFonzZmwncqi7aRcK1c/fZQuUNbwiRQNINZwtgDYjVRiK+cAEXMGoKNYrZqarkZz1\nV8mIwnokpD3RUL1uJuMCwNIHrGgVutQwCVD25jZJUbBrANP6s2H0I4GR61jdIEPw\nbakQk30CgYAetVxpx5PY33Zm6zxQ+JarZ7OMBRfJZ4WdB2JQp0ycePRQi5JQ5Xm/\n/8/R9k0gcgOgwYwW5a30i8tu3acQYktgN60/tNXu7k1o0vD/qWUM9QIs11ssyAPS\n6MMCXl9hOwjaY8X37dCk1EnqJ1rfe8k5DTrdtfLNGQozBXD8m9BovQ==\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd-client.key",
                            "id": "a8ff91bf9ce0a015695e501b1db213572634573f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQQ/pcBuJNVpuB/EX8y5TQHTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMw\nOFoXDTE5MDQyNTExMjMwOFowITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMa9BNlYiOLU1i5R\niiEYEfZ5oX3F5b3/WjvmPlQCF66218ACo6XMYXf8srOg6LFJvvUye2tOcsNMYt8s\nyALOZnq8++saY+SyWHNgd95/Mxd9h9VlCaEjrG5HFBTKflNlG87P87Ozjm2ZfjHt\n6VvTdwVmlKCYezoKH4EGjYAq4Y3SzjsX3P34HjzhD1eAdN5Wzc6mkvosH8Y6LdFx\nEmKfGB7Ce0+0pp8Ic8qr91hhIgWO7ISQDcTUdiI2oORS/fzuIiNL/V/PXur3+suA\nPPusPnn051uv8b682iRBzvaSA1igQvK2fQYBs6c/gJBXOLVS5X824u+qc7eElurz\n7AuP8nECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFCX16IE66koRPOzdQ1Wamw1SdNoYMA0GCSqGSIb3DQEBCwUAA4IB\nAQCitAxfiv2jqbdt/XjmCr2KkPR7BJY4lfgLQPKxoP3gX7tKzPyWU+PWy+Yg+ZdC\n1TSJt9D6Glp3hqQ+3iVPXyxpZ8Q4cS9xwGqPsNKDJxZeF2P4C86wCmq9t1WEdWFK\nwlMx8IBndmi2F2fKs08HmtvkffmAmCjjTr48xyjGYVjIEj4+FYaumn4/dFdO93oS\nxhZt4ARrnVa5WnI2uisLHMWjCKiVNmyWm1BrcKs7wRbvLopcPwmZOvSvP9PCy0FN\nW30m4kUvobb9fl7xW03Dmeg5+X2ngZa9gwMLLokH17o2qys6u6p8XFTw1EUU7Abp\nnY4V+ERQNhQyL09OYfzIawVV\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/peer-ca.crt",
                            "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.peer"
                    ],
                    "primary": {
                        "id": "ef8235b19ad9b996caf31c9fa6c2224f1f54a08f",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAL8ala4juLavNCJHPGRlxZ8wDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTJaFw0xOTA0MjUxMTIzMTJaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKPh0FrlbiEO\nQncZfcM8ofqjGDHTlCFchzaPzpMyd+kQIsdC5gaoQaFm4HplxtgDnCppGHk5iPF9\n6zTNNHJb2hwnfRB23MzHsSYcTGjRsenXH5kbHQdItTfp6oGpenO4vOh+UutAHM8x\nJV4wrREYYD92x1OK3dU72hzlPMQODUBQABOv0rIRrOIE9Z7JPMAMcIhjRqYL84ZM\nZkPyEWon7gCYIA/5UhzPX+E8EGwzUm8ZY4YE+TB+bNUE1dbVWNR9q0jD9dvjOtLm\nKgV3V9MAh1U349UWcq1LAPuCt5M4VYf0TR1vjf0Kn+0x+227azZif4bwdqyNcLBi\nMOBZXgqsLIsCAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX16IE6\n6koRPOzdQ1Wamw1SdNoYMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQCMlYq4ORXyvUd3lUpmOd2geGVrny14fKcAY2BGH4gUNy70kGlN3qTV\n+CPhQsdwSUk4DpbK594MbYznuPmCL3pZ10tYsns0GMXaOIRK8q0VWhc3m/AbSV2N\nyQr9w88ygNE7h+UhaobPH4UloMZZZMa1uoZsf2K8kPnxNWMQs5PwyuIQCT74bJop\nmhH5lREGqo9wDZr42jo1M7W4wh83WBXVZIXVVsBMjwttCkQJy2Nq+hFvai0x7XT3\nm0DC68+xvmj62wpSSLNYtGTOIgSs+7WA9r5bAoaBADLHxDKBJ/kOXnluernqN3/a\n42h7dX83Wtv4b+rZ0v+1f6or6CtSVUol\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/peer.crt",
                            "id": "ef8235b19ad9b996caf31c9fa6c2224f1f54a08f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_peer_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.peer"
                    ],
                    "primary": {
                        "id": "02ba3874af093c3edec05c62db9b82cfcff06d5d",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAo+HQWuVuIQ5Cdxl9wzyh+qMYMdOUIVyHNo/OkzJ36RAix0Lm\nBqhBoWbgemXG2AOcKmkYeTmI8X3rNM00clvaHCd9EHbczMexJhxMaNGx6dcfmRsd\nB0i1N+nqgal6c7i86H5S60AczzElXjCtERhgP3bHU4rd1TvaHOU8xA4NQFAAE6/S\nshGs4gT1nsk8wAxwiGNGpgvzhkxmQ/IRaifuAJggD/lSHM9f4TwQbDNSbxljhgT5\nMH5s1QTV1tVY1H2rSMP12+M60uYqBXdX0wCHVTfj1RZyrUsA+4K3kzhVh/RNHW+N\n/Qqf7TH7bbtrNmJ/hvB2rI1wsGIw4FleCqwsiwIDAQABAoIBABm56StbuN4XjveD\nWOq9KfBeif3IaQiTreYyzQrucUR09ACzz8hbwXHE5JhSQdTHPEysEtt03LqMOdAg\nJouNP8ALsuZSwnajInwJFTWfNX6v9pXiW7w4/bm5TsbsA/0GkyEsM3gaqGseG++d\nVI3KddGAo+nJcul2a9b9ZXyheBMQO5DOOVghxCh++/MudM4PXzKuZZA6YL+3BmV7\nWSOoaFM9p/OsrtD3VgpV2fUbJzdRHAmVy0xOZ7dt8jMmHaV3jy7d8J1a82Co7jTH\ni3x5JzG+ocSPiZjKC9J/oLYiDEHMKLU3NJa0vKveyH99nAXeEqEFdlEXB/wUpKEV\nrU4OkwECgYEAwy9mCx/5uiIi90XD96BcHR6r0d84RIAFh7JZaQ7FTl7aNITQBaFC\nOnHPy6ewriy/ug8ZIuKGIbVSDKERne/uYTMpLqYPG0aKjUb9u674yWWZmv9jIn7q\n+s0uKLV6HIw9CVRY0GdS1b6YkK8HdQGIu6ByQcACWgPjJw5QwAxL6MkCgYEA1vGU\nxjfWvyKKsQ5PhbVIeyzcrPKfgPztIyJ5PUiibMdqbn8aG5IXhb31HqwY1F8080BU\n0qtKNXq66Dy5W9lITk3QJBeuSERjNH1vpmRpl3GpvjRsfcJj5AcHPYDow3Ao3qAV\nTVzzbQDtUILUuGjBRIUlo3EwFpisaG8KP/DxKLMCgYBTwREOkQf94QwUAzHWHk+o\nhzK/egOREUZONi+7rwTnXjhP9PW2lL3wiknaX/impLkYw8XLfFyGNmIg3TTMCtrF\nhsiTJdqxn5Fwkhfq42gKM7i4FAKcGM4IFOdLvKPLgDnouPLraorXAVRCMXkHskLU\nEEM3B4d6zNQ6PCBWaHBiUQKBgFBn5sOPt+GgRkmdlNnrysVpLtPznv9dnkf6aWgn\nd7tBjerv2RBfQjVhrgRfVJp9Uw18Dz8PnJ8M3kZqENzvF0FTkn0t7qBSFNpZ4h5Y\nibeBaYIhkkQpJ7zxdB/pzSjvGBrPv6hFETrBkgUALBsf9MxxEndlrBuH2Vbn0unA\ndDZJAoGAZ3AfoJlBRQFcvk/cieOOYQoCmJqYTmqDY9oeHcpyCJks9P2QjChCM1c/\nnyK8XedX6aojdHzurKvzjUzn8iUK9XHctxH4D5QT1tpxdgrIBnILsfCIbl83/a9q\n47XYcYvZMyt0e4FSJ/u2op8fE4guExeXCZGtuHKOG5D3X2Uzaco=\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd/peer.key",
                            "id": "02ba3874af093c3edec05c62db9b82cfcff06d5d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_ca_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.etcd-ca"
                    ],
                    "primary": {
                        "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQQ/pcBuJNVpuB/EX8y5TQHTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMw\nOFoXDTE5MDQyNTExMjMwOFowITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMa9BNlYiOLU1i5R\niiEYEfZ5oX3F5b3/WjvmPlQCF66218ACo6XMYXf8srOg6LFJvvUye2tOcsNMYt8s\nyALOZnq8++saY+SyWHNgd95/Mxd9h9VlCaEjrG5HFBTKflNlG87P87Ozjm2ZfjHt\n6VvTdwVmlKCYezoKH4EGjYAq4Y3SzjsX3P34HjzhD1eAdN5Wzc6mkvosH8Y6LdFx\nEmKfGB7Ce0+0pp8Ic8qr91hhIgWO7ISQDcTUdiI2oORS/fzuIiNL/V/PXur3+suA\nPPusPnn051uv8b682iRBzvaSA1igQvK2fQYBs6c/gJBXOLVS5X824u+qc7eElurz\n7AuP8nECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFCX16IE66koRPOzdQ1Wamw1SdNoYMA0GCSqGSIb3DQEBCwUAA4IB\nAQCitAxfiv2jqbdt/XjmCr2KkPR7BJY4lfgLQPKxoP3gX7tKzPyWU+PWy+Yg+ZdC\n1TSJt9D6Glp3hqQ+3iVPXyxpZ8Q4cS9xwGqPsNKDJxZeF2P4C86wCmq9t1WEdWFK\nwlMx8IBndmi2F2fKs08HmtvkffmAmCjjTr48xyjGYVjIEj4+FYaumn4/dFdO93oS\nxhZt4ARrnVa5WnI2uisLHMWjCKiVNmyWm1BrcKs7wRbvLopcPwmZOvSvP9PCy0FN\nW30m4kUvobb9fl7xW03Dmeg5+X2ngZa9gwMLLokH17o2qys6u6p8XFTw1EUU7Abp\nnY4V+ERQNhQyL09OYfzIawVV\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/server-ca.crt",
                            "id": "f18b066baa3eed178f6e405b91b4f4baa3c0174a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.server"
                    ],
                    "primary": {
                        "id": "a627a319c5b160e5c5bcd96066099ac0830f0a19",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAMwp7Oul5gv8qfbgpgDGbsEwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTFaFw0xOTA0MjUxMTIzMTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nSf/I0C\na2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eCcjY0brYbDXmD4op7oxsWekC7\ndAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQvgT5q6E1aXaRzPH1UbYLedDr\nmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxYC3U+21J00Npqb75102ER5+N9\nBDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7DutmAn5y/U/2r2Zy1lT4Syoxit6e\nbe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3JASMDdbjWLmQTq61Bu97yUnx\n4ThOzoT2eD1v6QIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQl\n9eiBOupKETzs3UNVmpsNUnTaGDAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCZbUr86mTTlRUFeF+PsUt+Kunk\nlMSMATndvabeoU9gwfw8Szhq4p8/855gFzab4RKswOsFbNtNITJ/eRBPzjn+A7Ho\n/M9V3kzO3jMI02HBvX6GlH0YyTkhWF/xmdBCZSM2bYe/ww7EXZzOXPPH2JfSCRiy\nj9e2WQrQRzS/pa3+/pqecJoPu9N/rSZdN/NQDcIwIIg5CHOnkz/AV3yCU38JFA8B\n8vch3ZGv3hyqcEP1tf0AQSXvfQnZGVfviyEZn61tHperVhYwq4a77Sc6ixpg19CL\ngyYyCL43MoyDEqZEIobUBL0I0MraV3T38Ir1lCn7kd0zYoCy9l4TCkW2ExAc\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/etcd/server.crt",
                            "id": "a627a319c5b160e5c5bcd96066099ac0830f0a19"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.etcd_server_key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.server"
                    ],
                    "primary": {
                        "id": "116b8df3bd3a48eddbeaf39abd8cdead8a8b8573",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA1nSf/I0Ca2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eC\ncjY0brYbDXmD4op7oxsWekC7dAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQ\nvgT5q6E1aXaRzPH1UbYLedDrmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxY\nC3U+21J00Npqb75102ER5+N9BDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7Dutm\nAn5y/U/2r2Zy1lT4Syoxit6ebe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3\nJASMDdbjWLmQTq61Bu97yUnx4ThOzoT2eD1v6QIDAQABAoIBAQDDl0KDGChoyPcb\ngIyeHbYfIdUVg8UxMxIvF2dic1+CqK83jbqPaBiSEMzDkVxTtXHl5MKvZXKR7sv3\nJxb8eTeX8mrSB+4KZrdAyD3xxoaCjvasrd73L5p2imUodterT9IqYBo/U+hM+EXV\nI9f9EDALebiUKm/eX0eOxMioqcuEjDN2YlEOJDPz0nyE0rYyh0AeKaCopAzbAQ5G\nX7VBlliqh5062YrvKNwKDj+xjK3WvtkZgQuCoPlePndb9DPip83JHhcRSeNafrlu\n39rOXyZpfPs9eLFJR0/T0mCKvA9nOsm93bR515JR7OZFe7elhhtH/PL5+fbRqbN8\nXVXyMyixAoGBAOeZw9IfOzPvn5PjnV7zYW5Ns9cAt7pW4M+4XaYdOnT3P4+tgpek\nkxLGVOtLEkJABewjETNAyuweu3GVVDRAaQMnPqqNN6V6Mcz4iuroPE8ztrtTotAR\nLws6x6CMT7VP7vHuRqjcQM+jas1IGhHA5lkdTUDFSZ4m9xTowe5NB1LPAoGBAO0M\ndbXoKT6bbQxOq4yIufDVauajps/Aq5+gSAE5Gyz8iCTi/Fdxm/evwM7NPKkde5Mb\nxyBTAsdFZ94gEbswmxOdILh8tub6rteljaPSRKxG8RL5qPinLYQYgi8O81+8s/10\n3Sv67ayC0jmWBQMqYGrKid+jrrU53foXB39oax/HAoGBAKRX953eLZugGWPPK7fa\nCrREDS6vQrDGv4aG9GVQ7k9bt83TuQy0auzysgW5Yr6CQfGbvLPa8WP2NtrVtUfS\nwPHM4moSBX+2Iyqo36Lrowgs0SlCoxD0cKaOUmP5zQIDM7KXe6qNiKwO8VW0KVOZ\nx5tK8Kvak2/XhJNgy2S3Yk//AoGBANiVZMtipqSMT/NJwdXyaqmP5U97wQLa0DRV\nttRfP+Q3i5DgT5z5sX5595k7zivaQzkizSpMjiJR2NgLxweYHmiqTOYjFN4vtyZT\nHfnLOXGKk+M5dthRrvWdivzCFT2o5W8zooz3hMb09G0nE8dTpaqNCbHrFMqCZ72D\n4xbW6eGrAoGBAK/Zzc1Ja55+UkxGMgZE7TFBFXqiJ8u/8uEzD2EA/JY7EmyRsodb\ntxh4cItD9ydQFgnagZsbzjlTe7ch/Qx+q3a20vfaAMvylfs1cKo8o9ACu1tSxDJZ\nXLzs8Jy6WsCxKWsuP+X3CK8Ix7FhO8CYZJRdmW8GpE5ngkzPN5XmfqkZ\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/etcd/server.key",
                            "id": "116b8df3bd3a48eddbeaf39abd8cdead8a8b8573"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kube-ca-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "fa1ebf722a8c2097e087bc39f69b7ce8caa6fb12",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQDNi0AR+XH1ELrQLz+dsBITANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMDhaFw0xOTA0MjUxMTIzMDhaMCUxETAPBgNVBAoTCGJvb3RrdWJlMRAwDgYD\nVQQDEwdrdWJlLWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxO+9\nlMTObnJ2CIuY1Aytoro8ImhHmCPgyPoGGTyoK1e2sS/17ow0yKgWwBTZd64aT2mv\nsbNQkmVdUS5wZPn9z73hMQPRXicyvzNFDCXi92xwaXdBZWs47o3Kqowk+hEmaqBD\n5fxdbZ/jNDCHQ3uT6QLkZdBUAvIAtf8v81Tdxz1PftCQW7EhZnDof8VSTsWkIGyh\n7h/EmpGgwPO77kMcl/D1t2oj9lYCdFtxmmurR+V5LTIu68PYUCrT5IoD76h5wa9l\nS8kOCI8IeKKFZRdGhnv+RpnBzBfU+pJv/XuIJ3Az/NHsbL+oGK4qXMnOLgDFHEbu\nILql/ZJrA9hQaRDL1QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUCCqH0xMguPkFtAZgs38rkfpulKowDQYJKoZIhvcN\nAQELBQADggEBAGLmIZX+7td0iFPoYt/9OjXWQ9C6W3XtLGG6/pZ95TfS1YZOolQI\niBcC7iCTXvwMNJHVYh7UKNWDr8VdfAiYiYwSFgJC7Kgmxraq5DDUfANDGV0xom6q\nnEDx2TVfT0UnH3L2ewU1BCv8dwLKn7H2YIrAwKzGn8jGCZdGz001zFbpWzG1uOqM\n67oWEfDK03lBBKmdj9TCqMwhIdpS94c7KcX7VepfkwAxnAWH6F4Ok+PLz7nTd8SA\nBhj9CJhbP49+kaIVtiBKkg3fwGfjRxmINOy1tl9eynp0xhl6/tq1b2SqF+pRNzp0\nj0J7YBx+caVzNwalvePpGCkSY5zE4TRXuMk=\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/ca.crt",
                            "id": "fa1ebf722a8c2097e087bc39f69b7ce8caa6fb12"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kube-ca-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.kube-ca.*"
                    ],
                    "primary": {
                        "id": "bfe0277e34d57d976a9aca5d61284eb5bff4365b",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAxO+9lMTObnJ2CIuY1Aytoro8ImhHmCPgyPoGGTyoK1e2sS/1\n7ow0yKgWwBTZd64aT2mvsbNQkmVdUS5wZPn9z73hMQPRXicyvzNFDCXi92xwaXdB\nZWs47o3Kqowk+hEmaqBD5fxdbZ/jNDCHQ3uT6QLkZdBUAvIAtf8v81Tdxz1PftCQ\nW7EhZnDof8VSTsWkIGyh7h/EmpGgwPO77kMcl/D1t2oj9lYCdFtxmmurR+V5LTIu\n68PYUCrT5IoD76h5wa9lS8kOCI8IeKKFZRdGhnv+RpnBzBfU+pJv/XuIJ3Az/NHs\nbL+oGK4qXMnOLgDFHEbuILql/ZJrA9hQaRDL1QIDAQABAoIBACRkpWUrpXZVoqhb\nm8d7/E55GgnFuY1M/ApH4f6h7fXshK9jzI/jyxFVtraSY8mxG92XC0fMelRDdSY+\nbbjLVfMhBM95BCThG4in4den3LSajn9+8U/bq66x90TjFyY7Kx1DNqj2pRFQHb2U\nRjrbSG8kAK8r+4p7zFPVr7fI9B8QS3ECl2wpRYYkzkBN850GCUo9cHcGlmp3G6RF\nWZ0X2COyLZYmA72+z8InuFGR1802/1CZGzGZ2VPF/cCZAvs8CrkxaVtMH8IC8omN\npM+Hx3dc/RE+D/6nHTktzmtdBM5j2drWe11GTb54uUqwJFxfYDmfo3LuaZLXbP/j\nQoMwbkECgYEA5cpGkr6argS27YxxglM7SMRt/CV/PGwK65qfTEhOxPI8FyWwPpdd\nz6WVcO24fHGDhjfQEZ1+8BCaI/EjIoiJQxc8bmKfNhva4xmYfdBcb64qVUz3vuRP\nWMeoMxYK1fz3Xe3mCpn1RLkGekgf8qyjuHRP6VwbbZHcLdHdt6qPP/ECgYEA22Yo\nyjYx//tOjLF//gAHcZyTkddGQ6F2aHmSGPlP8t83Pc8upHY7Bou8P4LdYyb8Pm3W\ntwwV9i+kRVyL3AHp4jyHlVhGVgepHyAAnZeiZ2yyYKhlw3oTW56MT1qRj8mFJ4JD\naNXydw7FmlI6kNtaSfStSdWZOkvxFw5VxtYTbiUCgYAIX3p61l8kgB96QGfSa935\nJM8tJOCh/v3W3+d2DBxyqLDv1vu5DCLq8gmj98WFI027kkUOn0KE1NYJATxagcce\nnrYg/471lcZACCq6SuFTYHFCcm+EkSUjAwNp+R+j9He/AHAlar65JlTKF96yJQBC\nNFrFEgodz/bJ5J/DlX9qwQKBgQCsP/eUUppMzAPuh8jiJSmy8+gT3zzGCjUJbzDZ\ntJslJkSbnVaUPlK3H+wKvPaNSuVNKjUh/zYa02qYHkGb2FDEkxsrkGOgVWFdE2YI\nVC1oH7moE23Z27TpAIBOKOARUHje/PFplFdJS+qt7xMV+XFYkOWgCzfCwi6lGFcV\nxar5lQKBgAiedufVu8dDvV3T7qOE68/GULaK52bXYzBPFLIgJwYbRsd/bKmUGoCU\ncsfP7bRcsccvcrjdBW2LGgnclfU9IRqVxJLTogqjtuX0m2uSr+HzgJij29kLqfwn\nYH3aaw/f+Dn3C10S0KbyySN+cQ2GQ8qCMNjFSZR9our5+IcCetHx\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/ca.key",
                            "id": "bfe0277e34d57d976a9aca5d61284eb5bff4365b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubeconfig": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.kubeconfig"
                    ],
                    "primary": {
                        "id": "d19c138edacf1eb5be552f274328043a4f092ec3",
                        "attributes": {
                            "content": "apiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: kubelet\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n",
                            "filename": "assets/auth/kubeconfig",
                            "id": "d19c138edacf1eb5be552f274328043a4f092ec3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubelet-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_locally_signed_cert.kubelet"
                    ],
                    "primary": {
                        "id": "754000f7d72785795fe780a788a1c0358f1d8b54",
                        "attributes": {
                            "content": "-----BEGIN CERTIFICATE-----\nMIIDOjCCAiKgAwIBAgIQHx6WmRkXU4WejXuqBmRW+TANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMTJaFw0xOTA0MjUxMTIzMTJaMCsxFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJz\nMRAwDgYDVQQDEwdrdWJlbGV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAycUYt0L6Ith2bDKetEQq+S7BDBC8339TjFf35x1X0/zd+kxB3mfa4xp9+4Yg\nZVgPgIZbeSRrDmuCRUB9wcVek9banhFZ5seMPqYYrr8rUGdubHJQUvVnQ8yiTbzl\nkLrpgHbu1TPqXBF3IcaK7fP9qLaqierMd7GyfOcWSGIwFK5dl+0BtXcCwTzV/v1S\n4yL4xmAdrvsgzaBtI+eYzkFo/5B/B6QBQ3KgqTUolha+EJ3UsVmVS8DY2xLqgYAB\ne62JEZJrE7cXy4zAc0fXpqkf6hkRhxJdDjq0yjD6GVNMz9Imzf9cJe+it6vLJn+w\nVNshVSBg0mRssFcMrhxaEXg0wwIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAwHQYD\nVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0j\nBBgwFoAUCCqH0xMguPkFtAZgs38rkfpulKowDQYJKoZIhvcNAQELBQADggEBALjb\n6lzZfgHIArKvq9c8IhknCC7l9YZRSPsOehqjM3AN40z+vyWGwRjHwtu+kSoQ/zug\nI0iHqNWdoaoU45vLuhPR2xR1AakdoQHxBZ2u+BugUXC6w+1602edu3UpqXoldusH\n+KF+T83HiUROnu9EDyJ+RvBIkrLI+56QB67j9KNYH6K6SFVMHM8hw+M9ZHtHwxEB\nXSopDKaaaarBfOIptagqMgXBCkDkATQchyeIXkvxk3ALIibXqcgDBSrp+fcau0zl\nq5LXN/eAwM+pMdxZT75NaKO1cMu7p8kAtOIfUauzmN8Mo7hq5hMAPHk0UMNEUmVv\n0gISRsuBq7iBmRlr0YI=\n-----END CERTIFICATE-----\n",
                            "filename": "assets/tls/kubelet.crt",
                            "id": "754000f7d72785795fe780a788a1c0358f1d8b54"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.kubelet-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.kubelet"
                    ],
                    "primary": {
                        "id": "d18f276c661c836f6024b1859daa50b6d6e3449b",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAycUYt0L6Ith2bDKetEQq+S7BDBC8339TjFf35x1X0/zd+kxB\n3mfa4xp9+4YgZVgPgIZbeSRrDmuCRUB9wcVek9banhFZ5seMPqYYrr8rUGdubHJQ\nUvVnQ8yiTbzlkLrpgHbu1TPqXBF3IcaK7fP9qLaqierMd7GyfOcWSGIwFK5dl+0B\ntXcCwTzV/v1S4yL4xmAdrvsgzaBtI+eYzkFo/5B/B6QBQ3KgqTUolha+EJ3UsVmV\nS8DY2xLqgYABe62JEZJrE7cXy4zAc0fXpqkf6hkRhxJdDjq0yjD6GVNMz9Imzf9c\nJe+it6vLJn+wVNshVSBg0mRssFcMrhxaEXg0wwIDAQABAoIBAQDDnZTSx9qeweI+\nD+2Rs60+HLgIrImQ3W7w17B+nxIxciz7p8cMiv/Jwjt2CZmK549P+fLhRg+M0Wph\nHZ9Op72D83/MU+InPjuX2YyAjtK9hymldkatx0Iwl0qbt5GRecU8SRJQHZ8PV9d6\nJXU4MZ8xXLeGMt+9A8iaE6ik0Jzwzkr+sBrr0lsBG5jkxz0imUY0OggYvSbseIDT\nJKfj0o68g+SgRWLxqf1jwC9an+QjJGUzZSrTMEIU5mdhRL6kmgyZo5kUJ8ATMhtP\n9j8U5i5glNSLuRoIXaRPH795xpOdM8O29htnbz4BTcaY3EBTtJR0TsApN9A4zUDK\nzD5xdwfBAoGBAOrR/v8eptpv5IOD+OU7IsSFZavpKLTSSFCDm96Kh2q8q+KKed/b\n0fafiZFK5q3OwLMjyY7QYUHg2umFB7OfUGv8Yk7qvYAlhxkPtMSnXJj7+lIhe+Yd\nk9oP5fnYnZ40v8oV6qdD8bkkeKS1rwwQrl+BxQc6OLDFckC86U/adH7xAoGBANv3\n926DMcNFPT0Zx2FHkSjH74IYcgX1dsrH3x+cODTBHyhICXlQsLY7F75Ir0hnBqMn\nQzz2N0DlN5udogFqYty/Yjyq7w0mIVDFe6k4moJHC5Kdh2vGCI6XTd4GCbcRVf+v\nP/YbgipUCF6m49TZZHJN0/64+cqxmi38WQNXqxbzAoGARhg3YRpaPjxGX0fGxU6Y\nu0cCqYVpBEj9EyOmJJD/iUoWmQIzDTLGAzNuUjOkll9wQEk/gmULkym2zxxJx0GY\nNRPamKoTtSv+numEUWuQBY66E0gxfuh3WRGD2cfijPY8Bevy5skuX9DWPnyJazWT\nh6jqEpU7lPDrgQ2jK5YPTlECgYB+2F82uzDXCfZmZZcz4bEzcxgKTU5zYTk/dkKU\nV+GRikwNTn0oF//PFgR7Fi798WtCakG7xb/XDFckxaHGbzLTWQmtMmTnkDVl/ntw\n+dMfjRh/U5fj7i7BCz876P9xMe4Fo2me4f4Nqqeo7VQ0SahCwd6d5M0mtYPTQNGT\nu9pNQQKBgQCQD+CChDGascYCGmuSDy4ok4wPDNu0dliRs7Txs691mvlQyUb5Mt7m\nu06nT78Iu2iFd+YPH2mL8lgAb63FN1LQ2BgNmvgw+BJ0FvTUixC2UJ00UFVWMoJ0\nsaedSdmnCjfjj3tf5w77P/5tjWWO/lGdW5o4u+SWS3olHjiOld4XAA==\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/kubelet.key",
                            "id": "d18f276c661c836f6024b1859daa50b6d6e3449b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.service-account-crt": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.service-account"
                    ],
                    "primary": {
                        "id": "5c0757995da9dd65997d5123d3d1075cbbb8f94f",
                        "attributes": {
                            "content": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx7jF4YuyA6OQCNppUEDp\n9vaQAwhbT26wOaX28J70r495M5oHpUv1eSBavPjO/iYa+2lygaw0TZi5AD9RQi+r\njn7qtf5FssLicW1ykekicCOlQivinfE9vPSMwNBNQw6RC0BJKE4CvboQaEycQMvt\n8P51PI4rqBueq6hKIstom3AK2u6ZHa0eLGosRIhTwRpkzsJ3NAFpIPiONsqgh5+/\nbfrNiPEpUwcK4fpBOi7M1T8WOlpkC79KotomMnGiysksLZoZsze0wF+OHd7v9dj9\nuG+Uk+bKXffy36fuMqFUGnVsFLhtGJDjWZGpvvFWtsKX6hvbD6C4ndVVsCoYnVOv\nuwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "filename": "assets/tls/service-account.pub",
                            "id": "5c0757995da9dd65997d5123d3d1075cbbb8f94f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.service-account-key": {
                    "type": "local_file",
                    "depends_on": [
                        "tls_private_key.service-account"
                    ],
                    "primary": {
                        "id": "9faa539cebb3b321b6e1162e287d0176b3667f24",
                        "attributes": {
                            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAx7jF4YuyA6OQCNppUEDp9vaQAwhbT26wOaX28J70r495M5oH\npUv1eSBavPjO/iYa+2lygaw0TZi5AD9RQi+rjn7qtf5FssLicW1ykekicCOlQivi\nnfE9vPSMwNBNQw6RC0BJKE4CvboQaEycQMvt8P51PI4rqBueq6hKIstom3AK2u6Z\nHa0eLGosRIhTwRpkzsJ3NAFpIPiONsqgh5+/bfrNiPEpUwcK4fpBOi7M1T8WOlpk\nC79KotomMnGiysksLZoZsze0wF+OHd7v9dj9uG+Uk+bKXffy36fuMqFUGnVsFLht\nGJDjWZGpvvFWtsKX6hvbD6C4ndVVsCoYnVOvuwIDAQABAoIBAQCUseuZveDeNrNw\n8/O+jWXjubSEnX8mB3nqobbVdPMllkMdeQtCNOhgswb7dJ7ft00Va2+WPbh/ITpz\nhbCg/07R+4oRz2ri6Zef7WWEXreGF/Pc7UF+Z/KYMNZuY2dyinDQmJ8fA92kldfL\nX2ZiE7JmX3y3hf3Y3h9nHBd+CkUqm5JjVlVoDiOYJr6a7suHGmaHum9M6UZ0crJC\nVmvwnNQ+3yGGpstCCUmFAcYnC8yh/I5jmEkVSodnu1YkpmhEMssd987yLVlUHqQ+\nZUcdhMk7kBEbXnEh4Hv4lGtejhtkbaS5RdtnqYJ3lSKNCuVJeLTo9O4YnW3RWi8r\n5Af3lMmpAoGBAOxJcAwX9peJR1DHC4oor9iavS8E5IhZR8pj+BNdg2gfxL/bhlbb\nsQ6YP68YuMkeT2a5sFRF3LqgveyvZ4Xp5oJ4RcvCZn6+2XoIiUi41PYS3AFV0MRT\niT5G0dbSRUSfXIc11cGGRsyij4hJUzyt8iXG6leFq2VBAMdtUoolF5+3AoGBANhi\nYtbh9vTo75VGoa9OD51VNg4B34WRg0MiJ09GWBs+TnrRx7hJRyPJ3G04sCzkNsKQ\nGgbjKyrV7J3+8QzLVkrS5lx8B8i0h3zmmuq7fKLR62vwA0+3xKbVr1hUgppIlQ+A\nCeKomT/j3+KVJctPy9ewMAYD3I8k5qS3ZTeI3igdAoGBAJ/gsOf97uRqBs8pXy2E\nijdNvGRsMxXvExxmuByiUZ/Knx4SM7vhutPdQHoBiEbNM3yWeDENdGTzDo9vv+Rk\nd4wgRVmxmBh6mjxwOjPynGZELIjav/+XZm21DZcFf8kG61yxmIjxikY8WFInCyMr\nr4TQKxA9adOBQD2wQwEmR+3RAoGBAM9oLtlNqotCIzNwilYgerMSFEgE352Fxs24\nlPlVseobJNpw7gDkrD3PpWtDpQrCjQKdYXUslhnvB2jCD4d19/ashIYtlMB62kuM\nNv28TFE86W2Cl4n32ZUYyYPfLXh5DffXgKIzfQFSiS0ETT+98uOBS+bYGLdUZYeJ\nConatSa5AoGAf942cdNTcuR/N/SI+VkmL5Azebxeaf8HDHvWzxfQDHyj7v1KlbkX\nVHPeAd+vqqGuX/G2rnCqeF1+5WrUvy6FTn6+382LSWAt0HKjQYwnL6KWX5ouSUBj\ni6id2XgV4EluN2HPJEw5sCn2CmyS2qWrPi8pQ1IGCoMiR5uiaPj1jxc=\n-----END RSA PRIVATE KEY-----\n",
                            "filename": "assets/tls/service-account.key",
                            "id": "9faa539cebb3b321b6e1162e287d0176b3667f24"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "local_file.user-kubeconfig": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.user-kubeconfig"
                    ],
                    "primary": {
                        "id": "896fd08baa46539a3dada93846cd9c6a7d04a5df",
                        "attributes": {
                            "content": "apiVersion: v1\nkind: Config\nclusters:\n- name: steve-cluster\n  cluster:\n    server: https://steve:443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\nusers:\n- name: steve-user\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPakNDQWlLZ0F3SUJBZ0lRSHg2V21Sa1hVNFdlalh1cUJtUlcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUNzeEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6Ck1SQXdEZ1lEVlFRREV3ZHJkV0psYkdWME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXljVVl0MEw2SXRoMmJES2V0RVFxK1M3QkRCQzgzMzlUakZmMzV4MVgwL3pkK2t4QjNtZmE0eHA5KzRZZwpaVmdQZ0laYmVTUnJEbXVDUlVCOXdjVmVrOWJhbmhGWjVzZU1QcVlZcnI4clVHZHViSEpRVXZWblE4eWlUYnpsCmtMcnBnSGJ1MVRQcVhCRjNJY2FLN2ZQOXFMYXFpZXJNZDdHeWZPY1dTR0l3Rks1ZGwrMEJ0WGNDd1R6Vi92MVMKNHlMNHhtQWRydnNnemFCdEkrZVl6a0ZvLzVCL0I2UUJRM0tncVRVb2xoYStFSjNVc1ZtVlM4RFkyeExxZ1lBQgplNjJKRVpKckU3Y1h5NHpBYzBmWHBxa2Y2aGtSaHhKZERqcTB5akQ2R1ZOTXo5SW16ZjljSmUraXQ2dkxKbit3ClZOc2hWU0JnMG1Sc3NGY01yaHhhRVhnMHd3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVUNDcUgweE1ndVBrRnRBWmdzMzhya2ZwdWxLb3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTGpiCjZselpmZ0hJQXJLdnE5YzhJaGtuQ0M3bDlZWlJTUHNPZWhxak0zQU40MHordnlXR3dSakh3dHUra1NvUS96dWcKSTBpSHFOV2RvYW9VNDV2THVoUFIyeFIxQWFrZG9RSHhCWjJ1K0J1Z1VYQzZ3KzE2MDJlZHUzVXBxWG9sZHVzSAorS0YrVDgzSGlVUk9udTlFRHlKK1J2QklrckxJKzU2UUI2N2o5S05ZSDZLNlNGVk1ITThodytNOVpIdEh3eEVCClhTb3BES2FhYWFyQmZPSXB0YWdxTWdYQkNrRGtBVFFjaHllSVhrdnhrM0FMSWliWHFjZ0RCU3JwK2ZjYXUwemwKcTVMWE4vZUF3TStwTWR4WlQ3NU5hS08xY011N3A4a0F0T0lmVWF1em1OOE1vN2hxNWhNQVBIazBVTU5FVW1WdgowZ0lTUnN1QnE3aUJtUmxyMFlJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWNVWXQwTDZJdGgyYkRLZXRFUXErUzdCREJDODMzOVRqRmYzNXgxWDAvemQra3hCCjNtZmE0eHA5KzRZZ1pWZ1BnSVpiZVNSckRtdUNSVUI5d2NWZWs5YmFuaEZaNXNlTVBxWVlycjhyVUdkdWJISlEKVXZWblE4eWlUYnpsa0xycGdIYnUxVFBxWEJGM0ljYUs3ZlA5cUxhcWllck1kN0d5Zk9jV1NHSXdGSzVkbCswQgp0WGNDd1R6Vi92MVM0eUw0eG1BZHJ2c2d6YUJ0SStlWXprRm8vNUIvQjZRQlEzS2dxVFVvbGhhK0VKM1VzVm1WClM4RFkyeExxZ1lBQmU2MkpFWkpyRTdjWHk0ekFjMGZYcHFrZjZoa1JoeEpkRGpxMHlqRDZHVk5NejlJbXpmOWMKSmUraXQ2dkxKbit3Vk5zaFZTQmcwbVJzc0ZjTXJoeGFFWGcwd3dJREFRQUJBb0lCQVFERG5aVFN4OXFld2VJKwpEKzJSczYwK0hMZ0lySW1RM1c3dzE3QitueEl4Y2l6N3A4Y01pdi9Kd2p0MkNabUs1NDlQK2ZMaFJnK00wV3BoCkhaOU9wNzJEODMvTVUrSW5QanVYMll5QWp0SzloeW1sZGthdHgwSXdsMHFidDVHUmVjVThTUkpRSFo4UFY5ZDYKSlhVNE1aOHhYTGVHTXQrOUE4aWFFNmlrMEp6d3prcitzQnJyMGxzQkc1amt4ejBpbVVZME9nZ1l2U2JzZUlEVApKS2ZqMG82OGcrU2dSV0x4cWYxandDOWFuK1FqSkdVelpTclRNRUlVNW1kaFJMNmttZ3labzVrVUo4QVRNaHRQCjlqOFU1aTVnbE5TTHVSb0lYYVJQSDc5NXhwT2RNOE8yOWh0bmJ6NEJUY2FZM0VCVHRKUjBUc0FwTjlBNHpVREsKekQ1eGR3ZkJBb0dCQU9yUi92OGVwdHB2NUlPRCtPVTdJc1NGWmF2cEtMVFNTRkNEbTk2S2gycThxK0tLZWQvYgowZmFmaVpGSzVxM093TE1qeVk3UVlVSGcydW1GQjdPZlVHdjhZazdxdllBbGh4a1B0TVNuWEpqNytsSWhlK1lkCms5b1A1Zm5Zblo0MHY4b1Y2cWREOGJra2VLUzFyd3dRcmwrQnhRYzZPTERGY2tDODZVL2FkSDd4QW9HQkFOdjMKOTI2RE1jTkZQVDBaeDJGSGtTakg3NElZY2dYMWRzckgzeCtjT0RUQkh5aElDWGxRc0xZN0Y3NUlyMGhuQnFNbgpRenoyTjBEbE41dWRvZ0ZxWXR5L1lqeXE3dzBtSVZERmU2azRtb0pIQzVLZGgydkdDSTZYVGQ0R0NiY1JWZit2ClAvWWJnaXBVQ0Y2bTQ5VFpaSEpOMC82NCtjcXhtaTM4V1FOWHF4YnpBb0dBUmhnM1lScGFQanhHWDBmR3hVNlkKdTBjQ3FZVnBCRWo5RXlPbUpKRC9pVW9XbVFJekRUTEdBek51VWpPa2xsOXdRRWsvZ21VTGt5bTJ6eHhKeDBHWQpOUlBhbUtvVHRTditudW1FVVd1UUJZNjZFMGd4ZnVoM1dSR0QyY2ZpalBZOEJldnk1c2t1WDlEV1BueUpheldUCmg2anFFcFU3bFBEcmdRMmpLNVlQVGxFQ2dZQisyRjgydXpEWENmWm1aWmN6NGJFemN4Z0tUVTV6WVRrL2RrS1UKVitHUmlrd05UbjBvRi8vUEZnUjdGaTc5OFd0Q2FrRzd4Yi9YREZja3hhSEdiekxUV1FtdE1tVG5rRFZsL250dworZE1malJoL1U1Zmo3aTdCQ3o4NzZQOXhNZTRGbzJtZTRmNE5xcWVvN1ZRMFNhaEN3ZDZkNU0wbXRZUFRRTkdUCnU5cE5RUUtCZ1FDUUQrQ0NoREdhc2NZQ0dtdVNEeTRvazR3UEROdTBkbGlSczdUeHM2OTFtdmxReVViNU10N20KdTA2blQ3OEl1MmlGZCtZUEgybUw4bGdBYjYzRk4xTFEyQmdObXZndytCSjBGdlRVaXhDMlVKMDBVRlZXTW9KMApzYWVkU2RtbkNqZmpqM3RmNXc3N1AvNXRqV1dPL2xHZFc1bzR1K1NXUzNvbEhqaU9sZDRYQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- name: steve-context\n  context:\n    cluster: steve-cluster\n    user: steve-user\n",
                            "filename": "assets/auth/steve-config",
                            "id": "896fd08baa46539a3dada93846cd9c6a7d04a5df"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.local.default"
                },
                "template_dir.bootstrap-manifests": {
                    "type": "template_dir",
                    "depends_on": [],
                    "primary": {
                        "id": "6a3cc7f17b64c83ad761d4cea8c2feec5f0686fa",
                        "attributes": {
                            "destination_dir": "assets/bootstrap-manifests",
                            "id": "6a3cc7f17b64c83ad761d4cea8c2feec5f0686fa",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/bootstrap-manifests",
                            "vars.%": "6",
                            "vars.cloud_provider": "",
                            "vars.etcd_servers": "https://n2.steve:2379",
                            "vars.hyperkube_image": "k8s.gcr.io/hyperkube:v1.10.1",
                            "vars.pod_cidr": "10.2.0.0/16",
                            "vars.service_cidr": "10.3.0.0/16",
                            "vars.trusted_certs_dir": "/usr/share/ca-certificates"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "template_dir.calico-manifests": {
                    "type": "template_dir",
                    "depends_on": [],
                    "primary": {
                        "id": "64a49eb0e70e0b417a6c5fd6425a2358d778a4f7",
                        "attributes": {
                            "destination_dir": "assets/manifests-networking",
                            "id": "64a49eb0e70e0b417a6c5fd6425a2358d778a4f7",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/calico",
                            "vars.%": "4",
                            "vars.calico_cni_image": "quay.io/calico/cni:v2.0.1",
                            "vars.calico_image": "quay.io/calico/node:v3.0.4",
                            "vars.network_mtu": "1480",
                            "vars.pod_cidr": "10.2.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "template_dir.manifests": {
                    "type": "template_dir",
                    "depends_on": [
                        "tls_locally_signed_cert.apiserver",
                        "tls_locally_signed_cert.client",
                        "tls_private_key.apiserver",
                        "tls_private_key.client",
                        "tls_private_key.service-account",
                        "tls_self_signed_cert.etcd-ca",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "047787b3248619b78956482a3ddff3de8b0b4736",
                        "attributes": {
                            "destination_dir": "assets/manifests",
                            "id": "047787b3248619b78956482a3ddff3de8b0b4736",
                            "source_dir": "/opt/cluster-config/terraform/.terraform/modules/1268155a8536ceb6a67e36bc920af835/resources/manifests",
                            "vars.%": "21",
                            "vars.apiserver_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0akNDQXA2Z0F3SUJBZ0lRRTg0a3J2eVBkQWxNUExQUUpNYmpQekFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TVRKYUZ3MHhPVEEwTWpVeE1USXpNVEphTUM4eEZEQVNCZ05WQkFvVEMydDFZbVV0YldGemRHVnlNUmN3CkZRWURWUVFERXc1cmRXSmxMV0Z3YVhObGNuWmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTC9qYkhIUnFuckhVUDI1dFgzRElJaVRQWWd0VWR3akZBNUpOTXIzNXNHaVJLcG02T0tCUkd5QgpsWHNZVHVjMmFNWGhxZVNhSWR0akFLSGhVTXVuYnFoSTlZdlAwaUdkSG5ENDdOOWtGWmdNWXpQcE9CR3o0eFBvCkxiNUw1K1o4MGhPMVhrMTNOdVhWN1hoMzAxWUZLczdjTnJsbmNqZ0x1TVhBNlRITk1kWFNkbXh1TEo5M21mZUwKdWtOc0VtaVF6Qmk5SUFqMEFaeWRoejBMSHgxVEhXN21EQVVKUzkvcmc3MjJjTlZ2cm04bHNXOVg3ME1GbmhVRwpJVEV4MFNLSE5hRk9tL1R5T21peERUbHdFcFRJUXhBdnA0aE1Xd2dIYkpRdUZBWm9lWXl6d3I1dWdBOWVkSWZVCjlsQnQxdDhtZ0tPbk5SelE1RlNjRjgzaGIxTWE3QzBDQXdFQUFhT0IxekNCMURBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpId1lEVlIwakJCZ3dGb0FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd2RBWURWUjBSQkcwd2E0SUZjM1JsCmRtV0NDbXQxWW1WeWJtVjBaWE9DRW10MVltVnlibVYwWlhNdVpHVm1ZWFZzZElJV2EzVmlaWEp1WlhSbGN5NWsKWldaaGRXeDBMbk4yWTRJa2EzVmlaWEp1WlhSbGN5NWtaV1poZFd4MExuTjJZeTVqYkhWemRHVnlMbXh2WTJGcwpod1FLQXdBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnBtL21FK2JNZWhSb1NyUC9BNG1FTmVhZjYwNC9WCkZtcTR0UzJaNmtxUThjYjdSN0xDamNRMTE0MVdJUDI3WjJuYnZPdzJJbVpjWExOY1hkNktOYmFjRFJhSHY4Vy8KVVg0NDc0cEhBMXJlUml6UGRXRUEvWkhxRU5wVXFsci91R2d0LzdKZmVMTGZSdlQwTXpUSzFyM252aUhWU1U3aAovZ2FsampjdndHMEN5VkNHY2VVSEtLVlRud01mWXdmK3NSTGNwTW5laUJpdjBwVFBTdDFIWVZVT2Z4ZGNoZHNLClF6aXRwalA3b0M0d1RLTHZ1Mi9lYWx6NGxtaUJTS1FFbG9WcnlQMlYyTXNndzVIWnE3NEhtY2Fnc24yVjdmdS8KVVlKYUhHY1N0VVVhdUlOdjVpWUgvYXZ4Y3l2QUk1TEt2RzBHb3ozNXhkbTRSV1lycXgzVDQwdGcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "vars.apiserver_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBditOc2NkR3Flc2RRL2JtMWZjTWdpSk05aUMxUjNDTVVEa2sweXZmbXdhSkVxbWJvCjRvRkViSUdWZXhoTzV6Wm94ZUdwNUpvaDIyTUFvZUZReTZkdXFFajFpOC9TSVowZWNQanMzMlFWbUF4ak0razQKRWJQakUrZ3R2a3ZuNW56U0U3VmVUWGMyNWRYdGVIZlRWZ1VxenR3MnVXZHlPQXU0eGNEcE1jMHgxZEoyYkc0cwpuM2VaOTR1NlEyd1NhSkRNR0wwZ0NQUUJuSjJIUFFzZkhWTWRidVlNQlFsTDMrdUR2Ylp3MVcrdWJ5V3hiMWZ2ClF3V2VGUVloTVRIUklvYzFvVTZiOVBJNmFMRU5PWEFTbE1oREVDK25pRXhiQ0Fkc2xDNFVCbWg1akxQQ3ZtNkEKRDE1MGg5VDJVRzNXM3lhQW82YzFITkRrVkp3WHplRnZVeHJzTFFJREFRQUJBb0lCQUNSeHJpUUQzU3dLZFBCcgpkL1BWdm5VUitlckdLTGoxbEphT0FzL1Z1MmJsU2NOUFhrVytwVjh5VVZDYXNrbXBoTWFvY0ZyeGh5S2lyL2tPCjBRaU0yVEJ2QXV1MTRjUHVrbHlFZW9DSEFxN3BFMkpGbGhlT29iOGpKcVR3eDY5MzMzSk16UWRMY0FyQTBhUkMKcGNtOW0zN0VSa1I2U0RBcTBjSUZQSVR2NHRvb0ZTQVRRNkxJWVlzN282YWNrcUlhQU1jM3U2QVFQUzVkRENQTQpWR0JDNWVUc0FLc1FSOTFuNXlsbkRhUDQvd2xjN1RVdUMzVXdQVmtFdGVqcGxjK0I2Z0dMUW54TzlwTFV3NmI2CmhKRnp0S05udjJNanVCQXpDOEZhSFN0M3pjcTNjNXhWSlBVMjFTTjlobFhwdkQwQWllMitldjFLb09hZGR4S04KdEg0a1NZVUNnWUVBOWNPdkVjeXRPMzF3RkNWeU5FWTJsWEJ6Y1NJM21ZbkFkUklNN2IyZHhyKzZmenhzRlE4TAplUWwrcVhaOTU0UUtGWkMyMzVTVlU0aEErNTc2YkYwc2tLTWV6Q1MrVDR5aXhHUkdpdVNaOHNmZ2pWeEhQbzdECmhrWHFtT3FrU1dsV1RoSjRGM2krdU1jVVB1QVlQZU1rdWN4dUFTZ3l4Wk5MYWJ1cVRXT3JGc2NDZ1lFQXgrRlIKb2FrNVRVVXFERjlBY3diaDBNaVJYUGM3MExwUktaamZ0V3g1bG5KQWpyY3gydE5FQnlPNmxkZ3lFZVltNDNZKwowYlVtVjFFYWUwaE82RnVrOFhrU0FtQlpYMnNOZVBIVVZGVWZ6OWFGOVpDTTN3VkRrazBTeVo5QXgyRHdNaTZ4ClZvQ2ZFV2loRm5pS0NuV0Z4MG1SbGZGQW8yTldDS3RYd0U1UllXc0NnWUVBNTRoNWNMMXhIckNvWEhLQ3l6aXkKeDhydkYxQnpMUlVYMmJNdHR2U0NwZkdQRTd1cTM1UVM3TzdEQTRmOFNaYWRvWDk2cWR4amFoVGRrN0JNb0xhTworNXlSc1NXVW5ZRVMvdzZ4WHJ6TFJHeUY0dWRpdjA3a2FhV0l4Sk9hUHdjY0plVkVlbWhvMWMvSUJRdytDbC9xCkE1alNzZ2hhL01RdHNlajVJbnVaZlpVQ2dZQnFXWEtMcDNSN3JvOCs0ZmR5dkhpdUUrbDBJMy9LQVRocC81TVgKL3MxNnhQT2dlOHlrOTcrOFpNQkVOakg5NEExVS9YZFRNU1ZqVkIzWTlwSTFnMzF4bGMrRlFDcU5ZSEpjcFo4cAo5OWpqUnVzankzT0l2azVEcTRxUmlKQjVCUlVJUGx2UkFNS2lDcCtiU3l0M2dTeGE2c1B4bWRtZ2xad1RKTWVkCjVJM2NYUUtCZ0JNdTRSYU8wR29CZW5FZi9qQi92aWw0NDMwZnpXQTQrREs3eTdKNk1na052clNlUGl1eGhWMk4KbHJra0VlNWw2cGljMGVhTjFIUkNPaDhLdmV0dTI1NUhRMEhBREtnaUxMK1QrM3czbkRxVk5pVWN1RTQyYWZOZQp0bzRIZDFHN0dqUHQ1ZlkwcEtkY1NSSllTd084a3N1bDhxd0lDbGFJZ1kxVm9lYldaTTRBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "vars.ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRRE5pMEFSK1hIMUVMclFMeitkc0JJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVJFd0R3WURWUVFLRXdoaWIyOTBhM1ZpWlRFUU1BNEdBMVVFQXhNSGEzVmlaUzFqWVRBZUZ3MHhPREEwTWpVeApNVEl6TURoYUZ3MHhPVEEwTWpVeE1USXpNRGhhTUNVeEVUQVBCZ05WQkFvVENHSnZiM1JyZFdKbE1SQXdEZ1lEClZRUURFd2RyZFdKbExXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhPKzkKbE1UT2JuSjJDSXVZMUF5dG9ybzhJbWhIbUNQZ3lQb0dHVHlvSzFlMnNTLzE3b3cweUtnV3dCVFpkNjRhVDJtdgpzYk5Ra21WZFVTNXdaUG45ejczaE1RUFJYaWN5dnpORkRDWGk5Mnh3YVhkQlpXczQ3bzNLcW93aytoRW1hcUJECjVmeGRiWi9qTkRDSFEzdVQ2UUxrWmRCVUF2SUF0Zjh2ODFUZHh6MVBmdENRVzdFaFpuRG9mOFZTVHNXa0lHeWgKN2gvRW1wR2d3UE83N2tNY2wvRDF0Mm9qOWxZQ2RGdHhtbXVyUitWNUxUSXU2OFBZVUNyVDVJb0Q3Nmg1d2E5bApTOGtPQ0k4SWVLS0ZaUmRHaG52K1JwbkJ6QmZVK3BKdi9YdUlKM0F6L05Ic2JMK29HSzRxWE1uT0xnREZIRWJ1CklMcWwvWkpyQTloUWFSREwxUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQ0NxSDB4TWd1UGtGdEFaZ3MzOHJrZnB1bEtvd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR0xtSVpYKzd0ZDBpRlBvWXQvOU9qWFdROUM2VzNYdExHRzYvcFo5NVRmUzFZWk9vbFFJCmlCY0M3aUNUWHZ3TU5KSFZZaDdVS05XRHI4VmRmQWlZaVl3U0ZnSkM3S2dteHJhcTVERFVmQU5ER1YweG9tNnEKbkVEeDJUVmZUMFVuSDNMMmV3VTFCQ3Y4ZHdMS243SDJZSXJBd0t6R244akdDWmRHejAwMXpGYnBXekcxdU9xTQo2N29XRWZESzAzbEJCS21kajlUQ3FNd2hJZHBTOTRjN0tjWDdWZXBma3dBeG5BV0g2RjRPaytQTHo3blRkOFNBCkJoajlDSmhiUDQ5K2thSVZ0aUJLa2czZndHZmpSeG1JTk95MXRsOWV5bnAweGhsNi90cTFiMlNxRitwUk56cDAKajBKN1lCeCtjYVZ6TndhbHZlUHBHQ2tTWTV6RTRUUlh1TWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.cloud_provider": "",
                            "vars.cluster_domain_suffix": "cluster.local",
                            "vars.etcd_ca_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQWZhZ0F3SUJBZ0lRUS9wY0J1Sk5WcHVCL0VYOHk1VFFIVEFOQmdrcWhraUc5dzBCQVFzRkFEQWgKTVEwd0N3WURWUVFLRXdSbGRHTmtNUkF3RGdZRFZRUURFd2RsZEdOa0xXTmhNQjRYRFRFNE1EUXlOVEV4TWpNdwpPRm9YRFRFNU1EUXlOVEV4TWpNd09Gb3dJVEVOTUFzR0ExVUVDaE1FWlhSalpERVFNQTRHQTFVRUF4TUhaWFJqClpDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNYTlCTmxZaU9MVTFpNVIKaWlFWUVmWjVvWDNGNWIzL1dqdm1QbFFDRjY2MjE4QUNvNlhNWVhmOHNyT2c2TEZKdnZVeWUydE9jc05NWXQ4cwp5QUxPWm5xOCsrc2FZK1N5V0hOZ2Q5NS9NeGQ5aDlWbENhRWpyRzVIRkJUS2ZsTmxHODdQODdPemptMlpmakh0CjZWdlRkd1ZtbEtDWWV6b0tINEVHallBcTRZM1N6anNYM1AzNEhqemhEMWVBZE41V3pjNm1rdm9zSDhZNkxkRngKRW1LZkdCN0NlMCswcHA4SWM4cXI5MWhoSWdXTzdJU1FEY1RVZGlJMm9PUlMvZnp1SWlOTC9WL1BYdXIzK3N1QQpQUHVzUG5uMDUxdXY4YjY4MmlSQnp2YVNBMWlnUXZLMmZRWUJzNmMvZ0pCWE9MVlM1WDgyNHUrcWM3ZUVsdXJ6CjdBdVA4bkVDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKSFFZRFZSME9CQllFRkNYMTZJRTY2a29SUE96ZFExV2FtdzFTZE5vWU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUNpdEF4Zml2MmpxYmR0L1hqbUNyMktrUFI3QkpZNGxmZ0xRUEt4b1AzZ1g3dEt6UHlXVStQV3krWWcrWmRDCjFUU0p0OUQ2R2xwM2hxUSszaVZQWHl4cFo4UTRjUzl4d0dxUHNOS0RKeFplRjJQNEM4NndDbXE5dDFXRWRXRksKd2xNeDhJQm5kbWkyRjJmS3MwOEhtdHZrZmZtQW1DampUcjQ4eHlqR1lWaklFajQrRllhdW1uNC9kRmRPOTNvUwp4aFp0NEFScm5WYTVXbkkydWlzTEhNV2pDS2lWTm15V20xQnJjS3M3d1JidkxvcGNQd21aT3ZTdlA5UEN5MEZOClczMG00a1V2b2JiOWZsN3hXMDNEbWVnNStYMm5nWmE5Z3dNTExva0gxN28ycXlzNnU2cDhYRlR3MUVVVTdBYnAKblk0VitFUlFOaFF5TDA5T1lmeklhd1ZWCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "vars.etcd_client_cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRTUxzb1RNV3N5czBHOThqL1V2d3JGVEFOQmdrcWhraUc5dzBCQVFzRkFEQWgKTVEwd0N3WURWUVFLRXdSbGRHTmtNUkF3RGdZRFZRUURFd2RsZEdOa0xXTmhNQjRYRFRFNE1EUXlOVEV4TWpNeApNbG9YRFRFNU1EUXlOVEV4TWpNeE1sb3dKVEVOTUFzR0ExVUVDaE1FWlhSalpERVVNQklHQTFVRUF4TUxaWFJqClpDMWpiR2xsYm5Rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMyY1hsdGZpSzYKSGN3UFVsWG9seDRPeDZ2RWN3aGw0a0pwZlB0a3ZXaCszR0c0L1loamJBaUtWUlRhV05FT2RBWlZTb1M2U1c5SApPbTQ0SUloeU5PeStHT2V2UlN3T0d5ejVTNTNrWUwyUHRxVVJoMXB2VDNyTXhzazl1OWYyQ2tMREJ6ZlE3MmZtCjc0TStPWkw4RHpFdGZoNzBaTm9RWUhXNGdDQURqak9Za1B1dkV6bC93Z2N6RktCUGZsckdoc0hzU2F0aytBNjMKeWFudlNML2ZCYkIxNUFSbVBKZ0lCaG5YQ1BtOW5XaVBUTVBDTnE5aTFDTy9TWWo3N0U4R083dnpWT3RiRXFOMwo5MEJEb0kwV1hEbVlvUk1FMlBDdzZCMHVzcFRHV2JENE5iazVzZ3NFVmVrY0pDd09iSW8zeGNZYjFFcGRWM2RnCkdIT2FtWVBVMkFGQkFnTUJBQUdqZ1ljd2dZUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkNYMQo2SUU2NmtvUlBPemRRMVdhbXcxU2ROb1lNQ1FHQTFVZEVRUWRNQnVDQ0c0eUxuTjBaWFpsZ2dsc2IyTmhiR2h2CmMzU0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCbkdzRVAyNVM3ZVhYekhFNG1zd1ozdXR6anoKdSt1YlhnK1J1VTE5ZTZLemtVNkxyM3Q2a3hnMWJYNTJzUHVIYjNUaVphNW1hRHc2QTFYckl4QnBGamsrbUNPWQpwUFdGMC85K3R1cDlhUTZVQVRDUE56cFJnYk1GR0oyWkJJRlFXbW1aVEMreWtIMU16Wm5Hd295dHJuN0dDeUxzCjFnWWFxRlJoNVNoZWt4UFVWVU9raDkweUdGTnZGckZURC90SkpxYlc4bktGVE5laS9rQXhxRDlSMXJkQUlobzUKaEkyVDlpS2tUMFdiRlVIeTRTRkpzam5QQVZRZ0lFZmhneGNUa092M3N1ck5ZTzJMQTFZdGFVMVVDVTNQNUpKUwpMaTBGQ0V5MmxLZmZOYm1VOG5rQkd6aURudG92Nnl4TTgza0w2V3p3TCsydVdld0dZR1dLYm1mM1krTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "vars.etcd_client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdG5GNWJYNGl1aDNNRDFKVjZKY2VEc2VyeEhNSVplSkNhWHo3Wkwxb2Z0eGh1UDJJClkyd0lpbFVVMmxqUkRuUUdWVXFFdWtsdlJ6cHVPQ0NJY2pUc3Zoam5yMFVzRGhzcytVdWQ1R0M5ajdhbEVZZGEKYjA5NnpNYkpQYnZYOWdwQ3d3YzMwTzluNXUrRFBqbVMvQTh4TFg0ZTlHVGFFR0IxdUlBZ0E0NHptSkQ3cnhNNQpmOElITXhTZ1QzNWF4b2JCN0VtclpQZ090OG1wNzBpLzN3V3dkZVFFWmp5WUNBWVoxd2o1dloxb2owekR3amF2Cll0UWp2MG1JKyt4UEJqdTc4MVRyV3hLamQvZEFRNkNORmx3NW1LRVRCTmp3c09nZExyS1V4bG13K0RXNU9iSUwKQkZYcEhDUXNEbXlLTjhYR0c5UktYVmQzWUJoem1wbUQxTmdCUVFJREFRQUJBb0lCQVFDVkJnT0ZxRzU5VURHSwpvbHFCN2s0akRINEZyV0RDdUJvL1NGT2dhZ2FjK1M3cGlFNkx4NGNDVjVUODlXZHVRdCtaYzVFUENVVFlEYVpTCk9tQzV5UGxJSGRmQmx1THhjc2s5cU1LRDlYRmhubk1lNmt5NGQxZDdSVFRFTkZlbkphSjY0NzUzNzlZVEVMbEgKYm9mZFZCdDdhWFduYzJtYnp1N1prZTZVZU9jMFNuWnIrQ056SmhGb1VKWkMrcytVdk1kazBIbFVnMGdIZTRPZAphR0hjcG9JWG1aMW1jRHV6K1pnYmU3WDVLL3dlVjRZVThPVHc1bjVzQ1VtMm9hSDlUUUxyN0MzZ0VLVXpHK3pICjd0b05RdjErbFVGeEV1YkNBYzFkWFRmK2gyZVFiSkZNTWpDdmJFZGgyOERpU1R5elBpODZDVC9FUERjOEhyU2EKZnowd09vcHhBb0dCQU1TMytHQ0JyRjgwVFYyemdMMHphbFBhMUFHbWJiMkpadDZ5QWR2VVJCNlJSQjlobStZbgozQU4rT0kwQ0ZCeXRrM0hkVm1iQy9GenNBaFBDUGlJTXZyN2lOY2ZHU0t2bzlvVUFQOFk0ZEJjYnhTdnFlbS9hCjd2aHc4VkdKTVJSWE4weWtlTklSbXpvKzdmeG1BckorbG1rWm9xRmZobG9sSGxuTHIzZGwxRGQvQW9HQkFPMXMKTjhyTmFlOVFudWZFM1JxQnM4Ry90RGtTUHFrTG9aUXB6Y3BLTDI2cXZnNU1NeDE1VFkwMU1vS040c0ZnNUwxNAp6YmhGTWNmWW5oQ0RTbmxEM1padnkwb0NldkNzWmZzQU9BRUVoZEdrWW96RUUrYm5DSXVQN2VJdVRHa3NZbWJnCi9yUVNlblJXekZDSHllNWpmbHBzMVorRUFVMVJoVDFtcnJaejFpYy9Bb0dCQUo2anlkNXgxSU0yVjRuUC8yc1UKOHBOTExwdGlEcS9DQmI1amlSSXhmUG0xcGwwMFJ4ZjFYdjFHSmU2NUZXVUhLWmV5cWtIV3p0TlUxRndBMGtCOQpUTG45RE9mZFpLK1dBRy9EZ3Fxa3ppSHdtREpSTm9uTDRkbGlvNGxnZkw3dGtyL3hCeXBKWG9nN1JZcTg3VUhxCnlmdFozQWdOVS9pUVpJaC90VEl4WVZHYkFvR0FSK0hWMm43cXJkd1k0RThJS2poT3RrQldUbGtwdzRDVUFRblAKRm9uelptd25jcWk3YVJjSzFjL2ZaUXVVTmJ3aVJRTklOWnd0Z0RZalZSaUsrY0FFWE1Hb0tOWXJacWFya1p6MQpWOG1Jd25va3BEM1JVTDF1SnVNQ3dOSUhyR2dWdXRRd0NWRDI1alpKVWJCckFOUDZzMkgwSTRHUjYxamRJRVB3CmJha1FrMzBDZ1lBZXRWeHB4NVBZMzNabTZ6eFErSmFyWjdPTUJSZkpaNFdkQjJKUXAweWNlUFJRaTVKUTVYbS8KLzgvUjlrMGdjZ09nd1l3VzVhMzBpOHR1M2FjUVlrdGdONjAvdE5YdTdrMW8wdkQvcVdVTTlRSXMxMXNzeUFQUwo2TU1DWGw5aE93amFZOFgzN2RDazFFbnFKMXJmZThrNURUcmR0ZkxOR1FvekJYRDhtOUJvdlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.etcd_servers": "https://n2.steve:2379",
                            "vars.hyperkube_image": "k8s.gcr.io/hyperkube:v1.10.1",
                            "vars.kube_dns_service_ip": "10.3.0.10",
                            "vars.kubedns_dnsmasq_image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.9",
                            "vars.kubedns_image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.9",
                            "vars.kubedns_sidecar_image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.9",
                            "vars.pod_checkpointer_image": "quay.io/coreos/pod-checkpointer:9dc83e1ab3bc36ca25c9f7c18ddef1b91d4a0558",
                            "vars.pod_cidr": "10.2.0.0/16",
                            "vars.server": "https://steve:443",
                            "vars.service_cidr": "10.3.0.0/16",
                            "vars.serviceaccount_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeDdqRjRZdXlBNk9RQ05wcFVFRHA5dmFRQXdoYlQyNndPYVgyOEo3MHI0OTVNNW9ICnBVdjFlU0JhdlBqTy9pWWErMmx5Z2F3MFRaaTVBRDlSUWkrcmpuN3F0ZjVGc3NMaWNXMXlrZWtpY0NPbFFpdmkKbmZFOXZQU013TkJOUXc2UkMwQkpLRTRDdmJvUWFFeWNRTXZ0OFA1MVBJNHJxQnVlcTZoS0lzdG9tM0FLMnU2WgpIYTBlTEdvc1JJaFR3UnBrenNKM05BRnBJUGlPTnNxZ2g1Ky9iZnJOaVBFcFV3Y0s0ZnBCT2k3TTFUOFdPbHBrCkM3OUtvdG9tTW5HaXlza3NMWm9ac3plMHdGK09IZDd2OWRqOXVHK1VrK2JLWGZmeTM2ZnVNcUZVR25Wc0ZMaHQKR0pEaldaR3B2dkZXdHNLWDZodmJENkM0bmRWVnNDb1luVk92dXdJREFRQUJBb0lCQVFDVXNldVp2ZURlTnJOdwo4L08raldYanViU0VuWDhtQjNucW9iYlZkUE1sbGtNZGVRdENOT2hnc3diN2RKN2Z0MDBWYTIrV1BiaC9JVHB6CmhiQ2cvMDdSKzRvUnoycmk2WmVmN1dXRVhyZUdGL1BjN1VGK1ovS1lNTlp1WTJkeWluRFFtSjhmQTkya2xkZkwKWDJaaUU3Sm1YM3kzaGYzWTNoOW5IQmQrQ2tVcW01SmpWbFZvRGlPWUpyNmE3c3VIR21hSHVtOU02VVowY3JKQwpWbXZ3bk5RKzN5R0dwc3RDQ1VtRkFjWW5DOHloL0k1am1Fa1ZTb2RudTFZa3BtaEVNc3NkOTg3eUxWbFVIcVErClpVY2RoTWs3a0JFYlhuRWg0SHY0bEd0ZWpodGtiYVM1UmR0bnFZSjNsU0tOQ3VWSmVMVG85TzRZblczUldpOHIKNUFmM2xNbXBBb0dCQU94SmNBd1g5cGVKUjFESEM0b29yOWlhdlM4RTVJaFpSOHBqK0JOZGcyZ2Z4TC9iaGxiYgpzUTZZUDY4WXVNa2VUMmE1c0ZSRjNMcWd2ZXl2WjRYcDVvSjRSY3ZDWm42KzJYb0lpVWk0MVBZUzNBRlYwTVJUCmlUNUcwZGJTUlVTZlhJYzExY0dHUnN5aWo0aEpVenl0OGlYRzZsZUZxMlZCQU1kdFVvb2xGNSszQW9HQkFOaGkKWXRiaDl2VG83NVZHb2E5T0Q1MVZOZzRCMzRXUmcwTWlKMDlHV0JzK1RuclJ4N2hKUnlQSjNHMDRzQ3prTnNLUQpHZ2JqS3lyVjdKMys4UXpMVmtyUzVseDhCOGkwaDN6bW11cTdmS0xSNjJ2d0EwKzN4S2JWcjFoVWdwcElsUStBCkNlS29tVC9qMytLVkpjdFB5OWV3TUFZRDNJOGs1cVMzWlRlSTNpZ2RBb0dCQUovZ3NPZjk3dVJxQnM4cFh5MkUKaWpkTnZHUnNNeFh2RXh4bXVCeWlVWi9Lbng0U003dmh1dFBkUUhvQmlFYk5NM3lXZURFTmRHVHpEbzl2ditSawpkNHdnUlZteG1CaDZtanh3T2pQeW5HWkVMSWphdi8rWFptMjFEWmNGZjhrRzYxeXhtSWp4aWtZOFdGSW5DeU1yCnI0VFFLeEE5YWRPQlFEMndRd0VtUiszUkFvR0JBTTlvTHRsTnFvdENJek53aWxZZ2VyTVNGRWdFMzUyRnhzMjQKbFBsVnNlb2JKTnB3N2dEa3JEM1BwV3REcFFyQ2pRS2RZWFVzbGhudkIyakNENGQxOS9hc2hJWXRsTUI2Mmt1TQpOdjI4VEZFODZXMkNsNG4zMlpVWXlZUGZMWGg1RGZmWGdLSXpmUUZTaVMwRVRUKzk4dU9CUytiWUdMZFVaWWVKCkNvbmF0U2E1QW9HQWY5NDJjZE5UY3VSL04vU0krVmttTDVBemVieGVhZjhIREh2V3p4ZlFESHlqN3YxS2xia1gKVkhQZUFkK3ZxcUd1WC9HMnJuQ3FlRjErNVdyVXZ5NkZUbjYrMzgyTFNXQXQwSEtqUVl3bkw2S1dYNW91U1VCagppNmlkMlhnVjRFbHVOMkhQSkV3NXNDbjJDbXlTMnFXclBpOHBRMUlHQ29NaVI1dWlhUGoxanhjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "vars.serviceaccount_pub": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4N2pGNFl1eUE2T1FDTnBwVUVEcAo5dmFRQXdoYlQyNndPYVgyOEo3MHI0OTVNNW9IcFV2MWVTQmF2UGpPL2lZYSsybHlnYXcwVFppNUFEOVJRaStyCmpuN3F0ZjVGc3NMaWNXMXlrZWtpY0NPbFFpdmluZkU5dlBTTXdOQk5RdzZSQzBCSktFNEN2Ym9RYUV5Y1FNdnQKOFA1MVBJNHJxQnVlcTZoS0lzdG9tM0FLMnU2WkhhMGVMR29zUkloVHdScGt6c0ozTkFGcElQaU9Oc3FnaDUrLwpiZnJOaVBFcFV3Y0s0ZnBCT2k3TTFUOFdPbHBrQzc5S290b21NbkdpeXNrc0xab1pzemUwd0YrT0hkN3Y5ZGo5CnVHK1VrK2JLWGZmeTM2ZnVNcUZVR25Wc0ZMaHRHSkRqV1pHcHZ2Rld0c0tYNmh2YkQ2QzRuZFZWc0NvWW5WT3YKdXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==",
                            "vars.trusted_certs_dir": "/usr/share/ca-certificates"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template.default"
                },
                "tls_cert_request.apiserver": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.apiserver"
                    ],
                    "primary": {
                        "id": "6b6468f464072312159ee52746beacf994dd1180",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC/TCCAeUCAQAwLzEUMBIGA1UEChMLa3ViZS1tYXN0ZXIxFzAVBgNVBAMTDmt1\nYmUtYXBpc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv+Ns\ncdGqesdQ/bm1fcMgiJM9iC1R3CMUDkk0yvfmwaJEqmbo4oFEbIGVexhO5zZoxeGp\n5Joh22MAoeFQy6duqEj1i8/SIZ0ecPjs32QVmAxjM+k4EbPjE+gtvkvn5nzSE7Ve\nTXc25dXteHfTVgUqztw2uWdyOAu4xcDpMc0x1dJ2bG4sn3eZ94u6Q2wSaJDMGL0g\nCPQBnJ2HPQsfHVMdbuYMBQlL3+uDvbZw1W+ubyWxb1fvQwWeFQYhMTHRIoc1oU6b\n9PI6aLENOXASlMhDEC+niExbCAdslC4UBmh5jLPCvm6AD150h9T2UG3W3yaAo6c1\nHNDkVJwXzeFvUxrsLQIDAQABoIGIMIGFBgkqhkiG9w0BCQ4xeDB2MHQGA1UdEQRt\nMGuCBXN0ZXZlggprdWJlcm5ldGVzghJrdWJlcm5ldGVzLmRlZmF1bHSCFmt1YmVy\nbmV0ZXMuZGVmYXVsdC5zdmOCJGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rl\nci5sb2NhbIcECgMAATANBgkqhkiG9w0BAQsFAAOCAQEAGeG38BzieOE/M3Vlucei\n8xOL9KEBwCPcW1XVh4Gf7xb36HVs6Bk+JUfYaIvFoYt5/+moocycq9y/mtVGhzHY\nCnVs38fHwh6wGdtui40xwxq5VOlmFAU3Vl3PfBcWvnmKthGbwJHYaGOc5EI1wYVD\nYOFArn0rphl6sTUVJxDBwUav9/xSqjdf5l0f1vJPhKb6wnslrpRYbQbX55D+A5bn\ncLZWH/LPC914/qSnjO93mELMDonVeix5EXbfy7EugVhcjkqYHcDAtapKFa4Bg3T+\naqrCs28fdvtpIs2EsSyRFsyFQL/1dkjBFlXyndtrAwSQ3LxcdyZgxQdsgVWsktHc\nDQ==\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "5",
                            "dns_names.0": "steve",
                            "dns_names.1": "kubernetes",
                            "dns_names.2": "kubernetes.default",
                            "dns_names.3": "kubernetes.default.svc",
                            "dns_names.4": "kubernetes.default.svc.cluster.local",
                            "id": "6b6468f464072312159ee52746beacf994dd1180",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "10.3.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "5dcb56da97a31e64ea3d089e5f8794c63397a9f2",
                            "subject.#": "1",
                            "subject.0.common_name": "kube-apiserver",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "kube-master",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.client": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.client"
                    ],
                    "primary": {
                        "id": "9e527d6eba22e56e6b585488a727c8563d0d0a77",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICoTCCAYkCAQAwJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRjZC1jbGll\nbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2cXltfiK6HcwPUlXo\nlx4Ox6vEcwhl4kJpfPtkvWh+3GG4/YhjbAiKVRTaWNEOdAZVSoS6SW9HOm44IIhy\nNOy+GOevRSwOGyz5S53kYL2PtqURh1pvT3rMxsk9u9f2CkLDBzfQ72fm74M+OZL8\nDzEtfh70ZNoQYHW4gCADjjOYkPuvEzl/wgczFKBPflrGhsHsSatk+A63yanvSL/f\nBbB15ARmPJgIBhnXCPm9nWiPTMPCNq9i1CO/SYj77E8GO7vzVOtbEqN390BDoI0W\nXDmYoRME2PCw6B0uspTGWbD4Nbk5sgsEVekcJCwObIo3xcYb1EpdV3dgGHOamYPU\n2AFBAgMBAAGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCCG4yLnN0ZXZl\ngglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAA/iyiCSKVTrs05+\nLX+P9aZcogcB11tze1EJZzjyf/48/+2XYPt9rxEVjuwAYBMauOwwwJ1BUCP7QXAZ\nDoQjLjkwMYqyGG09e9bf+DlM5vuz6oEf3mYFyU2NxZ9Y/9vZqpeaUTHHO7+uroba\n/RRiing7QLxEXE4p95MF+jzPB3q2d2FlTv2Th3CZ4HgXekS9G2jgl6u8VT2EbRdY\nwpeNjVUkAcXFlQL4KG3j2suvIgOjYbUv/p6n92ybCamwjGBOh9d2Ax1DOlSAuvAd\n0Mea4zGIErQ84gE+4nyPrBweZ3NX9qrpEW+gx5MvY1XxiKAyyVIGJ/P6AgEB67zq\nVKcDndE=\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "2",
                            "dns_names.0": "n2.steve",
                            "dns_names.1": "localhost",
                            "id": "9e527d6eba22e56e6b585488a727c8563d0d0a77",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "127.0.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "e35a58fb65284213100d38b9095f0605acccbce4",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-client",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.kubelet": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.kubelet"
                    ],
                    "primary": {
                        "id": "48c625a5260653b21de7c47a0cbb13b698aaab02",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICcDCCAVgCAQAwKzEXMBUGA1UEChMOc3lzdGVtOm1hc3RlcnMxEDAOBgNVBAMT\nB2t1YmVsZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDJxRi3Qvoi\n2HZsMp60RCr5LsEMELzff1OMV/fnHVfT/N36TEHeZ9rjGn37hiBlWA+Ahlt5JGsO\na4JFQH3BxV6T1tqeEVnmx4w+phiuvytQZ25sclBS9WdDzKJNvOWQuumAdu7VM+pc\nEXchxort8/2otqqJ6sx3sbJ85xZIYjAUrl2X7QG1dwLBPNX+/VLjIvjGYB2u+yDN\noG0j55jOQWj/kH8HpAFDcqCpNSiWFr4QndSxWZVLwNjbEuqBgAF7rYkRkmsTtxfL\njMBzR9emqR/qGRGHEl0OOrTKMPoZU0zP0ibN/1wl76K3q8smf7BU2yFVIGDSZGyw\nVwyuHFoReDTDAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAgaSkxH30XFG2eR4T\nKre0RIeSwKDoZotW+851NNX4k3TN23xocxZy3xgQLXMR4k7tNg0hKf4FNjCd1HUZ\n/30hc+yx7ym2Ma9froOFWNb/BD6kBB5vdSmbg+FxALZfhrCnE1YZtO2IWQT1TYIO\nxErD+E+9QeeiBdofC4hIdMz4JTLV9S7DePKjFK+xlxVLBl5WwyYnkGoiBjG+8MM/\nKZdURKs+lKqtHnmXWniBy5VlR58CJxfNP98l5bLfs/Avy06TTo78TJb9grm8Un+U\nXwEGeGU82GaBLeNheJvIWxUb4SqVEYhbgEEbNM9DPNTXYqoCoNDj8cFtdbeXUjQb\nUMGsDQ==\n-----END CERTIFICATE REQUEST-----\n",
                            "id": "48c625a5260653b21de7c47a0cbb13b698aaab02",
                            "key_algorithm": "RSA",
                            "private_key_pem": "6183bdf2c2b79ac78aeb04fb780d573cc74478af",
                            "subject.#": "1",
                            "subject.0.common_name": "kubelet",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "system:masters",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.peer": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.peer"
                    ],
                    "primary": {
                        "id": "74ccd166618c4ab03d1fd84622e8a41703d1cbb6",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICjjCCAXYCAQAwIzENMAsGA1UEChMEZXRjZDESMBAGA1UEAxMJZXRjZC1wZWVy\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo+HQWuVuIQ5Cdxl9wzyh\n+qMYMdOUIVyHNo/OkzJ36RAix0LmBqhBoWbgemXG2AOcKmkYeTmI8X3rNM00clva\nHCd9EHbczMexJhxMaNGx6dcfmRsdB0i1N+nqgal6c7i86H5S60AczzElXjCtERhg\nP3bHU4rd1TvaHOU8xA4NQFAAE6/SshGs4gT1nsk8wAxwiGNGpgvzhkxmQ/IRaifu\nAJggD/lSHM9f4TwQbDNSbxljhgT5MH5s1QTV1tVY1H2rSMP12+M60uYqBXdX0wCH\nVTfj1RZyrUsA+4K3kzhVh/RNHW+N/Qqf7TH7bbtrNmJ/hvB2rI1wsGIw4FleCqws\niwIDAQABoCYwJAYJKoZIhvcNAQkOMRcwFTATBgNVHREEDDAKgghuMi5zdGV2ZTAN\nBgkqhkiG9w0BAQsFAAOCAQEAgw4myePuSZuo0OdZ43IdVHRzY4tpcbQnIl3UYrZ2\n8NF8gjgmeEEqLQqpW7SGxjC3Y7UcWe31gjN37Tr8Nik1riCmUi1ckGTZW6sy+8xQ\ncLQApantxebAxwDQCZZvwxyc3qD51NZ9FnWNBCxC21xQo9sgUZMoqOPox63Zef1G\nUQfG/k1wF0DycVOeShvUm5JBFh1CNurqVwQj7iCCDd9mi4euBVcdB1YkWdVudyIm\nl93uXCAhXwLni/eZZ7aKAh8MsRTWA9Akj+yuI7MiI3SSF+n6ZPuifUVIhkk4+NCe\nVIu/cRo6u7choAL7ohDE2p91n+OTck3F0PkAxoyPNBu9tA==\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "1",
                            "dns_names.0": "n2.steve",
                            "id": "74ccd166618c4ab03d1fd84622e8a41703d1cbb6",
                            "key_algorithm": "RSA",
                            "private_key_pem": "383b5e58c47bf6692fecbe7e30ecddbd92483510",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-peer",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_cert_request.server": {
                    "type": "tls_cert_request",
                    "depends_on": [
                        "tls_private_key.server"
                    ],
                    "primary": {
                        "id": "2a1a2bc20f087925614aeabe4a63c5a0ba76f0e5",
                        "attributes": {
                            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICoTCCAYkCAQAwJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRjZC1zZXJ2\nZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDWdJ/8jQJrbAyyVxkx\n8va326FTugLdewmnidGL7UzuKqqH14JyNjRuthsNeYPiinujGxZ6QLt0AUsC38Rl\njthPiMZWHbTwRroeDAVjVP3ug8hn6BC+BPmroTVpdpHM8fVRtgt50OuZjfLdsTdA\n+0bAtKebsHUU+5aY1X5ev8p5KWwWjFgLdT7bUnTQ2mpvvnXTYRHn430EMqcf93Br\nGLRfZy8VkfU0qQhiOMk4sFy9pvsO62YCfnL9T/avZnLWVPhLKjGK3p5t7lBablOM\nPUOJvvicW92Pkslhle3QhvwNEvskeDckBIwN1uNYuZBOrrUG73vJSfHhOE7OhPZ4\nPW/pAgMBAAGgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuCCG4yLnN0ZXZl\ngglsb2NhbGhvc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAGgHHuRAXwQMugVI\nWaHZWIIC0t4ksA71/ut2dLpq+jKTNOB0dq2m4T5WgRWtgEU8myVLBMWzIK2FzoSt\n5Pa27PAOyxcLY1x/v7gJ0Q1U4s/3w/+0XaPYbIquj7gcbLdIU4uvf4UJGDB96Lrq\nadYj95uXRVVku9U1n0x4FnjMXWP9to47J1NNHBoa1ks4orxbFRl3Pk9Ea42O3RRw\n/wU6PYf4bSdEzPhP5lhok8haBtMwbDPvmOE3TyWXU96f7v0rzZjHnW2OtL4YjXZ2\ni4uGMhob/QIcOV8aVxh/ZbABuVugZUgzwsxLjVS9+usryTrtEltsWOYrYcwZtYn5\nMsn3Log=\n-----END CERTIFICATE REQUEST-----\n",
                            "dns_names.#": "2",
                            "dns_names.0": "n2.steve",
                            "dns_names.1": "localhost",
                            "id": "2a1a2bc20f087925614aeabe4a63c5a0ba76f0e5",
                            "ip_addresses.#": "1",
                            "ip_addresses.0": "127.0.0.1",
                            "key_algorithm": "RSA",
                            "private_key_pem": "cf807709d789487d7967200ddcd5359d6647eece",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-server",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.apiserver": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.apiserver",
                        "tls_private_key.kube-ca.*",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "26325689103381231851989641951734850367",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "510eaf31c0bf4a13c551d39e8400cb1ac9e3fd01",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "54abf608dfb0c48daf6951de9e4d1d3918ad5f11",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDtjCCAp6gAwIBAgIQE84krvyPdAlMPLPQJMbjPzANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMTJaFw0xOTA0MjUxMTIzMTJaMC8xFDASBgNVBAoTC2t1YmUtbWFzdGVyMRcw\nFQYDVQQDEw5rdWJlLWFwaXNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAL/jbHHRqnrHUP25tX3DIIiTPYgtUdwjFA5JNMr35sGiRKpm6OKBRGyB\nlXsYTuc2aMXhqeSaIdtjAKHhUMunbqhI9YvP0iGdHnD47N9kFZgMYzPpOBGz4xPo\nLb5L5+Z80hO1Xk13NuXV7Xh301YFKs7cNrlncjgLuMXA6THNMdXSdmxuLJ93mfeL\nukNsEmiQzBi9IAj0AZydhz0LHx1THW7mDAUJS9/rg722cNVvrm8lsW9X70MFnhUG\nITEx0SKHNaFOm/TyOmixDTlwEpTIQxAvp4hMWwgHbJQuFAZoeYyzwr5ugA9edIfU\n9lBt1t8mgKOnNRzQ5FScF83hb1Ma7C0CAwEAAaOB1zCB1DAOBgNVHQ8BAf8EBAMC\nBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAw\nHwYDVR0jBBgwFoAUCCqH0xMguPkFtAZgs38rkfpulKowdAYDVR0RBG0wa4IFc3Rl\ndmWCCmt1YmVybmV0ZXOCEmt1YmVybmV0ZXMuZGVmYXVsdIIWa3ViZXJuZXRlcy5k\nZWZhdWx0LnN2Y4Ika3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2Fs\nhwQKAwABMA0GCSqGSIb3DQEBCwUAA4IBAQBpm/mE+bMehRoSrP/A4mENeaf604/V\nFmq4tS2Z6kqQ8cb7R7LCjcQ1141WIP27Z2nbvOw2ImZcXLNcXd6KNbacDRaHv8W/\nUX4474pHA1reRizPdWEA/ZHqENpUqlr/uGgt/7JfeLLfRvT0MzTK1r3nviHVSU7h\n/galjjcvwG0CyVCGceUHKKVTnwMfYwf+sRLcpMneiBiv0pTPSt1HYVUOfxdchdsK\nQzitpjP7oC4wTKLvu2/ealz4lmiBSKQEloVryP2V2Msgw5HZq74Hmcagsn2V7fu/\nUYJaHGcStUUauINv5iYH/avxcyvAI5LKvG0Goz35xdm4RWYrqx3T40tg\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "dd3031f9038b1cd7082a2e1ebab136cde9334b9c",
                            "early_renewal_hours": "0",
                            "id": "26325689103381231851989641951734850367",
                            "validity_end_time": "2019-04-25T11:23:12.607841207Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:12.607841207Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.client": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.client",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "64774720689123911692717417124444515093",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "4042e86f51904c6266191462fef5cb3d1b6ebb0b",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "9e2a973a6a831bfcd93c4f680d28f058e03a0ec5",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDWDCCAkCgAwIBAgIQMLsoTMWsys0G98j/UvwrFTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMx\nMloXDTE5MDQyNTExMjMxMlowJTENMAsGA1UEChMEZXRjZDEUMBIGA1UEAxMLZXRj\nZC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2cXltfiK6\nHcwPUlXolx4Ox6vEcwhl4kJpfPtkvWh+3GG4/YhjbAiKVRTaWNEOdAZVSoS6SW9H\nOm44IIhyNOy+GOevRSwOGyz5S53kYL2PtqURh1pvT3rMxsk9u9f2CkLDBzfQ72fm\n74M+OZL8DzEtfh70ZNoQYHW4gCADjjOYkPuvEzl/wgczFKBPflrGhsHsSatk+A63\nyanvSL/fBbB15ARmPJgIBhnXCPm9nWiPTMPCNq9i1CO/SYj77E8GO7vzVOtbEqN3\n90BDoI0WXDmYoRME2PCw6B0uspTGWbD4Nbk5sgsEVekcJCwObIo3xcYb1EpdV3dg\nGHOamYPU2AFBAgMBAAGjgYcwgYQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX1\n6IE66koRPOzdQ1Wamw1SdNoYMCQGA1UdEQQdMBuCCG4yLnN0ZXZlgglsb2NhbGhv\nc3SHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBABnGsEP25S7eXXzHE4mswZ3utzjz\nu+ubXg+RuU19e6KzkU6Lr3t6kxg1bX52sPuHb3TiZa5maDw6A1XrIxBpFjk+mCOY\npPWF0/9+tup9aQ6UATCPNzpRgbMFGJ2ZBIFQWmmZTC+ykH1MzZnGwoytrn7GCyLs\n1gYaqFRh5ShekxPUVUOkh90yGFNvFrFTD/tJJqbW8nKFTNei/kAxqD9R1rdAIho5\nhI2T9iKkT0WbFUHy4SFJsjnPAVQgIEfhgxcTkOv3surNYO2LA1YtaU1UCU3P5JJS\nLi0FCEy2lKffNbmU8nkBGziDntov6yxM83kL6WzwL+2uWewGYGWKbmf3Y+M=\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "12732644f3a59cedc4b29b376e5f9301ea2c8ce7",
                            "early_renewal_hours": "0",
                            "id": "64774720689123911692717417124444515093",
                            "validity_end_time": "2019-04-25T11:23:12.609347477Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:12.609347477Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.kubelet": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.kubelet",
                        "tls_private_key.kube-ca.*",
                        "tls_self_signed_cert.kube-ca.*"
                    ],
                    "primary": {
                        "id": "41364891266203174282525904631436171001",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "510eaf31c0bf4a13c551d39e8400cb1ac9e3fd01",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "54abf608dfb0c48daf6951de9e4d1d3918ad5f11",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOjCCAiKgAwIBAgIQHx6WmRkXU4WejXuqBmRW+TANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMTJaFw0xOTA0MjUxMTIzMTJaMCsxFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJz\nMRAwDgYDVQQDEwdrdWJlbGV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAycUYt0L6Ith2bDKetEQq+S7BDBC8339TjFf35x1X0/zd+kxB3mfa4xp9+4Yg\nZVgPgIZbeSRrDmuCRUB9wcVek9banhFZ5seMPqYYrr8rUGdubHJQUvVnQ8yiTbzl\nkLrpgHbu1TPqXBF3IcaK7fP9qLaqierMd7GyfOcWSGIwFK5dl+0BtXcCwTzV/v1S\n4yL4xmAdrvsgzaBtI+eYzkFo/5B/B6QBQ3KgqTUolha+EJ3UsVmVS8DY2xLqgYAB\ne62JEZJrE7cXy4zAc0fXpqkf6hkRhxJdDjq0yjD6GVNMz9Imzf9cJe+it6vLJn+w\nVNshVSBg0mRssFcMrhxaEXg0wwIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAwHQYD\nVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0j\nBBgwFoAUCCqH0xMguPkFtAZgs38rkfpulKowDQYJKoZIhvcNAQELBQADggEBALjb\n6lzZfgHIArKvq9c8IhknCC7l9YZRSPsOehqjM3AN40z+vyWGwRjHwtu+kSoQ/zug\nI0iHqNWdoaoU45vLuhPR2xR1AakdoQHxBZ2u+BugUXC6w+1602edu3UpqXoldusH\n+KF+T83HiUROnu9EDyJ+RvBIkrLI+56QB67j9KNYH6K6SFVMHM8hw+M9ZHtHwxEB\nXSopDKaaaarBfOIptagqMgXBCkDkATQchyeIXkvxk3ALIibXqcgDBSrp+fcau0zl\nq5LXN/eAwM+pMdxZT75NaKO1cMu7p8kAtOIfUauzmN8Mo7hq5hMAPHk0UMNEUmVv\n0gISRsuBq7iBmRlr0YI=\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "ba153ad53a66f657da67116ab5c2b1dcccae129b",
                            "early_renewal_hours": "0",
                            "id": "41364891266203174282525904631436171001",
                            "validity_end_time": "2019-04-25T11:23:12.713638986Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:12.713638986Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.peer": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.peer",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "254020582789027339221049758547196626335",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "4042e86f51904c6266191462fef5cb3d1b6ebb0b",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "9e2a973a6a831bfcd93c4f680d28f058e03a0ec5",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDRDCCAiygAwIBAgIRAL8ala4juLavNCJHPGRlxZ8wDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTJaFw0xOTA0MjUxMTIzMTJaMCMxDTALBgNVBAoTBGV0Y2QxEjAQBgNVBAMTCWV0\nY2QtcGVlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKPh0FrlbiEO\nQncZfcM8ofqjGDHTlCFchzaPzpMyd+kQIsdC5gaoQaFm4HplxtgDnCppGHk5iPF9\n6zTNNHJb2hwnfRB23MzHsSYcTGjRsenXH5kbHQdItTfp6oGpenO4vOh+UutAHM8x\nJV4wrREYYD92x1OK3dU72hzlPMQODUBQABOv0rIRrOIE9Z7JPMAMcIhjRqYL84ZM\nZkPyEWon7gCYIA/5UhzPX+E8EGwzUm8ZY4YE+TB+bNUE1dbVWNR9q0jD9dvjOtLm\nKgV3V9MAh1U349UWcq1LAPuCt5M4VYf0TR1vjf0Kn+0x+227azZif4bwdqyNcLBi\nMOBZXgqsLIsCAwEAAaN1MHMwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFCX16IE6\n6koRPOzdQ1Wamw1SdNoYMBMGA1UdEQQMMAqCCG4yLnN0ZXZlMA0GCSqGSIb3DQEB\nCwUAA4IBAQCMlYq4ORXyvUd3lUpmOd2geGVrny14fKcAY2BGH4gUNy70kGlN3qTV\n+CPhQsdwSUk4DpbK594MbYznuPmCL3pZ10tYsns0GMXaOIRK8q0VWhc3m/AbSV2N\nyQr9w88ygNE7h+UhaobPH4UloMZZZMa1uoZsf2K8kPnxNWMQs5PwyuIQCT74bJop\nmhH5lREGqo9wDZr42jo1M7W4wh83WBXVZIXVVsBMjwttCkQJy2Nq+hFvai0x7XT3\nm0DC68+xvmj62wpSSLNYtGTOIgSs+7WA9r5bAoaBADLHxDKBJ/kOXnluernqN3/a\n42h7dX83Wtv4b+rZ0v+1f6or6CtSVUol\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "b86ddbf131d98f6609aa350f76ad8cf863da4a7e",
                            "early_renewal_hours": "0",
                            "id": "254020582789027339221049758547196626335",
                            "validity_end_time": "2019-04-25T11:23:12.53035742Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:12.53035742Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_locally_signed_cert.server": {
                    "type": "tls_locally_signed_cert",
                    "depends_on": [
                        "tls_cert_request.server",
                        "tls_private_key.etcd-ca.*",
                        "tls_self_signed_cert.etcd-ca.*"
                    ],
                    "primary": {
                        "id": "271380200629950554817377119111758638785",
                        "attributes": {
                            "allowed_uses.#": "4",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "server_auth",
                            "allowed_uses.3": "client_auth",
                            "ca_cert_pem": "4042e86f51904c6266191462fef5cb3d1b6ebb0b",
                            "ca_key_algorithm": "RSA",
                            "ca_private_key_pem": "9e2a973a6a831bfcd93c4f680d28f058e03a0ec5",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDWTCCAkGgAwIBAgIRAMwp7Oul5gv8qfbgpgDGbsEwDQYJKoZIhvcNAQELBQAw\nITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRjZC1jYTAeFw0xODA0MjUxMTIz\nMTFaFw0xOTA0MjUxMTIzMTFaMCUxDTALBgNVBAoTBGV0Y2QxFDASBgNVBAMTC2V0\nY2Qtc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nSf/I0C\na2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eCcjY0brYbDXmD4op7oxsWekC7\ndAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQvgT5q6E1aXaRzPH1UbYLedDr\nmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxYC3U+21J00Npqb75102ER5+N9\nBDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7DutmAn5y/U/2r2Zy1lT4Syoxit6e\nbe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3JASMDdbjWLmQTq61Bu97yUnx\n4ThOzoT2eD1v6QIDAQABo4GHMIGEMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQl\n9eiBOupKETzs3UNVmpsNUnTaGDAkBgNVHREEHTAbgghuMi5zdGV2ZYIJbG9jYWxo\nb3N0hwR/AAABMA0GCSqGSIb3DQEBCwUAA4IBAQCZbUr86mTTlRUFeF+PsUt+Kunk\nlMSMATndvabeoU9gwfw8Szhq4p8/855gFzab4RKswOsFbNtNITJ/eRBPzjn+A7Ho\n/M9V3kzO3jMI02HBvX6GlH0YyTkhWF/xmdBCZSM2bYe/ww7EXZzOXPPH2JfSCRiy\nj9e2WQrQRzS/pa3+/pqecJoPu9N/rSZdN/NQDcIwIIg5CHOnkz/AV3yCU38JFA8B\n8vch3ZGv3hyqcEP1tf0AQSXvfQnZGVfviyEZn61tHperVhYwq4a77Sc6ixpg19CL\ngyYyCL43MoyDEqZEIobUBL0I0MraV3T38Ir1lCn7kd0zYoCy9l4TCkW2ExAc\n-----END CERTIFICATE-----\n",
                            "cert_request_pem": "0e9193d59d9b371dc4c12e48ac6ec5867b5fe2a7",
                            "early_renewal_hours": "0",
                            "id": "271380200629950554817377119111758638785",
                            "validity_end_time": "2019-04-25T11:23:11.913833982Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:11.913833982Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.apiserver": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "aaaa37530fe8717ad45a878ad15c01ffb46bcb3d",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "aaaa37530fe8717ad45a878ad15c01ffb46bcb3d",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv+NscdGqesdQ/bm1fcMgiJM9iC1R3CMUDkk0yvfmwaJEqmbo\n4oFEbIGVexhO5zZoxeGp5Joh22MAoeFQy6duqEj1i8/SIZ0ecPjs32QVmAxjM+k4\nEbPjE+gtvkvn5nzSE7VeTXc25dXteHfTVgUqztw2uWdyOAu4xcDpMc0x1dJ2bG4s\nn3eZ94u6Q2wSaJDMGL0gCPQBnJ2HPQsfHVMdbuYMBQlL3+uDvbZw1W+ubyWxb1fv\nQwWeFQYhMTHRIoc1oU6b9PI6aLENOXASlMhDEC+niExbCAdslC4UBmh5jLPCvm6A\nD150h9T2UG3W3yaAo6c1HNDkVJwXzeFvUxrsLQIDAQABAoIBACRxriQD3SwKdPBr\nd/PVvnUR+erGKLj1lJaOAs/Vu2blScNPXkW+pV8yUVCaskmphMaocFrxhyKir/kO\n0QiM2TBvAuu14cPuklyEeoCHAq7pE2JFlheOob8jJqTwx69333JMzQdLcArA0aRC\npcm9m37ERkR6SDAq0cIFPITv4tooFSATQ6LIYYs7o6ackqIaAMc3u6AQPS5dDCPM\nVGBC5eTsAKsQR91n5ylnDaP4/wlc7TUuC3UwPVkEtejplc+B6gGLQnxO9pLUw6b6\nhJFztKNnv2MjuBAzC8FaHSt3zcq3c5xVJPU21SN9hlXpvD0Aie2+ev1KoOaddxKN\ntH4kSYUCgYEA9cOvEcytO31wFCVyNEY2lXBzcSI3mYnAdRIM7b2dxr+6fzxsFQ8L\neQl+qXZ954QKFZC235SVU4hA+576bF0skKMezCS+T4yixGRGiuSZ8sfgjVxHPo7D\nhkXqmOqkSWlWThJ4F3i+uMcUPuAYPeMkucxuASgyxZNLabuqTWOrFscCgYEAx+FR\noak5TUUqDF9Acwbh0MiRXPc70LpRKZjftWx5lnJAjrcx2tNEByO6ldgyEeYm43Y+\n0bUmV1Eae0hO6Fuk8XkSAmBZX2sNePHUVFUfz9aF9ZCM3wVDkk0SyZ9Ax2DwMi6x\nVoCfEWihFniKCnWFx0mRlfFAo2NWCKtXwE5RYWsCgYEA54h5cL1xHrCoXHKCyziy\nx8rvF1BzLRUX2bMttvSCpfGPE7uq35QS7O7DA4f8SZadoX96qdxjahTdk7BMoLaO\n+5yRsSWUnYES/w6xXrzLRGyF4udiv07kaaWIxJOaPwccJeVEemho1c/IBQw+Cl/q\nA5jSsgha/MQtsej5InuZfZUCgYBqWXKLp3R7ro8+4fdyvHiuE+l0I3/KAThp/5MX\n/s16xPOge8yk97+8ZMBENjH94A1U/XdTMSVjVB3Y9pI1g31xlc+FQCqNYHJcpZ8p\n99jjRusjy3OIvk5Dq4qRiJB5BRUIPlvRAMKiCp+bSyt3gSxa6sPxmdmglZwTJMed\n5I3cXQKBgBMu4RaO0GoBenEf/jB/vil4430fzWA4+DK7y7J6MgkNvrSePiuxhV2N\nlrkkEe5l6pic0eaN1HRCOh8Kvetu255HQ0HADKgiLL+T+3w3nDqVNiUcuE42afNe\nto4Hd1G7GjPt5fY0pKdcSRJYSwO8ksul8qwIClaIgY1VoebWZM4A\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/42xx0ap6x1D9ubV9wyCIkz2ILVHcIxQOSTTK9+bBokSqZujigURsgZV7GE7nNmjF4ankmiHbYwCh4VDLp26oSPWLz9IhnR5w+OzfZBWYDGMz6TgRs+MT6C2+S+fmfNITtV5Ndzbl1e14d9NWBSrO3Da5Z3I4C7jFwOkxzTHV0nZsbiyfd5n3i7pDbBJokMwYvSAI9AGcnYc9Cx8dUx1u5gwFCUvf64O9tnDVb65vJbFvV+9DBZ4VBiExMdEihzWhTpv08jposQ05cBKUyEMQL6eITFsIB2yULhQGaHmMs8K+boAPXnSH1PZQbdbfJoCjpzUc0ORUnBfN4W9TGuwt\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv+NscdGqesdQ/bm1fcMg\niJM9iC1R3CMUDkk0yvfmwaJEqmbo4oFEbIGVexhO5zZoxeGp5Joh22MAoeFQy6du\nqEj1i8/SIZ0ecPjs32QVmAxjM+k4EbPjE+gtvkvn5nzSE7VeTXc25dXteHfTVgUq\nztw2uWdyOAu4xcDpMc0x1dJ2bG4sn3eZ94u6Q2wSaJDMGL0gCPQBnJ2HPQsfHVMd\nbuYMBQlL3+uDvbZw1W+ubyWxb1fvQwWeFQYhMTHRIoc1oU6b9PI6aLENOXASlMhD\nEC+niExbCAdslC4UBmh5jLPCvm6AD150h9T2UG3W3yaAo6c1HNDkVJwXzeFvUxrs\nLQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.client": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "f13efc562f25e2157d81b208a3ad627d031e92fa",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "f13efc562f25e2157d81b208a3ad627d031e92fa",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAtnF5bX4iuh3MD1JV6JceDserxHMIZeJCaXz7ZL1oftxhuP2I\nY2wIilUU2ljRDnQGVUqEuklvRzpuOCCIcjTsvhjnr0UsDhss+Uud5GC9j7alEYda\nb096zMbJPbvX9gpCwwc30O9n5u+DPjmS/A8xLX4e9GTaEGB1uIAgA44zmJD7rxM5\nf8IHMxSgT35axobB7EmrZPgOt8mp70i/3wWwdeQEZjyYCAYZ1wj5vZ1oj0zDwjav\nYtQjv0mI++xPBju781TrWxKjd/dAQ6CNFlw5mKETBNjwsOgdLrKUxlmw+DW5ObIL\nBFXpHCQsDmyKN8XGG9RKXVd3YBhzmpmD1NgBQQIDAQABAoIBAQCVBgOFqG59UDGK\nolqB7k4jDH4FrWDCuBo/SFOgagac+S7piE6Lx4cCV5T89WduQt+Zc5EPCUTYDaZS\nOmC5yPlIHdfBluLxcsk9qMKD9XFhnnMe6ky4d1d7RTTENFenJaJ6475379YTELlH\nbofdVBt7aXWnc2mbzu7Zke6UeOc0SnZr+CNzJhFoUJZC+s+UvMdk0HlUg0gHe4Od\naGHcpoIXmZ1mcDuz+Zgbe7X5K/weV4YU8OTw5n5sCUm2oaH9TQLr7C3gEKUzG+zH\n7toNQv1+lUFxEubCAc1dXTf+h2eQbJFMMjCvbEdh28DiSTyzPi86CT/EPDc8HrSa\nfz0wOopxAoGBAMS3+GCBrF80TV2zgL0zalPa1AGmbb2JZt6yAdvURB6RRB9hm+Yn\n3AN+OI0CFBytk3HdVmbC/FzsAhPCPiIMvr7iNcfGSKvo9oUAP8Y4dBcbxSvqem/a\n7vhw8VGJMRRXN0ykeNIRmzo+7fxmArJ+lmkZoqFfhlolHlnLr3dl1Dd/AoGBAO1s\nN8rNae9QnufE3RqBs8G/tDkSPqkLoZQpzcpKL26qvg5MMx15TY01MoKN4sFg5L14\nzbhFMcfYnhCDSnlD3ZZvy0oCevCsZfsAOAEEhdGkYozEE+bnCIuP7eIuTGksYmbg\n/rQSenRWzFCHye5jflps1Z+EAU1RhT1mrrZz1ic/AoGBAJ6jyd5x1IM2V4nP/2sU\n8pNLLptiDq/CBb5jiRIxfPm1pl00Rxf1Xv1GJe65FWUHKZeyqkHWztNU1FwA0kB9\nTLn9DOfdZK+WAG/DgqqkziHwmDJRNonL4dlio4lgfL7tkr/xBypJXog7RYq87UHq\nyftZ3AgNU/iQZIh/tTIxYVGbAoGAR+HV2n7qrdwY4E8IKjhOtkBWTlkpw4CUAQnP\nFonzZmwncqi7aRcK1c/fZQuUNbwiRQNINZwtgDYjVRiK+cAEXMGoKNYrZqarkZz1\nV8mIwnokpD3RUL1uJuMCwNIHrGgVutQwCVD25jZJUbBrANP6s2H0I4GR61jdIEPw\nbakQk30CgYAetVxpx5PY33Zm6zxQ+JarZ7OMBRfJZ4WdB2JQp0ycePRQi5JQ5Xm/\n/8/R9k0gcgOgwYwW5a30i8tu3acQYktgN60/tNXu7k1o0vD/qWUM9QIs11ssyAPS\n6MMCXl9hOwjaY8X37dCk1EnqJ1rfe8k5DTrdtfLNGQozBXD8m9BovQ==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2cXltfiK6HcwPUlXolx4Ox6vEcwhl4kJpfPtkvWh+3GG4/YhjbAiKVRTaWNEOdAZVSoS6SW9HOm44IIhyNOy+GOevRSwOGyz5S53kYL2PtqURh1pvT3rMxsk9u9f2CkLDBzfQ72fm74M+OZL8DzEtfh70ZNoQYHW4gCADjjOYkPuvEzl/wgczFKBPflrGhsHsSatk+A63yanvSL/fBbB15ARmPJgIBhnXCPm9nWiPTMPCNq9i1CO/SYj77E8GO7vzVOtbEqN390BDoI0WXDmYoRME2PCw6B0uspTGWbD4Nbk5sgsEVekcJCwObIo3xcYb1EpdV3dgGHOamYPU2AFB\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtnF5bX4iuh3MD1JV6Jce\nDserxHMIZeJCaXz7ZL1oftxhuP2IY2wIilUU2ljRDnQGVUqEuklvRzpuOCCIcjTs\nvhjnr0UsDhss+Uud5GC9j7alEYdab096zMbJPbvX9gpCwwc30O9n5u+DPjmS/A8x\nLX4e9GTaEGB1uIAgA44zmJD7rxM5f8IHMxSgT35axobB7EmrZPgOt8mp70i/3wWw\ndeQEZjyYCAYZ1wj5vZ1oj0zDwjavYtQjv0mI++xPBju781TrWxKjd/dAQ6CNFlw5\nmKETBNjwsOgdLrKUxlmw+DW5ObILBFXpHCQsDmyKN8XGG9RKXVd3YBhzmpmD1NgB\nQQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.etcd-ca": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "4b130724b0b90b81fa6d2fcf82cc5be128be9e98",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "4b130724b0b90b81fa6d2fcf82cc5be128be9e98",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxr0E2ViI4tTWLlGKIRgR9nmhfcXlvf9aO+Y+VAIXrrbXwAKj\npcxhd/yys6DosUm+9TJ7a05yw0xi3yzIAs5merz76xpj5LJYc2B33n8zF32H1WUJ\noSOsbkcUFMp+U2Ubzs/zs7OObZl+Me3pW9N3BWaUoJh7OgofgQaNgCrhjdLOOxfc\n/fgePOEPV4B03lbNzqaS+iwfxjot0XESYp8YHsJ7T7Smnwhzyqv3WGEiBY7shJAN\nxNR2Ijag5FL9/O4iI0v9X89e6vf6y4A8+6w+efTnW6/xvrzaJEHO9pIDWKBC8rZ9\nBgGzpz+AkFc4tVLlfzbi76pzt4SW6vPsC4/ycQIDAQABAoIBAQCb3YzbBUO+Wtxr\n0Ul68QzNeNE9+iJX49gaGFaTvlxii0Ykci10kBl1aDujA7TbrpHUbjY7j3gUUWlN\nzSpEgSoAYw1UcwsbRwB15Je+aZZhevM4Wpi1x2upxZcrQzDWKPspNRDVxCIVNQez\nEvstKGk1VCGG3m/ushfJMqFxfrANcH9KGJ19C4/RJHC64fOq6LvMAPQt90KpO5SL\nICHz0xGi5IdBX6HcOQe3M58qOxy/ru+NjW0DyVoK3KfIEMjCvPBh6F3jLfHlnbMl\n6hRHwLgarO91uVyPv3tMdonZ/El6BpaatRJK8w93XT1W5c9fH4VIehOawAktYgSc\nzjDEVNoBAoGBAM4I9fsPpwr+tOAesxaB/YjmKLdosZHrmYzY9WPXSegy2kdFB2WH\nOEJjFmXJt2eLqvo9u6vcv0zd9qm457WO6KKGLHKRDJH7qhFSR3Sfdf0RXcKFAYCP\n0BWP/XorpSpTzn010l2tQOEIIs1cRh/7M3LxMsrebxc5Mv96HDzI+bURAoGBAPbv\nEYh9gUIyZGBvGk6K/EWoFU2a/ppNm/4wljGBZrjDzA/aVIr7R5qrWWQBS8sq0wVg\nAHuzRB/ghN1PvrwElTHDGhMSAByh2PAVso7xt0KDJaEh2Fzd4TFRGpElPlLg7bh7\nnxSu21ZtV47HfjdUFHpjqe8cw4wfCHiFl8UpkOdhAoGAI7kUBTLCkLp23AEWpgll\nzy2w05QYbad+2Rfo/CWgz9y5UfAbBzR5wbDyejWOUiq6O2cmufatSIOXt/eyXR1p\nInzHChoyJsGOzDAK6aKYT4eKTSbIiuTkfEiZ92vH2F3tiHIjhlB61kmV1ytvkS35\nzq0ZVGlas5kcSYV/jd5+xTECgYEA9Rdkt6yaVzHdHzonSj35Fso2Gsj0XAMcCbf/\n2zMs2ca9DB8QOsId2A6qsu/2YrkmqfcXg6/ythEKzv8PuV5zFuknQDZllgWuZN2k\nVOzlkEbLWptVPRedJG3ziI0Gxwwp5yoMQ2MqoSX1+elYBWKW0MOLL6HFFZbXuYgf\nk7ol8QECgYBl21TTCwCTkzkIA45SrtPaZWBl4Ef25ix3THkTVU94FOOJCPGA/8nW\nu1wosKxSHGF7zefecoXBfl6Y9+Gi94GlH+h+F0lU8abMwtfqh17T07P4g28VFsEc\nKTQ2HQdrFVmI9oehDAb55ooa0Kii4a6dSXIc40P9YEY/VlB6J5bNEQ==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGvQTZWIji1NYuUYohGBH2eaF9xeW9/1o75j5UAheuttfAAqOlzGF3/LKzoOixSb71MntrTnLDTGLfLMgCzmZ6vPvrGmPkslhzYHfefzMXfYfVZQmhI6xuRxQUyn5TZRvOz/Ozs45tmX4x7elb03cFZpSgmHs6Ch+BBo2AKuGN0s47F9z9+B484Q9XgHTeVs3OppL6LB/GOi3RcRJinxgewntPtKafCHPKq/dYYSIFjuyEkA3E1HYiNqDkUv387iIjS/1fz17q9/rLgDz7rD559Odbr/G+vNokQc72kgNYoELytn0GAbOnP4CQVzi1UuV/NuLvqnO3hJbq8+wLj/Jx\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxr0E2ViI4tTWLlGKIRgR\n9nmhfcXlvf9aO+Y+VAIXrrbXwAKjpcxhd/yys6DosUm+9TJ7a05yw0xi3yzIAs5m\nerz76xpj5LJYc2B33n8zF32H1WUJoSOsbkcUFMp+U2Ubzs/zs7OObZl+Me3pW9N3\nBWaUoJh7OgofgQaNgCrhjdLOOxfc/fgePOEPV4B03lbNzqaS+iwfxjot0XESYp8Y\nHsJ7T7Smnwhzyqv3WGEiBY7shJANxNR2Ijag5FL9/O4iI0v9X89e6vf6y4A8+6w+\nefTnW6/xvrzaJEHO9pIDWKBC8rZ9BgGzpz+AkFc4tVLlfzbi76pzt4SW6vPsC4/y\ncQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.kube-ca": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "c5bb89ce3072700bf29d8c8696a4913ca61a2150",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "c5bb89ce3072700bf29d8c8696a4913ca61a2150",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAxO+9lMTObnJ2CIuY1Aytoro8ImhHmCPgyPoGGTyoK1e2sS/1\n7ow0yKgWwBTZd64aT2mvsbNQkmVdUS5wZPn9z73hMQPRXicyvzNFDCXi92xwaXdB\nZWs47o3Kqowk+hEmaqBD5fxdbZ/jNDCHQ3uT6QLkZdBUAvIAtf8v81Tdxz1PftCQ\nW7EhZnDof8VSTsWkIGyh7h/EmpGgwPO77kMcl/D1t2oj9lYCdFtxmmurR+V5LTIu\n68PYUCrT5IoD76h5wa9lS8kOCI8IeKKFZRdGhnv+RpnBzBfU+pJv/XuIJ3Az/NHs\nbL+oGK4qXMnOLgDFHEbuILql/ZJrA9hQaRDL1QIDAQABAoIBACRkpWUrpXZVoqhb\nm8d7/E55GgnFuY1M/ApH4f6h7fXshK9jzI/jyxFVtraSY8mxG92XC0fMelRDdSY+\nbbjLVfMhBM95BCThG4in4den3LSajn9+8U/bq66x90TjFyY7Kx1DNqj2pRFQHb2U\nRjrbSG8kAK8r+4p7zFPVr7fI9B8QS3ECl2wpRYYkzkBN850GCUo9cHcGlmp3G6RF\nWZ0X2COyLZYmA72+z8InuFGR1802/1CZGzGZ2VPF/cCZAvs8CrkxaVtMH8IC8omN\npM+Hx3dc/RE+D/6nHTktzmtdBM5j2drWe11GTb54uUqwJFxfYDmfo3LuaZLXbP/j\nQoMwbkECgYEA5cpGkr6argS27YxxglM7SMRt/CV/PGwK65qfTEhOxPI8FyWwPpdd\nz6WVcO24fHGDhjfQEZ1+8BCaI/EjIoiJQxc8bmKfNhva4xmYfdBcb64qVUz3vuRP\nWMeoMxYK1fz3Xe3mCpn1RLkGekgf8qyjuHRP6VwbbZHcLdHdt6qPP/ECgYEA22Yo\nyjYx//tOjLF//gAHcZyTkddGQ6F2aHmSGPlP8t83Pc8upHY7Bou8P4LdYyb8Pm3W\ntwwV9i+kRVyL3AHp4jyHlVhGVgepHyAAnZeiZ2yyYKhlw3oTW56MT1qRj8mFJ4JD\naNXydw7FmlI6kNtaSfStSdWZOkvxFw5VxtYTbiUCgYAIX3p61l8kgB96QGfSa935\nJM8tJOCh/v3W3+d2DBxyqLDv1vu5DCLq8gmj98WFI027kkUOn0KE1NYJATxagcce\nnrYg/471lcZACCq6SuFTYHFCcm+EkSUjAwNp+R+j9He/AHAlar65JlTKF96yJQBC\nNFrFEgodz/bJ5J/DlX9qwQKBgQCsP/eUUppMzAPuh8jiJSmy8+gT3zzGCjUJbzDZ\ntJslJkSbnVaUPlK3H+wKvPaNSuVNKjUh/zYa02qYHkGb2FDEkxsrkGOgVWFdE2YI\nVC1oH7moE23Z27TpAIBOKOARUHje/PFplFdJS+qt7xMV+XFYkOWgCzfCwi6lGFcV\nxar5lQKBgAiedufVu8dDvV3T7qOE68/GULaK52bXYzBPFLIgJwYbRsd/bKmUGoCU\ncsfP7bRcsccvcrjdBW2LGgnclfU9IRqVxJLTogqjtuX0m2uSr+HzgJij29kLqfwn\nYH3aaw/f+Dn3C10S0KbyySN+cQ2GQ8qCMNjFSZR9our5+IcCetHx\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDE772UxM5ucnYIi5jUDK2iujwiaEeYI+DI+gYZPKgrV7axL/XujDTIqBbAFNl3rhpPaa+xs1CSZV1RLnBk+f3PveExA9FeJzK/M0UMJeL3bHBpd0FlazjujcqqjCT6ESZqoEPl/F1tn+M0MIdDe5PpAuRl0FQC8gC1/y/zVN3HPU9+0JBbsSFmcOh/xVJOxaQgbKHuH8SakaDA87vuQxyX8PW3aiP2VgJ0W3Gaa6tH5XktMi7rw9hQKtPkigPvqHnBr2VLyQ4Ijwh4ooVlF0aGe/5GmcHMF9T6km/9e4gncDP80exsv6gYripcyc4uAMUcRu4guqX9kmsD2FBpEMvV\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxO+9lMTObnJ2CIuY1Ayt\noro8ImhHmCPgyPoGGTyoK1e2sS/17ow0yKgWwBTZd64aT2mvsbNQkmVdUS5wZPn9\nz73hMQPRXicyvzNFDCXi92xwaXdBZWs47o3Kqowk+hEmaqBD5fxdbZ/jNDCHQ3uT\n6QLkZdBUAvIAtf8v81Tdxz1PftCQW7EhZnDof8VSTsWkIGyh7h/EmpGgwPO77kMc\nl/D1t2oj9lYCdFtxmmurR+V5LTIu68PYUCrT5IoD76h5wa9lS8kOCI8IeKKFZRdG\nhnv+RpnBzBfU+pJv/XuIJ3Az/NHsbL+oGK4qXMnOLgDFHEbuILql/ZJrA9hQaRDL\n1QIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.kubelet": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "4565f09f20e485904689dffd84c13ac84bd166cd",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "4565f09f20e485904689dffd84c13ac84bd166cd",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAycUYt0L6Ith2bDKetEQq+S7BDBC8339TjFf35x1X0/zd+kxB\n3mfa4xp9+4YgZVgPgIZbeSRrDmuCRUB9wcVek9banhFZ5seMPqYYrr8rUGdubHJQ\nUvVnQ8yiTbzlkLrpgHbu1TPqXBF3IcaK7fP9qLaqierMd7GyfOcWSGIwFK5dl+0B\ntXcCwTzV/v1S4yL4xmAdrvsgzaBtI+eYzkFo/5B/B6QBQ3KgqTUolha+EJ3UsVmV\nS8DY2xLqgYABe62JEZJrE7cXy4zAc0fXpqkf6hkRhxJdDjq0yjD6GVNMz9Imzf9c\nJe+it6vLJn+wVNshVSBg0mRssFcMrhxaEXg0wwIDAQABAoIBAQDDnZTSx9qeweI+\nD+2Rs60+HLgIrImQ3W7w17B+nxIxciz7p8cMiv/Jwjt2CZmK549P+fLhRg+M0Wph\nHZ9Op72D83/MU+InPjuX2YyAjtK9hymldkatx0Iwl0qbt5GRecU8SRJQHZ8PV9d6\nJXU4MZ8xXLeGMt+9A8iaE6ik0Jzwzkr+sBrr0lsBG5jkxz0imUY0OggYvSbseIDT\nJKfj0o68g+SgRWLxqf1jwC9an+QjJGUzZSrTMEIU5mdhRL6kmgyZo5kUJ8ATMhtP\n9j8U5i5glNSLuRoIXaRPH795xpOdM8O29htnbz4BTcaY3EBTtJR0TsApN9A4zUDK\nzD5xdwfBAoGBAOrR/v8eptpv5IOD+OU7IsSFZavpKLTSSFCDm96Kh2q8q+KKed/b\n0fafiZFK5q3OwLMjyY7QYUHg2umFB7OfUGv8Yk7qvYAlhxkPtMSnXJj7+lIhe+Yd\nk9oP5fnYnZ40v8oV6qdD8bkkeKS1rwwQrl+BxQc6OLDFckC86U/adH7xAoGBANv3\n926DMcNFPT0Zx2FHkSjH74IYcgX1dsrH3x+cODTBHyhICXlQsLY7F75Ir0hnBqMn\nQzz2N0DlN5udogFqYty/Yjyq7w0mIVDFe6k4moJHC5Kdh2vGCI6XTd4GCbcRVf+v\nP/YbgipUCF6m49TZZHJN0/64+cqxmi38WQNXqxbzAoGARhg3YRpaPjxGX0fGxU6Y\nu0cCqYVpBEj9EyOmJJD/iUoWmQIzDTLGAzNuUjOkll9wQEk/gmULkym2zxxJx0GY\nNRPamKoTtSv+numEUWuQBY66E0gxfuh3WRGD2cfijPY8Bevy5skuX9DWPnyJazWT\nh6jqEpU7lPDrgQ2jK5YPTlECgYB+2F82uzDXCfZmZZcz4bEzcxgKTU5zYTk/dkKU\nV+GRikwNTn0oF//PFgR7Fi798WtCakG7xb/XDFckxaHGbzLTWQmtMmTnkDVl/ntw\n+dMfjRh/U5fj7i7BCz876P9xMe4Fo2me4f4Nqqeo7VQ0SahCwd6d5M0mtYPTQNGT\nu9pNQQKBgQCQD+CChDGascYCGmuSDy4ok4wPDNu0dliRs7Txs691mvlQyUb5Mt7m\nu06nT78Iu2iFd+YPH2mL8lgAb63FN1LQ2BgNmvgw+BJ0FvTUixC2UJ00UFVWMoJ0\nsaedSdmnCjfjj3tf5w77P/5tjWWO/lGdW5o4u+SWS3olHjiOld4XAA==\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJxRi3Qvoi2HZsMp60RCr5LsEMELzff1OMV/fnHVfT/N36TEHeZ9rjGn37hiBlWA+Ahlt5JGsOa4JFQH3BxV6T1tqeEVnmx4w+phiuvytQZ25sclBS9WdDzKJNvOWQuumAdu7VM+pcEXchxort8/2otqqJ6sx3sbJ85xZIYjAUrl2X7QG1dwLBPNX+/VLjIvjGYB2u+yDNoG0j55jOQWj/kH8HpAFDcqCpNSiWFr4QndSxWZVLwNjbEuqBgAF7rYkRkmsTtxfLjMBzR9emqR/qGRGHEl0OOrTKMPoZU0zP0ibN/1wl76K3q8smf7BU2yFVIGDSZGywVwyuHFoReDTD\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAycUYt0L6Ith2bDKetEQq\n+S7BDBC8339TjFf35x1X0/zd+kxB3mfa4xp9+4YgZVgPgIZbeSRrDmuCRUB9wcVe\nk9banhFZ5seMPqYYrr8rUGdubHJQUvVnQ8yiTbzlkLrpgHbu1TPqXBF3IcaK7fP9\nqLaqierMd7GyfOcWSGIwFK5dl+0BtXcCwTzV/v1S4yL4xmAdrvsgzaBtI+eYzkFo\n/5B/B6QBQ3KgqTUolha+EJ3UsVmVS8DY2xLqgYABe62JEZJrE7cXy4zAc0fXpqkf\n6hkRhxJdDjq0yjD6GVNMz9Imzf9cJe+it6vLJn+wVNshVSBg0mRssFcMrhxaEXg0\nwwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.peer": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "9a873f282ff52a7912897eb16becbc7d87484049",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "9a873f282ff52a7912897eb16becbc7d87484049",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAo+HQWuVuIQ5Cdxl9wzyh+qMYMdOUIVyHNo/OkzJ36RAix0Lm\nBqhBoWbgemXG2AOcKmkYeTmI8X3rNM00clvaHCd9EHbczMexJhxMaNGx6dcfmRsd\nB0i1N+nqgal6c7i86H5S60AczzElXjCtERhgP3bHU4rd1TvaHOU8xA4NQFAAE6/S\nshGs4gT1nsk8wAxwiGNGpgvzhkxmQ/IRaifuAJggD/lSHM9f4TwQbDNSbxljhgT5\nMH5s1QTV1tVY1H2rSMP12+M60uYqBXdX0wCHVTfj1RZyrUsA+4K3kzhVh/RNHW+N\n/Qqf7TH7bbtrNmJ/hvB2rI1wsGIw4FleCqwsiwIDAQABAoIBABm56StbuN4XjveD\nWOq9KfBeif3IaQiTreYyzQrucUR09ACzz8hbwXHE5JhSQdTHPEysEtt03LqMOdAg\nJouNP8ALsuZSwnajInwJFTWfNX6v9pXiW7w4/bm5TsbsA/0GkyEsM3gaqGseG++d\nVI3KddGAo+nJcul2a9b9ZXyheBMQO5DOOVghxCh++/MudM4PXzKuZZA6YL+3BmV7\nWSOoaFM9p/OsrtD3VgpV2fUbJzdRHAmVy0xOZ7dt8jMmHaV3jy7d8J1a82Co7jTH\ni3x5JzG+ocSPiZjKC9J/oLYiDEHMKLU3NJa0vKveyH99nAXeEqEFdlEXB/wUpKEV\nrU4OkwECgYEAwy9mCx/5uiIi90XD96BcHR6r0d84RIAFh7JZaQ7FTl7aNITQBaFC\nOnHPy6ewriy/ug8ZIuKGIbVSDKERne/uYTMpLqYPG0aKjUb9u674yWWZmv9jIn7q\n+s0uKLV6HIw9CVRY0GdS1b6YkK8HdQGIu6ByQcACWgPjJw5QwAxL6MkCgYEA1vGU\nxjfWvyKKsQ5PhbVIeyzcrPKfgPztIyJ5PUiibMdqbn8aG5IXhb31HqwY1F8080BU\n0qtKNXq66Dy5W9lITk3QJBeuSERjNH1vpmRpl3GpvjRsfcJj5AcHPYDow3Ao3qAV\nTVzzbQDtUILUuGjBRIUlo3EwFpisaG8KP/DxKLMCgYBTwREOkQf94QwUAzHWHk+o\nhzK/egOREUZONi+7rwTnXjhP9PW2lL3wiknaX/impLkYw8XLfFyGNmIg3TTMCtrF\nhsiTJdqxn5Fwkhfq42gKM7i4FAKcGM4IFOdLvKPLgDnouPLraorXAVRCMXkHskLU\nEEM3B4d6zNQ6PCBWaHBiUQKBgFBn5sOPt+GgRkmdlNnrysVpLtPznv9dnkf6aWgn\nd7tBjerv2RBfQjVhrgRfVJp9Uw18Dz8PnJ8M3kZqENzvF0FTkn0t7qBSFNpZ4h5Y\nibeBaYIhkkQpJ7zxdB/pzSjvGBrPv6hFETrBkgUALBsf9MxxEndlrBuH2Vbn0unA\ndDZJAoGAZ3AfoJlBRQFcvk/cieOOYQoCmJqYTmqDY9oeHcpyCJks9P2QjChCM1c/\nnyK8XedX6aojdHzurKvzjUzn8iUK9XHctxH4D5QT1tpxdgrIBnILsfCIbl83/a9q\n47XYcYvZMyt0e4FSJ/u2op8fE4guExeXCZGtuHKOG5D3X2Uzaco=\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCj4dBa5W4hDkJ3GX3DPKH6oxgx05QhXIc2j86TMnfpECLHQuYGqEGhZuB6ZcbYA5wqaRh5OYjxfes0zTRyW9ocJ30QdtzMx7EmHExo0bHp1x+ZGx0HSLU36eqBqXpzuLzoflLrQBzPMSVeMK0RGGA/dsdTit3VO9oc5TzEDg1AUAATr9KyEaziBPWeyTzADHCIY0amC/OGTGZD8hFqJ+4AmCAP+VIcz1/hPBBsM1JvGWOGBPkwfmzVBNXW1VjUfatIw/Xb4zrS5ioFd1fTAIdVN+PVFnKtSwD7greTOFWH9E0db439Cp/tMfttu2s2Yn+G8HasjXCwYjDgWV4KrCyL\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo+HQWuVuIQ5Cdxl9wzyh\n+qMYMdOUIVyHNo/OkzJ36RAix0LmBqhBoWbgemXG2AOcKmkYeTmI8X3rNM00clva\nHCd9EHbczMexJhxMaNGx6dcfmRsdB0i1N+nqgal6c7i86H5S60AczzElXjCtERhg\nP3bHU4rd1TvaHOU8xA4NQFAAE6/SshGs4gT1nsk8wAxwiGNGpgvzhkxmQ/IRaifu\nAJggD/lSHM9f4TwQbDNSbxljhgT5MH5s1QTV1tVY1H2rSMP12+M60uYqBXdX0wCH\nVTfj1RZyrUsA+4K3kzhVh/RNHW+N/Qqf7TH7bbtrNmJ/hvB2rI1wsGIw4FleCqws\niwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.server": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "5f0ea43988efcfbe71d291cf1b1b4243dbdaa21f",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "5f0ea43988efcfbe71d291cf1b1b4243dbdaa21f",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA1nSf/I0Ca2wMslcZMfL2t9uhU7oC3XsJp4nRi+1M7iqqh9eC\ncjY0brYbDXmD4op7oxsWekC7dAFLAt/EZY7YT4jGVh208Ea6HgwFY1T97oPIZ+gQ\nvgT5q6E1aXaRzPH1UbYLedDrmY3y3bE3QPtGwLSnm7B1FPuWmNV+Xr/KeSlsFoxY\nC3U+21J00Npqb75102ER5+N9BDKnH/dwaxi0X2cvFZH1NKkIYjjJOLBcvab7Dutm\nAn5y/U/2r2Zy1lT4Syoxit6ebe5QWm5TjD1Dib74nFvdj5LJYZXt0Ib8DRL7JHg3\nJASMDdbjWLmQTq61Bu97yUnx4ThOzoT2eD1v6QIDAQABAoIBAQDDl0KDGChoyPcb\ngIyeHbYfIdUVg8UxMxIvF2dic1+CqK83jbqPaBiSEMzDkVxTtXHl5MKvZXKR7sv3\nJxb8eTeX8mrSB+4KZrdAyD3xxoaCjvasrd73L5p2imUodterT9IqYBo/U+hM+EXV\nI9f9EDALebiUKm/eX0eOxMioqcuEjDN2YlEOJDPz0nyE0rYyh0AeKaCopAzbAQ5G\nX7VBlliqh5062YrvKNwKDj+xjK3WvtkZgQuCoPlePndb9DPip83JHhcRSeNafrlu\n39rOXyZpfPs9eLFJR0/T0mCKvA9nOsm93bR515JR7OZFe7elhhtH/PL5+fbRqbN8\nXVXyMyixAoGBAOeZw9IfOzPvn5PjnV7zYW5Ns9cAt7pW4M+4XaYdOnT3P4+tgpek\nkxLGVOtLEkJABewjETNAyuweu3GVVDRAaQMnPqqNN6V6Mcz4iuroPE8ztrtTotAR\nLws6x6CMT7VP7vHuRqjcQM+jas1IGhHA5lkdTUDFSZ4m9xTowe5NB1LPAoGBAO0M\ndbXoKT6bbQxOq4yIufDVauajps/Aq5+gSAE5Gyz8iCTi/Fdxm/evwM7NPKkde5Mb\nxyBTAsdFZ94gEbswmxOdILh8tub6rteljaPSRKxG8RL5qPinLYQYgi8O81+8s/10\n3Sv67ayC0jmWBQMqYGrKid+jrrU53foXB39oax/HAoGBAKRX953eLZugGWPPK7fa\nCrREDS6vQrDGv4aG9GVQ7k9bt83TuQy0auzysgW5Yr6CQfGbvLPa8WP2NtrVtUfS\nwPHM4moSBX+2Iyqo36Lrowgs0SlCoxD0cKaOUmP5zQIDM7KXe6qNiKwO8VW0KVOZ\nx5tK8Kvak2/XhJNgy2S3Yk//AoGBANiVZMtipqSMT/NJwdXyaqmP5U97wQLa0DRV\nttRfP+Q3i5DgT5z5sX5595k7zivaQzkizSpMjiJR2NgLxweYHmiqTOYjFN4vtyZT\nHfnLOXGKk+M5dthRrvWdivzCFT2o5W8zooz3hMb09G0nE8dTpaqNCbHrFMqCZ72D\n4xbW6eGrAoGBAK/Zzc1Ja55+UkxGMgZE7TFBFXqiJ8u/8uEzD2EA/JY7EmyRsodb\ntxh4cItD9ydQFgnagZsbzjlTe7ch/Qx+q3a20vfaAMvylfs1cKo8o9ACu1tSxDJZ\nXLzs8Jy6WsCxKWsuP+X3CK8Ix7FhO8CYZJRdmW8GpE5ngkzPN5XmfqkZ\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWdJ/8jQJrbAyyVxkx8va326FTugLdewmnidGL7UzuKqqH14JyNjRuthsNeYPiinujGxZ6QLt0AUsC38RljthPiMZWHbTwRroeDAVjVP3ug8hn6BC+BPmroTVpdpHM8fVRtgt50OuZjfLdsTdA+0bAtKebsHUU+5aY1X5ev8p5KWwWjFgLdT7bUnTQ2mpvvnXTYRHn430EMqcf93BrGLRfZy8VkfU0qQhiOMk4sFy9pvsO62YCfnL9T/avZnLWVPhLKjGK3p5t7lBablOMPUOJvvicW92Pkslhle3QhvwNEvskeDckBIwN1uNYuZBOrrUG73vJSfHhOE7OhPZ4PW/p\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nSf/I0Ca2wMslcZMfL2\nt9uhU7oC3XsJp4nRi+1M7iqqh9eCcjY0brYbDXmD4op7oxsWekC7dAFLAt/EZY7Y\nT4jGVh208Ea6HgwFY1T97oPIZ+gQvgT5q6E1aXaRzPH1UbYLedDrmY3y3bE3QPtG\nwLSnm7B1FPuWmNV+Xr/KeSlsFoxYC3U+21J00Npqb75102ER5+N9BDKnH/dwaxi0\nX2cvFZH1NKkIYjjJOLBcvab7DutmAn5y/U/2r2Zy1lT4Syoxit6ebe5QWm5TjD1D\nib74nFvdj5LJYZXt0Ib8DRL7JHg3JASMDdbjWLmQTq61Bu97yUnx4ThOzoT2eD1v\n6QIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_private_key.service-account": {
                    "type": "tls_private_key",
                    "depends_on": [],
                    "primary": {
                        "id": "061c41dd9490c2c7f67e09fff3c2c4d0bd40c10e",
                        "attributes": {
                            "algorithm": "RSA",
                            "ecdsa_curve": "P224",
                            "id": "061c41dd9490c2c7f67e09fff3c2c4d0bd40c10e",
                            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAx7jF4YuyA6OQCNppUEDp9vaQAwhbT26wOaX28J70r495M5oH\npUv1eSBavPjO/iYa+2lygaw0TZi5AD9RQi+rjn7qtf5FssLicW1ykekicCOlQivi\nnfE9vPSMwNBNQw6RC0BJKE4CvboQaEycQMvt8P51PI4rqBueq6hKIstom3AK2u6Z\nHa0eLGosRIhTwRpkzsJ3NAFpIPiONsqgh5+/bfrNiPEpUwcK4fpBOi7M1T8WOlpk\nC79KotomMnGiysksLZoZsze0wF+OHd7v9dj9uG+Uk+bKXffy36fuMqFUGnVsFLht\nGJDjWZGpvvFWtsKX6hvbD6C4ndVVsCoYnVOvuwIDAQABAoIBAQCUseuZveDeNrNw\n8/O+jWXjubSEnX8mB3nqobbVdPMllkMdeQtCNOhgswb7dJ7ft00Va2+WPbh/ITpz\nhbCg/07R+4oRz2ri6Zef7WWEXreGF/Pc7UF+Z/KYMNZuY2dyinDQmJ8fA92kldfL\nX2ZiE7JmX3y3hf3Y3h9nHBd+CkUqm5JjVlVoDiOYJr6a7suHGmaHum9M6UZ0crJC\nVmvwnNQ+3yGGpstCCUmFAcYnC8yh/I5jmEkVSodnu1YkpmhEMssd987yLVlUHqQ+\nZUcdhMk7kBEbXnEh4Hv4lGtejhtkbaS5RdtnqYJ3lSKNCuVJeLTo9O4YnW3RWi8r\n5Af3lMmpAoGBAOxJcAwX9peJR1DHC4oor9iavS8E5IhZR8pj+BNdg2gfxL/bhlbb\nsQ6YP68YuMkeT2a5sFRF3LqgveyvZ4Xp5oJ4RcvCZn6+2XoIiUi41PYS3AFV0MRT\niT5G0dbSRUSfXIc11cGGRsyij4hJUzyt8iXG6leFq2VBAMdtUoolF5+3AoGBANhi\nYtbh9vTo75VGoa9OD51VNg4B34WRg0MiJ09GWBs+TnrRx7hJRyPJ3G04sCzkNsKQ\nGgbjKyrV7J3+8QzLVkrS5lx8B8i0h3zmmuq7fKLR62vwA0+3xKbVr1hUgppIlQ+A\nCeKomT/j3+KVJctPy9ewMAYD3I8k5qS3ZTeI3igdAoGBAJ/gsOf97uRqBs8pXy2E\nijdNvGRsMxXvExxmuByiUZ/Knx4SM7vhutPdQHoBiEbNM3yWeDENdGTzDo9vv+Rk\nd4wgRVmxmBh6mjxwOjPynGZELIjav/+XZm21DZcFf8kG61yxmIjxikY8WFInCyMr\nr4TQKxA9adOBQD2wQwEmR+3RAoGBAM9oLtlNqotCIzNwilYgerMSFEgE352Fxs24\nlPlVseobJNpw7gDkrD3PpWtDpQrCjQKdYXUslhnvB2jCD4d19/ashIYtlMB62kuM\nNv28TFE86W2Cl4n32ZUYyYPfLXh5DffXgKIzfQFSiS0ETT+98uOBS+bYGLdUZYeJ\nConatSa5AoGAf942cdNTcuR/N/SI+VkmL5Azebxeaf8HDHvWzxfQDHyj7v1KlbkX\nVHPeAd+vqqGuX/G2rnCqeF1+5WrUvy6FTn6+382LSWAt0HKjQYwnL6KWX5ouSUBj\ni6id2XgV4EluN2HPJEw5sCn2CmyS2qWrPi8pQ1IGCoMiR5uiaPj1jxc=\n-----END RSA PRIVATE KEY-----\n",
                            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHuMXhi7IDo5AI2mlQQOn29pADCFtPbrA5pfbwnvSvj3kzmgelS/V5IFq8+M7+Jhr7aXKBrDRNmLkAP1FCL6uOfuq1/kWywuJxbXKR6SJwI6VCK+Kd8T289IzA0E1DDpELQEkoTgK9uhBoTJxAy+3w/nU8jiuoG56rqEoiy2ibcAra7pkdrR4saixEiFPBGmTOwnc0AWkg+I42yqCHn79t+s2I8SlTBwrh+kE6LszVPxY6WmQLv0qi2iYycaLKySwtmhmzN7TAX44d3u/12P24b5ST5spd9/Lfp+4yoVQadWwUuG0YkONZkam+8Va2wpfqG9sPoLid1VWwKhidU6+7\n",
                            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx7jF4YuyA6OQCNppUEDp\n9vaQAwhbT26wOaX28J70r495M5oHpUv1eSBavPjO/iYa+2lygaw0TZi5AD9RQi+r\njn7qtf5FssLicW1ykekicCOlQivinfE9vPSMwNBNQw6RC0BJKE4CvboQaEycQMvt\n8P51PI4rqBueq6hKIstom3AK2u6ZHa0eLGosRIhTwRpkzsJ3NAFpIPiONsqgh5+/\nbfrNiPEpUwcK4fpBOi7M1T8WOlpkC79KotomMnGiysksLZoZsze0wF+OHd7v9dj9\nuG+Uk+bKXffy36fuMqFUGnVsFLhtGJDjWZGpvvFWtsKX6hvbD6C4ndVVsCoYnVOv\nuwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "rsa_bits": "2048"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_self_signed_cert.etcd-ca": {
                    "type": "tls_self_signed_cert",
                    "depends_on": [
                        "tls_private_key.etcd-ca"
                    ],
                    "primary": {
                        "id": "90358216459312689930816334299265290269",
                        "attributes": {
                            "allowed_uses.#": "3",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "cert_signing",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDDjCCAfagAwIBAgIQQ/pcBuJNVpuB/EX8y5TQHTANBgkqhkiG9w0BAQsFADAh\nMQ0wCwYDVQQKEwRldGNkMRAwDgYDVQQDEwdldGNkLWNhMB4XDTE4MDQyNTExMjMw\nOFoXDTE5MDQyNTExMjMwOFowITENMAsGA1UEChMEZXRjZDEQMA4GA1UEAxMHZXRj\nZC1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMa9BNlYiOLU1i5R\niiEYEfZ5oX3F5b3/WjvmPlQCF66218ACo6XMYXf8srOg6LFJvvUye2tOcsNMYt8s\nyALOZnq8++saY+SyWHNgd95/Mxd9h9VlCaEjrG5HFBTKflNlG87P87Ozjm2ZfjHt\n6VvTdwVmlKCYezoKH4EGjYAq4Y3SzjsX3P34HjzhD1eAdN5Wzc6mkvosH8Y6LdFx\nEmKfGB7Ce0+0pp8Ic8qr91hhIgWO7ISQDcTUdiI2oORS/fzuIiNL/V/PXur3+suA\nPPusPnn051uv8b682iRBzvaSA1igQvK2fQYBs6c/gJBXOLVS5X824u+qc7eElurz\n7AuP8nECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8w\nHQYDVR0OBBYEFCX16IE66koRPOzdQ1Wamw1SdNoYMA0GCSqGSIb3DQEBCwUAA4IB\nAQCitAxfiv2jqbdt/XjmCr2KkPR7BJY4lfgLQPKxoP3gX7tKzPyWU+PWy+Yg+ZdC\n1TSJt9D6Glp3hqQ+3iVPXyxpZ8Q4cS9xwGqPsNKDJxZeF2P4C86wCmq9t1WEdWFK\nwlMx8IBndmi2F2fKs08HmtvkffmAmCjjTr48xyjGYVjIEj4+FYaumn4/dFdO93oS\nxhZt4ARrnVa5WnI2uisLHMWjCKiVNmyWm1BrcKs7wRbvLopcPwmZOvSvP9PCy0FN\nW30m4kUvobb9fl7xW03Dmeg5+X2ngZa9gwMLLokH17o2qys6u6p8XFTw1EUU7Abp\nnY4V+ERQNhQyL09OYfzIawVV\n-----END CERTIFICATE-----\n",
                            "early_renewal_hours": "0",
                            "id": "90358216459312689930816334299265290269",
                            "is_ca_certificate": "true",
                            "key_algorithm": "RSA",
                            "private_key_pem": "9e2a973a6a831bfcd93c4f680d28f058e03a0ec5",
                            "subject.#": "1",
                            "subject.0.common_name": "etcd-ca",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "etcd",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0",
                            "validity_end_time": "2019-04-25T11:23:08.627329072Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:08.627329072Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                },
                "tls_self_signed_cert.kube-ca": {
                    "type": "tls_self_signed_cert",
                    "depends_on": [
                        "tls_private_key.kube-ca"
                    ],
                    "primary": {
                        "id": "17075922993596064049160997046855598369",
                        "attributes": {
                            "allowed_uses.#": "3",
                            "allowed_uses.0": "key_encipherment",
                            "allowed_uses.1": "digital_signature",
                            "allowed_uses.2": "cert_signing",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQDNi0AR+XH1ELrQLz+dsBITANBgkqhkiG9w0BAQsFADAl\nMREwDwYDVQQKEwhib290a3ViZTEQMA4GA1UEAxMHa3ViZS1jYTAeFw0xODA0MjUx\nMTIzMDhaFw0xOTA0MjUxMTIzMDhaMCUxETAPBgNVBAoTCGJvb3RrdWJlMRAwDgYD\nVQQDEwdrdWJlLWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxO+9\nlMTObnJ2CIuY1Aytoro8ImhHmCPgyPoGGTyoK1e2sS/17ow0yKgWwBTZd64aT2mv\nsbNQkmVdUS5wZPn9z73hMQPRXicyvzNFDCXi92xwaXdBZWs47o3Kqowk+hEmaqBD\n5fxdbZ/jNDCHQ3uT6QLkZdBUAvIAtf8v81Tdxz1PftCQW7EhZnDof8VSTsWkIGyh\n7h/EmpGgwPO77kMcl/D1t2oj9lYCdFtxmmurR+V5LTIu68PYUCrT5IoD76h5wa9l\nS8kOCI8IeKKFZRdGhnv+RpnBzBfU+pJv/XuIJ3Az/NHsbL+oGK4qXMnOLgDFHEbu\nILql/ZJrA9hQaRDL1QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUCCqH0xMguPkFtAZgs38rkfpulKowDQYJKoZIhvcN\nAQELBQADggEBAGLmIZX+7td0iFPoYt/9OjXWQ9C6W3XtLGG6/pZ95TfS1YZOolQI\niBcC7iCTXvwMNJHVYh7UKNWDr8VdfAiYiYwSFgJC7Kgmxraq5DDUfANDGV0xom6q\nnEDx2TVfT0UnH3L2ewU1BCv8dwLKn7H2YIrAwKzGn8jGCZdGz001zFbpWzG1uOqM\n67oWEfDK03lBBKmdj9TCqMwhIdpS94c7KcX7VepfkwAxnAWH6F4Ok+PLz7nTd8SA\nBhj9CJhbP49+kaIVtiBKkg3fwGfjRxmINOy1tl9eynp0xhl6/tq1b2SqF+pRNzp0\nj0J7YBx+caVzNwalvePpGCkSY5zE4TRXuMk=\n-----END CERTIFICATE-----\n",
                            "early_renewal_hours": "0",
                            "id": "17075922993596064049160997046855598369",
                            "is_ca_certificate": "true",
                            "key_algorithm": "RSA",
                            "private_key_pem": "54abf608dfb0c48daf6951de9e4d1d3918ad5f11",
                            "subject.#": "1",
                            "subject.0.common_name": "kube-ca",
                            "subject.0.country": "",
                            "subject.0.locality": "",
                            "subject.0.organization": "bootkube",
                            "subject.0.organizational_unit": "",
                            "subject.0.postal_code": "",
                            "subject.0.province": "",
                            "subject.0.serial_number": "",
                            "subject.0.street_address.#": "0",
                            "validity_end_time": "2019-04-25T11:23:08.987520478Z",
                            "validity_period_hours": "8760",
                            "validity_start_time": "2018-04-25T11:23:08.987520478Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.tls.default"
                }
            },
            "depends_on": []
        }
    ]
}
